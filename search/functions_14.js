var searchData=
[
  ['tbe_5finput_5fcombine_5fcpu_0',['tbe_input_combine_cpu',['../group__input-combine.html#ga4f8f3f8b825c9d7639c1e45e8dc8b689',1,'fbgemm_gpu']]],
  ['tbe_5finput_5fcombine_5fwith_5flength_5fcpu_1',['tbe_input_combine_with_length_cpu',['../namespacefbgemm__gpu.html#a56da764643d07d366219d69333e6f9de',1,'fbgemm_gpu']]],
  ['tbe_5finput_5fcombine_5fwith_5flength_5fcuda_2',['tbe_input_combine_with_length_cuda',['../namespacefbgemm__gpu.html#ae818a54243bd2ea4c0841088f07ff327',1,'fbgemm_gpu']]],
  ['tbe_5finput_5fcombine_5fwith_5flength_5fgpu_3',['tbe_input_combine_with_length_gpu',['../namespacefbgemm__gpu.html#af7db32b23d955e760c7dfb4b29a13ca1',1,'fbgemm_gpu']]],
  ['tensor_5fon_5fsame_5fgpu_5fif_5fnot_5foptional_5fcheck_4',['tensor_on_same_gpu_if_not_optional_check',['../sparse__ops__utils_8h.html#a5a8411338d3eef3620c7f5be3803c7cd',1,'sparse_ops_utils.h']]],
  ['tensoraccessor_5',['TensorAccessor',['../classfbgemm__gpu_1_1_tensor_accessor.html#a6b681d8fc7f13b4b8d31426ec10a0f11',1,'fbgemm_gpu::TensorAccessor::TensorAccessor()'],['../classfbgemm__gpu_1_1_tensor_accessor_3_01_t_00_011_00_01_ptr_traits_00_01index__t_01_4.html#a55169dff4cc835156c5ccd43240b4c8c',1,'fbgemm_gpu::TensorAccessor&lt; T, 1, PtrTraits, index_t &gt;::TensorAccessor()']]],
  ['tensoraccessorbase_6',['TensorAccessorBase',['../classfbgemm__gpu_1_1_tensor_accessor_base.html#ac139dc2b8e88aec4b189a6c41bc135af',1,'fbgemm_gpu::TensorAccessorBase']]],
  ['test_7',['TEST',['../embedding__inplace__update__test_8cpp.html#a8eb96d7f557ba896e48fef81f259d7a5',1,'TEST(EmbeddingInplaceUpdateTest, random_update):&#160;embedding_inplace_update_test.cpp'],['../cpu__kernel__test_8cpp.html#aa2c7091971cf4fd4bcbb3215ebe612cf',1,'TEST(cpu_kernel_test, csr2csc_test):&#160;cpu_kernel_test.cpp'],['../sparse__ops__utils__test_8cpp.html#a9011669ae997bae59aa8f141bd794f11',1,'TEST(sparse_ops_utils_test, undefined_tensors_do_not_trigger):&#160;sparse_ops_utils_test.cpp'],['../sparse__ops__utils__test_8cpp.html#a2d4ac7a4fb22c0789d8510d17f3878db',1,'TEST(sparse_ops_utils_test, cpu_tensors_fail):&#160;sparse_ops_utils_test.cpp'],['../sparse__ops__utils__test_8cpp.html#adc3b9330a7cac1cf2e07268fe7a6bd17',1,'TEST(sparse_ops_utils_test, gpu_tensors_pass):&#160;sparse_ops_utils_test.cpp'],['../sparse__ops__utils__test_8cpp.html#ae888046a03bb3fe0f87d23c4915f6994',1,'TEST(sparse_ops_utils_test, optional_tensor_passes):&#160;sparse_ops_utils_test.cpp'],['../tensor__assert__test_8cpp.html#af3ce575ab5810b31aae3455d53faacee',1,'TEST(tensor_assert_test, gpu_asserts):&#160;tensor_assert_test.cpp'],['../uvm__cache__miss__emulate__test_8cpp.html#aab721325808448b876b97faee4b751b9',1,'TEST(uvm_cache_miss_emulate_test, no_cache_miss):&#160;uvm_cache_miss_emulate_test.cpp'],['../uvm__cache__miss__emulate__test_8cpp.html#acdba631ddc8a5dc4e4ee2c02959d3e14',1,'TEST(uvm_cache_miss_emulate_test, enforced_cache_miss):&#160;uvm_cache_miss_emulate_test.cpp']]],
  ['test_5fembedding_5finplace_5fupdate_8',['test_embedding_inplace_update',['../embedding__inplace__update__test_8cpp.html#aac82e2990c8f2f7d3957f862975181a0',1,'embedding_inplace_update_test.cpp']]],
  ['thrust_5ffind_5fqparams_9',['thrust_find_qparams',['../namespacefbgemm__gpu.html#a6c54f589eee05a58cebd4cf7cf8b1086',1,'fbgemm_gpu::thrust_find_qparams(scalar_t *input_row, int D)'],['../namespacefbgemm__gpu.html#a8145ebe65a5242bd7a3a15de0d69a70b',1,'fbgemm_gpu::thrust_find_qparams(fbgemm_gpu::Vec4T&lt; scalar_t &gt; *input_row, int D)']]],
  ['to_5fbfloat16_10',['to_bfloat16',['../namespacefbgemm__gpu.html#a9d1e20705b5c1c16dd554c81b3766b93',1,'fbgemm_gpu']]],
  ['to_5fbfloat16_5f16_11',['to_bfloat16_16',['../namespacefbgemm__gpu.html#a3f6b99cce95aa3d297e4b824e577d62d',1,'fbgemm_gpu']]],
  ['to_5fbfloat16_5f2_12',['to_bfloat16_2',['../namespacefbgemm__gpu.html#a2b8a7fb1619f338df717ef075fe513e4',1,'fbgemm_gpu']]],
  ['to_5fbfloat16_5f4_13',['to_bfloat16_4',['../namespacefbgemm__gpu.html#a7d0d7114d05a683328a782804ef2bef9',1,'fbgemm_gpu']]],
  ['to_5fbfloat16_5f8_14',['to_bfloat16_8',['../namespacefbgemm__gpu.html#a74f150a063fed3144f6d99cde2d46069',1,'fbgemm_gpu']]],
  ['to_5fhalf_15',['to_half',['../namespacefbgemm__gpu.html#a3e13c4ba1e371f3bcabf7f6f74ac103e',1,'fbgemm_gpu']]],
  ['to_5fhalf16_16',['to_half16',['../namespacefbgemm__gpu.html#a776872b9c8f667b7d05aea83e7287d5d',1,'fbgemm_gpu']]],
  ['to_5fhalf2_17',['to_half2',['../namespacefbgemm__gpu.html#aaed7807ac8eef0fb786324d5935c4aca',1,'fbgemm_gpu']]],
  ['to_5fhalf4_18',['to_half4',['../namespacefbgemm__gpu.html#aee1f23de5e5847146cd821595d1978ae',1,'fbgemm_gpu']]],
  ['to_5fhalf8_19',['to_half8',['../namespacefbgemm__gpu.html#a40088f5e88d0985b0c9b08808c40e1dd',1,'fbgemm_gpu']]],
  ['torch_5flibrary_5ffragment_20',['TORCH_LIBRARY_FRAGMENT',['../gen__embedding__backward__adagrad__split__cpu_8cpp.html#af53d2b0e9d8aeadd7d5094bd03ea25cc',1,'TORCH_LIBRARY_FRAGMENT(fbgemm, m):&#160;gen_embedding_backward_adagrad_split_cpu.cpp'],['../gen__embedding__backward__adagrad__split__unweighted__cuda_8cu.html#af53d2b0e9d8aeadd7d5094bd03ea25cc',1,'TORCH_LIBRARY_FRAGMENT(fbgemm, m):&#160;gen_embedding_backward_adagrad_split_unweighted_cuda.cu'],['../gen__embedding__backward__adagrad__split__unweighted__nobag__cuda_8cu.html#af53d2b0e9d8aeadd7d5094bd03ea25cc',1,'TORCH_LIBRARY_FRAGMENT(fbgemm, m):&#160;gen_embedding_backward_adagrad_split_unweighted_nobag_cuda.cu'],['../gen__embedding__backward__adagrad__split__weighted__cuda_8cu.html#af53d2b0e9d8aeadd7d5094bd03ea25cc',1,'TORCH_LIBRARY_FRAGMENT(fbgemm, m):&#160;gen_embedding_backward_adagrad_split_weighted_cuda.cu'],['../gen__embedding__backward__adam__split__unweighted__cuda_8cu.html#af53d2b0e9d8aeadd7d5094bd03ea25cc',1,'TORCH_LIBRARY_FRAGMENT(fbgemm, m):&#160;gen_embedding_backward_adam_split_unweighted_cuda.cu'],['../gen__embedding__backward__adam__split__unweighted__nobag__cuda_8cu.html#af53d2b0e9d8aeadd7d5094bd03ea25cc',1,'TORCH_LIBRARY_FRAGMENT(fbgemm, m):&#160;gen_embedding_backward_adam_split_unweighted_nobag_cuda.cu'],['../gen__embedding__backward__adam__split__weighted__cuda_8cu.html#af53d2b0e9d8aeadd7d5094bd03ea25cc',1,'TORCH_LIBRARY_FRAGMENT(fbgemm, m):&#160;gen_embedding_backward_adam_split_weighted_cuda.cu'],['../gen__embedding__backward__approx__rowwise__adagrad__with__weight__decay__split__unweighted__cuda_8cu.html#af53d2b0e9d8aeadd7d5094bd03ea25cc',1,'TORCH_LIBRARY_FRAGMENT(fbgemm, m):&#160;gen_embedding_backward_approx_rowwise_adagrad_with_weight_decay_split_unweighted_cuda.cu'],['../gen__embedding__backward__approx__rowwise__adagrad__with__weight__decay__split__unweighted__nobag__cuda_8cu.html#af53d2b0e9d8aeadd7d5094bd03ea25cc',1,'TORCH_LIBRARY_FRAGMENT(fbgemm, m):&#160;gen_embedding_backward_approx_rowwise_adagrad_with_weight_decay_split_unweighted_nobag_cuda.cu'],['../gen__embedding__backward__approx__rowwise__adagrad__with__weight__decay__split__weighted__cuda_8cu.html#af53d2b0e9d8aeadd7d5094bd03ea25cc',1,'TORCH_LIBRARY_FRAGMENT(fbgemm, m):&#160;gen_embedding_backward_approx_rowwise_adagrad_with_weight_decay_split_weighted_cuda.cu'],['../gen__embedding__backward__dense__indice__weights__codegen__cuda_8cu.html#af53d2b0e9d8aeadd7d5094bd03ea25cc',1,'TORCH_LIBRARY_FRAGMENT(fbgemm, m):&#160;gen_embedding_backward_dense_indice_weights_codegen_cuda.cu'],['../gen__embedding__backward__dense__split__cpu_8cpp.html#af53d2b0e9d8aeadd7d5094bd03ea25cc',1,'TORCH_LIBRARY_FRAGMENT(fbgemm, m):&#160;gen_embedding_backward_dense_split_cpu.cpp'],['../gen__embedding__backward__dense__split__unweighted__cuda_8cu.html#af53d2b0e9d8aeadd7d5094bd03ea25cc',1,'TORCH_LIBRARY_FRAGMENT(fbgemm, m):&#160;gen_embedding_backward_dense_split_unweighted_cuda.cu'],['../gen__embedding__backward__dense__split__unweighted__nobag__cuda_8cu.html#af53d2b0e9d8aeadd7d5094bd03ea25cc',1,'TORCH_LIBRARY_FRAGMENT(fbgemm, m):&#160;gen_embedding_backward_dense_split_unweighted_nobag_cuda.cu'],['../gen__embedding__backward__dense__split__weighted__cuda_8cu.html#af53d2b0e9d8aeadd7d5094bd03ea25cc',1,'TORCH_LIBRARY_FRAGMENT(fbgemm, m):&#160;gen_embedding_backward_dense_split_weighted_cuda.cu'],['../gen__embedding__backward__lamb__split__unweighted__cuda_8cu.html#af53d2b0e9d8aeadd7d5094bd03ea25cc',1,'TORCH_LIBRARY_FRAGMENT(fbgemm, m):&#160;gen_embedding_backward_lamb_split_unweighted_cuda.cu'],['../gen__embedding__backward__lamb__split__unweighted__nobag__cuda_8cu.html#af53d2b0e9d8aeadd7d5094bd03ea25cc',1,'TORCH_LIBRARY_FRAGMENT(fbgemm, m):&#160;gen_embedding_backward_lamb_split_unweighted_nobag_cuda.cu'],['../gen__embedding__backward__lamb__split__weighted__cuda_8cu.html#af53d2b0e9d8aeadd7d5094bd03ea25cc',1,'TORCH_LIBRARY_FRAGMENT(fbgemm, m):&#160;gen_embedding_backward_lamb_split_weighted_cuda.cu'],['../gen__embedding__backward__lars__sgd__split__unweighted__cuda_8cu.html#af53d2b0e9d8aeadd7d5094bd03ea25cc',1,'TORCH_LIBRARY_FRAGMENT(fbgemm, m):&#160;gen_embedding_backward_lars_sgd_split_unweighted_cuda.cu'],['../gen__embedding__backward__lars__sgd__split__unweighted__nobag__cuda_8cu.html#af53d2b0e9d8aeadd7d5094bd03ea25cc',1,'TORCH_LIBRARY_FRAGMENT(fbgemm, m):&#160;gen_embedding_backward_lars_sgd_split_unweighted_nobag_cuda.cu'],['../gen__embedding__backward__lars__sgd__split__weighted__cuda_8cu.html#af53d2b0e9d8aeadd7d5094bd03ea25cc',1,'TORCH_LIBRARY_FRAGMENT(fbgemm, m):&#160;gen_embedding_backward_lars_sgd_split_weighted_cuda.cu'],['../gen__embedding__backward__none__split__unweighted__cuda_8cu.html#af53d2b0e9d8aeadd7d5094bd03ea25cc',1,'TORCH_LIBRARY_FRAGMENT(fbgemm, m):&#160;gen_embedding_backward_none_split_unweighted_cuda.cu'],['../gen__embedding__backward__none__split__unweighted__nobag__cuda_8cu.html#af53d2b0e9d8aeadd7d5094bd03ea25cc',1,'TORCH_LIBRARY_FRAGMENT(fbgemm, m):&#160;gen_embedding_backward_none_split_unweighted_nobag_cuda.cu'],['../gen__embedding__backward__none__split__weighted__cuda_8cu.html#af53d2b0e9d8aeadd7d5094bd03ea25cc',1,'TORCH_LIBRARY_FRAGMENT(fbgemm, m):&#160;gen_embedding_backward_none_split_weighted_cuda.cu'],['../gen__embedding__backward__partial__rowwise__adam__split__unweighted__cuda_8cu.html#af53d2b0e9d8aeadd7d5094bd03ea25cc',1,'TORCH_LIBRARY_FRAGMENT(fbgemm, m):&#160;gen_embedding_backward_partial_rowwise_adam_split_unweighted_cuda.cu'],['../gen__embedding__backward__partial__rowwise__adam__split__unweighted__nobag__cuda_8cu.html#af53d2b0e9d8aeadd7d5094bd03ea25cc',1,'TORCH_LIBRARY_FRAGMENT(fbgemm, m):&#160;gen_embedding_backward_partial_rowwise_adam_split_unweighted_nobag_cuda.cu'],['../gen__embedding__backward__partial__rowwise__adam__split__weighted__cuda_8cu.html#af53d2b0e9d8aeadd7d5094bd03ea25cc',1,'TORCH_LIBRARY_FRAGMENT(fbgemm, m):&#160;gen_embedding_backward_partial_rowwise_adam_split_weighted_cuda.cu'],['../gen__embedding__backward__partial__rowwise__lamb__split__unweighted__cuda_8cu.html#af53d2b0e9d8aeadd7d5094bd03ea25cc',1,'TORCH_LIBRARY_FRAGMENT(fbgemm, m):&#160;gen_embedding_backward_partial_rowwise_lamb_split_unweighted_cuda.cu'],['../gen__embedding__backward__partial__rowwise__lamb__split__unweighted__nobag__cuda_8cu.html#af53d2b0e9d8aeadd7d5094bd03ea25cc',1,'TORCH_LIBRARY_FRAGMENT(fbgemm, m):&#160;gen_embedding_backward_partial_rowwise_lamb_split_unweighted_nobag_cuda.cu'],['../gen__embedding__backward__partial__rowwise__lamb__split__weighted__cuda_8cu.html#af53d2b0e9d8aeadd7d5094bd03ea25cc',1,'TORCH_LIBRARY_FRAGMENT(fbgemm, m):&#160;gen_embedding_backward_partial_rowwise_lamb_split_weighted_cuda.cu'],['../gen__embedding__backward__rowwise__adagrad__split__cpu_8cpp.html#af53d2b0e9d8aeadd7d5094bd03ea25cc',1,'TORCH_LIBRARY_FRAGMENT(fbgemm, m):&#160;gen_embedding_backward_rowwise_adagrad_split_cpu.cpp'],['../gen__embedding__backward__rowwise__adagrad__split__unweighted__cuda_8cu.html#af53d2b0e9d8aeadd7d5094bd03ea25cc',1,'TORCH_LIBRARY_FRAGMENT(fbgemm, m):&#160;gen_embedding_backward_rowwise_adagrad_split_unweighted_cuda.cu'],['../gen__embedding__backward__rowwise__adagrad__split__unweighted__nobag__cuda_8cu.html#af53d2b0e9d8aeadd7d5094bd03ea25cc',1,'TORCH_LIBRARY_FRAGMENT(fbgemm, m):&#160;gen_embedding_backward_rowwise_adagrad_split_unweighted_nobag_cuda.cu'],['../gen__embedding__backward__rowwise__adagrad__split__unweighted__vbe__cuda_8cu.html#af53d2b0e9d8aeadd7d5094bd03ea25cc',1,'TORCH_LIBRARY_FRAGMENT(fbgemm, m):&#160;gen_embedding_backward_rowwise_adagrad_split_unweighted_vbe_cuda.cu'],['../gen__embedding__backward__rowwise__adagrad__split__weighted__cuda_8cu.html#af53d2b0e9d8aeadd7d5094bd03ea25cc',1,'TORCH_LIBRARY_FRAGMENT(fbgemm, m):&#160;gen_embedding_backward_rowwise_adagrad_split_weighted_cuda.cu'],['../gen__embedding__backward__rowwise__adagrad__split__weighted__vbe__cuda_8cu.html#af53d2b0e9d8aeadd7d5094bd03ea25cc',1,'TORCH_LIBRARY_FRAGMENT(fbgemm, m):&#160;gen_embedding_backward_rowwise_adagrad_split_weighted_vbe_cuda.cu'],['../gen__embedding__backward__rowwise__adagrad__with__counter__split__cpu_8cpp.html#af53d2b0e9d8aeadd7d5094bd03ea25cc',1,'TORCH_LIBRARY_FRAGMENT(fbgemm, m):&#160;gen_embedding_backward_rowwise_adagrad_with_counter_split_cpu.cpp'],['../gen__embedding__backward__rowwise__adagrad__with__counter__split__unweighted__cuda_8cu.html#af53d2b0e9d8aeadd7d5094bd03ea25cc',1,'TORCH_LIBRARY_FRAGMENT(fbgemm, m):&#160;gen_embedding_backward_rowwise_adagrad_with_counter_split_unweighted_cuda.cu'],['../gen__embedding__backward__rowwise__adagrad__with__counter__split__unweighted__nobag__cuda_8cu.html#af53d2b0e9d8aeadd7d5094bd03ea25cc',1,'TORCH_LIBRARY_FRAGMENT(fbgemm, m):&#160;gen_embedding_backward_rowwise_adagrad_with_counter_split_unweighted_nobag_cuda.cu'],['../gen__embedding__backward__rowwise__adagrad__with__counter__split__weighted__cuda_8cu.html#af53d2b0e9d8aeadd7d5094bd03ea25cc',1,'TORCH_LIBRARY_FRAGMENT(fbgemm, m):&#160;gen_embedding_backward_rowwise_adagrad_with_counter_split_weighted_cuda.cu'],['../gen__embedding__backward__rowwise__adagrad__with__weight__decay__split__unweighted__cuda_8cu.html#af53d2b0e9d8aeadd7d5094bd03ea25cc',1,'TORCH_LIBRARY_FRAGMENT(fbgemm, m):&#160;gen_embedding_backward_rowwise_adagrad_with_weight_decay_split_unweighted_cuda.cu'],['../gen__embedding__backward__rowwise__adagrad__with__weight__decay__split__unweighted__nobag__cuda_8cu.html#af53d2b0e9d8aeadd7d5094bd03ea25cc',1,'TORCH_LIBRARY_FRAGMENT(fbgemm, m):&#160;gen_embedding_backward_rowwise_adagrad_with_weight_decay_split_unweighted_nobag_cuda.cu'],['../gen__embedding__backward__rowwise__adagrad__with__weight__decay__split__weighted__cuda_8cu.html#af53d2b0e9d8aeadd7d5094bd03ea25cc',1,'TORCH_LIBRARY_FRAGMENT(fbgemm, m):&#160;gen_embedding_backward_rowwise_adagrad_with_weight_decay_split_weighted_cuda.cu'],['../gen__embedding__backward__rowwise__weighted__adagrad__split__cpu_8cpp.html#af53d2b0e9d8aeadd7d5094bd03ea25cc',1,'TORCH_LIBRARY_FRAGMENT(fbgemm, m):&#160;gen_embedding_backward_rowwise_weighted_adagrad_split_cpu.cpp'],['../gen__embedding__backward__rowwise__weighted__adagrad__split__unweighted__cuda_8cu.html#af53d2b0e9d8aeadd7d5094bd03ea25cc',1,'TORCH_LIBRARY_FRAGMENT(fbgemm, m):&#160;gen_embedding_backward_rowwise_weighted_adagrad_split_unweighted_cuda.cu'],['../gen__embedding__backward__rowwise__weighted__adagrad__split__unweighted__nobag__cuda_8cu.html#af53d2b0e9d8aeadd7d5094bd03ea25cc',1,'TORCH_LIBRARY_FRAGMENT(fbgemm, m):&#160;gen_embedding_backward_rowwise_weighted_adagrad_split_unweighted_nobag_cuda.cu'],['../gen__embedding__backward__rowwise__weighted__adagrad__split__weighted__cuda_8cu.html#af53d2b0e9d8aeadd7d5094bd03ea25cc',1,'TORCH_LIBRARY_FRAGMENT(fbgemm, m):&#160;gen_embedding_backward_rowwise_weighted_adagrad_split_weighted_cuda.cu'],['../gen__embedding__backward__sgd__split__cpu_8cpp.html#af53d2b0e9d8aeadd7d5094bd03ea25cc',1,'TORCH_LIBRARY_FRAGMENT(fbgemm, m):&#160;gen_embedding_backward_sgd_split_cpu.cpp'],['../gen__embedding__backward__sgd__split__unweighted__cuda_8cu.html#af53d2b0e9d8aeadd7d5094bd03ea25cc',1,'TORCH_LIBRARY_FRAGMENT(fbgemm, m):&#160;gen_embedding_backward_sgd_split_unweighted_cuda.cu'],['../gen__embedding__backward__sgd__split__unweighted__nobag__cuda_8cu.html#af53d2b0e9d8aeadd7d5094bd03ea25cc',1,'TORCH_LIBRARY_FRAGMENT(fbgemm, m):&#160;gen_embedding_backward_sgd_split_unweighted_nobag_cuda.cu'],['../gen__embedding__backward__sgd__split__unweighted__vbe__cuda_8cu.html#af53d2b0e9d8aeadd7d5094bd03ea25cc',1,'TORCH_LIBRARY_FRAGMENT(fbgemm, m):&#160;gen_embedding_backward_sgd_split_unweighted_vbe_cuda.cu'],['../gen__embedding__backward__sgd__split__weighted__cuda_8cu.html#af53d2b0e9d8aeadd7d5094bd03ea25cc',1,'TORCH_LIBRARY_FRAGMENT(fbgemm, m):&#160;gen_embedding_backward_sgd_split_weighted_cuda.cu'],['../gen__embedding__backward__sgd__split__weighted__vbe__cuda_8cu.html#af53d2b0e9d8aeadd7d5094bd03ea25cc',1,'TORCH_LIBRARY_FRAGMENT(fbgemm, m):&#160;gen_embedding_backward_sgd_split_weighted_vbe_cuda.cu'],['../gen__embedding__backward__split__adagrad_8cpp.html#ad1913bdf24279dfcc3932843af149fd0',1,'TORCH_LIBRARY_FRAGMENT(fb, m):&#160;gen_embedding_backward_split_adagrad.cpp'],['../gen__embedding__backward__split__adagrad_8cpp.html#af53d2b0e9d8aeadd7d5094bd03ea25cc',1,'TORCH_LIBRARY_FRAGMENT(fbgemm, m):&#160;gen_embedding_backward_split_adagrad.cpp'],['../gen__embedding__backward__split__adam_8cpp.html#ad1913bdf24279dfcc3932843af149fd0',1,'TORCH_LIBRARY_FRAGMENT(fb, m):&#160;gen_embedding_backward_split_adam.cpp'],['../gen__embedding__backward__split__adam_8cpp.html#af53d2b0e9d8aeadd7d5094bd03ea25cc',1,'TORCH_LIBRARY_FRAGMENT(fbgemm, m):&#160;gen_embedding_backward_split_adam.cpp'],['../gen__embedding__backward__split__approx__rowwise__adagrad_8cpp.html#ad1913bdf24279dfcc3932843af149fd0',1,'TORCH_LIBRARY_FRAGMENT(fb, m):&#160;gen_embedding_backward_split_approx_rowwise_adagrad.cpp'],['../gen__embedding__backward__split__approx__rowwise__adagrad_8cpp.html#af53d2b0e9d8aeadd7d5094bd03ea25cc',1,'TORCH_LIBRARY_FRAGMENT(fbgemm, m):&#160;gen_embedding_backward_split_approx_rowwise_adagrad.cpp'],['../gen__embedding__backward__split__approx__rowwise__adagrad__with__counter_8cpp.html#ad1913bdf24279dfcc3932843af149fd0',1,'TORCH_LIBRARY_FRAGMENT(fb, m):&#160;gen_embedding_backward_split_approx_rowwise_adagrad_with_counter.cpp'],['../gen__embedding__backward__split__approx__rowwise__adagrad__with__counter_8cpp.html#af53d2b0e9d8aeadd7d5094bd03ea25cc',1,'TORCH_LIBRARY_FRAGMENT(fbgemm, m):&#160;gen_embedding_backward_split_approx_rowwise_adagrad_with_counter.cpp'],['../gen__embedding__backward__split__approx__rowwise__adagrad__with__weight__decay_8cpp.html#ad1913bdf24279dfcc3932843af149fd0',1,'TORCH_LIBRARY_FRAGMENT(fb, m):&#160;gen_embedding_backward_split_approx_rowwise_adagrad_with_weight_decay.cpp'],['../gen__embedding__backward__split__approx__rowwise__adagrad__with__weight__decay_8cpp.html#af53d2b0e9d8aeadd7d5094bd03ea25cc',1,'TORCH_LIBRARY_FRAGMENT(fbgemm, m):&#160;gen_embedding_backward_split_approx_rowwise_adagrad_with_weight_decay.cpp'],['../gen__embedding__backward__split__approx__sgd_8cpp.html#ad1913bdf24279dfcc3932843af149fd0',1,'TORCH_LIBRARY_FRAGMENT(fb, m):&#160;gen_embedding_backward_split_approx_sgd.cpp'],['../gen__embedding__backward__split__approx__sgd_8cpp.html#af53d2b0e9d8aeadd7d5094bd03ea25cc',1,'TORCH_LIBRARY_FRAGMENT(fbgemm, m):&#160;gen_embedding_backward_split_approx_sgd.cpp'],['../gen__embedding__backward__split__indice__weights__codegen__cuda_8cu.html#af53d2b0e9d8aeadd7d5094bd03ea25cc',1,'TORCH_LIBRARY_FRAGMENT(fbgemm, m):&#160;gen_embedding_backward_split_indice_weights_codegen_cuda.cu'],['../gen__embedding__backward__split__lamb_8cpp.html#ad1913bdf24279dfcc3932843af149fd0',1,'TORCH_LIBRARY_FRAGMENT(fb, m):&#160;gen_embedding_backward_split_lamb.cpp'],['../gen__embedding__backward__split__lamb_8cpp.html#af53d2b0e9d8aeadd7d5094bd03ea25cc',1,'TORCH_LIBRARY_FRAGMENT(fbgemm, m):&#160;gen_embedding_backward_split_lamb.cpp'],['../gen__embedding__backward__split__lars__sgd_8cpp.html#ad1913bdf24279dfcc3932843af149fd0',1,'TORCH_LIBRARY_FRAGMENT(fb, m):&#160;gen_embedding_backward_split_lars_sgd.cpp'],['../gen__embedding__backward__split__lars__sgd_8cpp.html#af53d2b0e9d8aeadd7d5094bd03ea25cc',1,'TORCH_LIBRARY_FRAGMENT(fbgemm, m):&#160;gen_embedding_backward_split_lars_sgd.cpp'],['../gen__embedding__backward__split__none_8cpp.html#ad1913bdf24279dfcc3932843af149fd0',1,'TORCH_LIBRARY_FRAGMENT(fb, m):&#160;gen_embedding_backward_split_none.cpp'],['../gen__embedding__backward__split__none_8cpp.html#af53d2b0e9d8aeadd7d5094bd03ea25cc',1,'TORCH_LIBRARY_FRAGMENT(fbgemm, m):&#160;gen_embedding_backward_split_none.cpp'],['../gen__embedding__backward__split__partial__rowwise__adam_8cpp.html#ad1913bdf24279dfcc3932843af149fd0',1,'TORCH_LIBRARY_FRAGMENT(fb, m):&#160;gen_embedding_backward_split_partial_rowwise_adam.cpp'],['../gen__embedding__backward__split__partial__rowwise__adam_8cpp.html#af53d2b0e9d8aeadd7d5094bd03ea25cc',1,'TORCH_LIBRARY_FRAGMENT(fbgemm, m):&#160;gen_embedding_backward_split_partial_rowwise_adam.cpp'],['../gen__embedding__backward__split__partial__rowwise__lamb_8cpp.html#ad1913bdf24279dfcc3932843af149fd0',1,'TORCH_LIBRARY_FRAGMENT(fb, m):&#160;gen_embedding_backward_split_partial_rowwise_lamb.cpp'],['../gen__embedding__backward__split__partial__rowwise__lamb_8cpp.html#af53d2b0e9d8aeadd7d5094bd03ea25cc',1,'TORCH_LIBRARY_FRAGMENT(fbgemm, m):&#160;gen_embedding_backward_split_partial_rowwise_lamb.cpp'],['../gen__embedding__backward__split__rowwise__adagrad_8cpp.html#ad1913bdf24279dfcc3932843af149fd0',1,'TORCH_LIBRARY_FRAGMENT(fb, m):&#160;gen_embedding_backward_split_rowwise_adagrad.cpp'],['../gen__embedding__backward__split__rowwise__adagrad_8cpp.html#af53d2b0e9d8aeadd7d5094bd03ea25cc',1,'TORCH_LIBRARY_FRAGMENT(fbgemm, m):&#160;gen_embedding_backward_split_rowwise_adagrad.cpp'],['../gen__embedding__backward__split__rowwise__adagrad__with__counter_8cpp.html#ad1913bdf24279dfcc3932843af149fd0',1,'TORCH_LIBRARY_FRAGMENT(fb, m):&#160;gen_embedding_backward_split_rowwise_adagrad_with_counter.cpp'],['../gen__embedding__backward__split__rowwise__adagrad__with__counter_8cpp.html#af53d2b0e9d8aeadd7d5094bd03ea25cc',1,'TORCH_LIBRARY_FRAGMENT(fbgemm, m):&#160;gen_embedding_backward_split_rowwise_adagrad_with_counter.cpp'],['../gen__embedding__backward__split__rowwise__adagrad__with__weight__decay_8cpp.html#ad1913bdf24279dfcc3932843af149fd0',1,'TORCH_LIBRARY_FRAGMENT(fb, m):&#160;gen_embedding_backward_split_rowwise_adagrad_with_weight_decay.cpp'],['../gen__embedding__backward__split__rowwise__adagrad__with__weight__decay_8cpp.html#af53d2b0e9d8aeadd7d5094bd03ea25cc',1,'TORCH_LIBRARY_FRAGMENT(fbgemm, m):&#160;gen_embedding_backward_split_rowwise_adagrad_with_weight_decay.cpp'],['../gen__embedding__backward__split__rowwise__weighted__adagrad_8cpp.html#ad1913bdf24279dfcc3932843af149fd0',1,'TORCH_LIBRARY_FRAGMENT(fb, m):&#160;gen_embedding_backward_split_rowwise_weighted_adagrad.cpp'],['../gen__embedding__backward__split__rowwise__weighted__adagrad_8cpp.html#af53d2b0e9d8aeadd7d5094bd03ea25cc',1,'TORCH_LIBRARY_FRAGMENT(fbgemm, m):&#160;gen_embedding_backward_split_rowwise_weighted_adagrad.cpp'],['../gen__embedding__backward__split__sgd_8cpp.html#ad1913bdf24279dfcc3932843af149fd0',1,'TORCH_LIBRARY_FRAGMENT(fb, m):&#160;gen_embedding_backward_split_sgd.cpp'],['../gen__embedding__backward__split__sgd_8cpp.html#af53d2b0e9d8aeadd7d5094bd03ea25cc',1,'TORCH_LIBRARY_FRAGMENT(fbgemm, m):&#160;gen_embedding_backward_split_sgd.cpp'],['../gen__embedding__forward__dense__unweighted__codegen__cuda_8cu.html#af53d2b0e9d8aeadd7d5094bd03ea25cc',1,'TORCH_LIBRARY_FRAGMENT(fbgemm, m):&#160;gen_embedding_forward_dense_unweighted_codegen_cuda.cu'],['../gen__embedding__forward__dense__unweighted__codegen__meta_8cpp.html#af53d2b0e9d8aeadd7d5094bd03ea25cc',1,'TORCH_LIBRARY_FRAGMENT(fbgemm, m):&#160;gen_embedding_forward_dense_unweighted_codegen_meta.cpp'],['../gen__embedding__forward__dense__weighted__codegen__cuda_8cu.html#af53d2b0e9d8aeadd7d5094bd03ea25cc',1,'TORCH_LIBRARY_FRAGMENT(fbgemm, m):&#160;gen_embedding_forward_dense_weighted_codegen_cuda.cu'],['../gen__embedding__forward__dense__weighted__codegen__meta_8cpp.html#af53d2b0e9d8aeadd7d5094bd03ea25cc',1,'TORCH_LIBRARY_FRAGMENT(fbgemm, m):&#160;gen_embedding_forward_dense_weighted_codegen_meta.cpp'],['../gen__embedding__forward__split__unweighted__codegen__cuda_8cu.html#af53d2b0e9d8aeadd7d5094bd03ea25cc',1,'TORCH_LIBRARY_FRAGMENT(fbgemm, m):&#160;gen_embedding_forward_split_unweighted_codegen_cuda.cu'],['../gen__embedding__forward__split__unweighted__codegen__meta_8cpp.html#af53d2b0e9d8aeadd7d5094bd03ea25cc',1,'TORCH_LIBRARY_FRAGMENT(fbgemm, m):&#160;gen_embedding_forward_split_unweighted_codegen_meta.cpp'],['../gen__embedding__forward__split__unweighted__vbe__codegen__cuda_8cu.html#af53d2b0e9d8aeadd7d5094bd03ea25cc',1,'TORCH_LIBRARY_FRAGMENT(fbgemm, m):&#160;gen_embedding_forward_split_unweighted_vbe_codegen_cuda.cu'],['../gen__embedding__forward__split__unweighted__vbe__codegen__meta_8cpp.html#af53d2b0e9d8aeadd7d5094bd03ea25cc',1,'TORCH_LIBRARY_FRAGMENT(fbgemm, m):&#160;gen_embedding_forward_split_unweighted_vbe_codegen_meta.cpp'],['../gen__embedding__forward__split__weighted__codegen__cuda_8cu.html#af53d2b0e9d8aeadd7d5094bd03ea25cc',1,'TORCH_LIBRARY_FRAGMENT(fbgemm, m):&#160;gen_embedding_forward_split_weighted_codegen_cuda.cu'],['../gen__embedding__forward__split__weighted__codegen__meta_8cpp.html#af53d2b0e9d8aeadd7d5094bd03ea25cc',1,'TORCH_LIBRARY_FRAGMENT(fbgemm, m):&#160;gen_embedding_forward_split_weighted_codegen_meta.cpp'],['../gen__embedding__forward__split__weighted__vbe__codegen__cuda_8cu.html#af53d2b0e9d8aeadd7d5094bd03ea25cc',1,'TORCH_LIBRARY_FRAGMENT(fbgemm, m):&#160;gen_embedding_forward_split_weighted_vbe_codegen_cuda.cu'],['../gen__embedding__forward__split__weighted__vbe__codegen__meta_8cpp.html#af53d2b0e9d8aeadd7d5094bd03ea25cc',1,'TORCH_LIBRARY_FRAGMENT(fbgemm, m):&#160;gen_embedding_forward_split_weighted_vbe_codegen_meta.cpp'],['../gen__embedding__optimizer__rowwise__adagrad__split_8cpp.html#af53d2b0e9d8aeadd7d5094bd03ea25cc',1,'TORCH_LIBRARY_FRAGMENT(fbgemm, m):&#160;gen_embedding_optimizer_rowwise_adagrad_split.cpp'],['../batch__index__select__dim0__cpu__host_8cpp.html#ad1913bdf24279dfcc3932843af149fd0',1,'TORCH_LIBRARY_FRAGMENT(fb, m):&#160;batch_index_select_dim0_cpu_host.cpp'],['../batch__index__select__dim0__cpu__host_8cpp.html#af53d2b0e9d8aeadd7d5094bd03ea25cc',1,'TORCH_LIBRARY_FRAGMENT(fbgemm, m):&#160;batch_index_select_dim0_cpu_host.cpp'],['../batch__index__select__dim0__host_8cpp.html#ad1913bdf24279dfcc3932843af149fd0',1,'TORCH_LIBRARY_FRAGMENT(fb, m):&#160;batch_index_select_dim0_host.cpp'],['../batch__index__select__dim0__host_8cpp.html#af53d2b0e9d8aeadd7d5094bd03ea25cc',1,'TORCH_LIBRARY_FRAGMENT(fbgemm, m):&#160;batch_index_select_dim0_host.cpp'],['../embedding__backward__dense__host_8cpp.html#ad1913bdf24279dfcc3932843af149fd0',1,'TORCH_LIBRARY_FRAGMENT(fb, m):&#160;embedding_backward_dense_host.cpp'],['../embedding__backward__dense__host_8cpp.html#af53d2b0e9d8aeadd7d5094bd03ea25cc',1,'TORCH_LIBRARY_FRAGMENT(fbgemm, m):&#160;embedding_backward_dense_host.cpp'],['../embedding__bounds__check__host_8cpp.html#ad1913bdf24279dfcc3932843af149fd0',1,'TORCH_LIBRARY_FRAGMENT(fb, m):&#160;embedding_bounds_check_host.cpp'],['../embedding__bounds__check__host_8cpp.html#af53d2b0e9d8aeadd7d5094bd03ea25cc',1,'TORCH_LIBRARY_FRAGMENT(fbgemm, m):&#160;embedding_bounds_check_host.cpp'],['../embedding__bounds__check__host__cpu_8cpp.html#ad1913bdf24279dfcc3932843af149fd0',1,'TORCH_LIBRARY_FRAGMENT(fb, m):&#160;embedding_bounds_check_host_cpu.cpp'],['../embedding__bounds__check__host__cpu_8cpp.html#af53d2b0e9d8aeadd7d5094bd03ea25cc',1,'TORCH_LIBRARY_FRAGMENT(fbgemm, m):&#160;embedding_bounds_check_host_cpu.cpp'],['../embedding__forward__quantized__host_8cpp.html#af53d2b0e9d8aeadd7d5094bd03ea25cc',1,'TORCH_LIBRARY_FRAGMENT(fbgemm, m):&#160;embedding_forward_quantized_host.cpp'],['../embedding__forward__quantized__host__cpu_8cpp.html#af53d2b0e9d8aeadd7d5094bd03ea25cc',1,'TORCH_LIBRARY_FRAGMENT(fbgemm, m):&#160;embedding_forward_quantized_host_cpu.cpp'],['../embedding__optimizer__split__host__template_8cpp.html#af53d2b0e9d8aeadd7d5094bd03ea25cc',1,'TORCH_LIBRARY_FRAGMENT(fbgemm, m):&#160;embedding_optimizer_split_host_template.cpp'],['../embedding__inplace__update__cpu_8cpp.html#af53d2b0e9d8aeadd7d5094bd03ea25cc',1,'TORCH_LIBRARY_FRAGMENT(fbgemm, m):&#160;embedding_inplace_update_cpu.cpp'],['../embedding__inplace__update__gpu_8cpp.html#af53d2b0e9d8aeadd7d5094bd03ea25cc',1,'TORCH_LIBRARY_FRAGMENT(fbgemm, m):&#160;embedding_inplace_update_gpu.cpp'],['../input__combine__cpu_8cpp.html#af53d2b0e9d8aeadd7d5094bd03ea25cc',1,'TORCH_LIBRARY_FRAGMENT(fbgemm, m):&#160;input_combine_cpu.cpp'],['../jagged__tensor__ops__cpu_8cpp.html#af53d2b0e9d8aeadd7d5094bd03ea25cc',1,'TORCH_LIBRARY_FRAGMENT(fbgemm, m):&#160;jagged_tensor_ops_cpu.cpp'],['../layout__transform__ops__cpu_8cpp.html#af53d2b0e9d8aeadd7d5094bd03ea25cc',1,'TORCH_LIBRARY_FRAGMENT(fbgemm, m):&#160;layout_transform_ops_cpu.cpp'],['../namespacefbgemm__gpu.html#af53d2b0e9d8aeadd7d5094bd03ea25cc',1,'fbgemm_gpu::TORCH_LIBRARY_FRAGMENT()'],['../merge__pooled__embedding__ops__cpu_8cpp.html#af53d2b0e9d8aeadd7d5094bd03ea25cc',1,'TORCH_LIBRARY_FRAGMENT(fbgemm, m):&#160;merge_pooled_embedding_ops_cpu.cpp'],['../merge__pooled__embedding__ops__gpu_8cpp.html#af53d2b0e9d8aeadd7d5094bd03ea25cc',1,'TORCH_LIBRARY_FRAGMENT(fbgemm, m):&#160;merge_pooled_embedding_ops_gpu.cpp'],['../permute__pooled__embedding__ops__cpu_8cpp.html#af53d2b0e9d8aeadd7d5094bd03ea25cc',1,'TORCH_LIBRARY_FRAGMENT(fbgemm, m):&#160;permute_pooled_embedding_ops_cpu.cpp'],['../permute__pooled__embedding__ops__gpu_8cpp.html#af53d2b0e9d8aeadd7d5094bd03ea25cc',1,'TORCH_LIBRARY_FRAGMENT(fbgemm, m):&#160;permute_pooled_embedding_ops_gpu.cpp'],['../permute__pooled__embedding__ops__split__cpu_8cpp.html#af53d2b0e9d8aeadd7d5094bd03ea25cc',1,'TORCH_LIBRARY_FRAGMENT(fbgemm, m):&#160;permute_pooled_embedding_ops_split_cpu.cpp'],['../permute__pooled__embedding__ops__split__gpu_8cpp.html#af53d2b0e9d8aeadd7d5094bd03ea25cc',1,'TORCH_LIBRARY_FRAGMENT(fbgemm, m):&#160;permute_pooled_embedding_ops_split_gpu.cpp'],['../quantize__ops__cpu_8cpp.html#af53d2b0e9d8aeadd7d5094bd03ea25cc',1,'TORCH_LIBRARY_FRAGMENT(fbgemm, m):&#160;quantize_ops_cpu.cpp'],['../sparse__ops__cpu_8cpp.html#af53d2b0e9d8aeadd7d5094bd03ea25cc',1,'TORCH_LIBRARY_FRAGMENT(fbgemm, m):&#160;sparse_ops_cpu.cpp'],['../sparse__ops__gpu_8cpp.html#af53d2b0e9d8aeadd7d5094bd03ea25cc',1,'TORCH_LIBRARY_FRAGMENT(fbgemm, m):&#160;sparse_ops_gpu.cpp'],['../sparse__zipf_8cu.html#af53d2b0e9d8aeadd7d5094bd03ea25cc',1,'TORCH_LIBRARY_FRAGMENT(fbgemm, m):&#160;sparse_zipf.cu'],['../split__embeddings__utils_8cpp.html#af53d2b0e9d8aeadd7d5094bd03ea25cc',1,'TORCH_LIBRARY_FRAGMENT(fbgemm, m):&#160;split_embeddings_utils.cpp']]],
  ['torch_5flibrary_5fimpl_21',['TORCH_LIBRARY_IMPL',['../namespacefbgemm__gpu.html#a257a9d9e0a71b3a1299af6ef9c6c3a78',1,'fbgemm_gpu::TORCH_LIBRARY_IMPL()'],['../jagged__tensor__ops__autograd_8cpp.html#a89761ba0ed893bf88bdfdd1f6d15bc65',1,'TORCH_LIBRARY_IMPL(fbgemm, Autograd, m):&#160;jagged_tensor_ops_autograd.cpp'],['../jagged__tensor__ops__autograd_8cpp.html#a5eca359a14102dd9fcab1f8e80594472',1,'TORCH_LIBRARY_IMPL(fbgemm, CompositeImplicitAutograd, m):&#160;jagged_tensor_ops_autograd.cpp'],['../jagged__tensor__ops__cpu_8cpp.html#a26b96ceaa00c9be7dbba99ca0b772a58',1,'TORCH_LIBRARY_IMPL(fbgemm, CPU, m):&#160;jagged_tensor_ops_cpu.cpp'],['../jagged__tensor__ops__cpu_8cpp.html#aa138561d0eb99d73b2bf9586b84e7c46',1,'TORCH_LIBRARY_IMPL(fbgemm, CompositeExplicitAutograd, m):&#160;jagged_tensor_ops_cpu.cpp'],['../jagged__tensor__ops__meta_8cpp.html#a5a1490b57e6f9b7f7f7b12c0359a2f91',1,'TORCH_LIBRARY_IMPL(fbgemm, Meta, m):&#160;jagged_tensor_ops_meta.cpp'],['../layout__transform__ops__cpu_8cpp.html#a26b96ceaa00c9be7dbba99ca0b772a58',1,'TORCH_LIBRARY_IMPL(fbgemm, CPU, m):&#160;layout_transform_ops_cpu.cpp'],['../layout__transform__ops__gpu_8cpp.html#a257a9d9e0a71b3a1299af6ef9c6c3a78',1,'TORCH_LIBRARY_IMPL(fbgemm, CUDA, m):&#160;layout_transform_ops_gpu.cpp'],['../quantize__ops__cpu_8cpp.html#a26b96ceaa00c9be7dbba99ca0b772a58',1,'TORCH_LIBRARY_IMPL(fbgemm, CPU, m):&#160;quantize_ops_cpu.cpp'],['../quantize__ops__meta_8cpp.html#a5a1490b57e6f9b7f7f7b12c0359a2f91',1,'TORCH_LIBRARY_IMPL(fbgemm, Meta, m):&#160;quantize_ops_meta.cpp'],['../sparse__ops__cpu_8cpp.html#a26b96ceaa00c9be7dbba99ca0b772a58',1,'TORCH_LIBRARY_IMPL(fbgemm, CPU, m):&#160;sparse_ops_cpu.cpp'],['../sparse__ops__cpu_8cpp.html#a89761ba0ed893bf88bdfdd1f6d15bc65',1,'TORCH_LIBRARY_IMPL(fbgemm, Autograd, m):&#160;sparse_ops_cpu.cpp'],['../sparse__ops__cpu_8cpp.html#af0fdef89a7a61f1f510ed4bb5f6d5398',1,'TORCH_LIBRARY_IMPL(fbgemm, AutogradCPU, m):&#160;sparse_ops_cpu.cpp'],['../sparse__ops__cpu_8cpp.html#a5a1490b57e6f9b7f7f7b12c0359a2f91',1,'TORCH_LIBRARY_IMPL(fbgemm, Meta, m):&#160;sparse_ops_cpu.cpp'],['../sparse__ops__gpu_8cpp.html#a257a9d9e0a71b3a1299af6ef9c6c3a78',1,'TORCH_LIBRARY_IMPL(fbgemm, CUDA, m):&#160;sparse_ops_gpu.cpp'],['../sparse__ops__gpu_8cpp.html#a5a1490b57e6f9b7f7f7b12c0359a2f91',1,'TORCH_LIBRARY_IMPL(fbgemm, Meta, m):&#160;sparse_ops_gpu.cpp'],['../sparse__ops__gpu_8cpp.html#a8fd406590cd83f4dec4a63c7c1b9ce78',1,'TORCH_LIBRARY_IMPL(fbgemm, AutogradCUDA, m):&#160;sparse_ops_gpu.cpp'],['../sparse__ops__meta_8cpp.html#a5a1490b57e6f9b7f7f7b12c0359a2f91',1,'TORCH_LIBRARY_IMPL(fbgemm, Meta, m):&#160;sparse_ops_meta.cpp'],['../split__embeddings__utils_8cpp.html#a5a1490b57e6f9b7f7f7b12c0359a2f91',1,'TORCH_LIBRARY_IMPL(fbgemm, Meta, m):&#160;split_embeddings_utils.cpp']]],
  ['torch_5ftensor_5fdevice_5fname_22',['torch_tensor_device_name',['../sparse__ops__utils_8h.html#a535403fdc5c523b45f0d56d657e17f7b',1,'torch_tensor_device_name(const at::Tensor &amp;ten):&#160;sparse_ops_utils.h'],['../sparse__ops__utils_8h.html#a319c921d3abe8bdb14140b45afe9afdb',1,'torch_tensor_device_name(const c10::optional&lt; at::Tensor &gt; &amp;ten):&#160;sparse_ops_utils.h']]],
  ['torch_5ftensor_5fempty_5for_5fon_5fcpu_5fcheck_23',['torch_tensor_empty_or_on_cpu_check',['../sparse__ops__utils_8h.html#a6328f240dd58293d0349471dca28797e',1,'torch_tensor_empty_or_on_cpu_check(const at::Tensor &amp;ten):&#160;sparse_ops_utils.h'],['../sparse__ops__utils_8h.html#afc4520e447e8ad48a316af75860d84ae',1,'torch_tensor_empty_or_on_cpu_check(const c10::optional&lt; at::Tensor &gt; &amp;ten):&#160;sparse_ops_utils.h']]],
  ['torch_5ftensor_5fempty_5for_5fon_5fcuda_5fgpu_5fcheck_24',['torch_tensor_empty_or_on_cuda_gpu_check',['../sparse__ops__utils_8h.html#abb9778e9fb75a70593c27e53dca268cd',1,'torch_tensor_empty_or_on_cuda_gpu_check(const at::Tensor &amp;ten):&#160;sparse_ops_utils.h'],['../sparse__ops__utils_8h.html#aac863615b6eba91282fcf07b5e9a5460',1,'torch_tensor_empty_or_on_cuda_gpu_check(const c10::optional&lt; at::Tensor &gt; &amp;ten):&#160;sparse_ops_utils.h']]],
  ['torch_5ftensor_5fon_5fcpu_5fcheck_25',['torch_tensor_on_cpu_check',['../sparse__ops__utils_8h.html#ad971d56f6b82b6c62a2d6fed276b0463',1,'torch_tensor_on_cpu_check(const at::Tensor &amp;ten):&#160;sparse_ops_utils.h'],['../sparse__ops__utils_8h.html#af4afd1e331412cf092a70d0fd816aed8',1,'torch_tensor_on_cpu_check(const c10::optional&lt; at::Tensor &gt; &amp;ten):&#160;sparse_ops_utils.h']]],
  ['torch_5ftensor_5fon_5fcuda_5fgpu_5fcheck_26',['torch_tensor_on_cuda_gpu_check',['../sparse__ops__utils_8h.html#a5568d44e6066339da1326798f9637b16',1,'torch_tensor_on_cuda_gpu_check(const at::Tensor &amp;ten):&#160;sparse_ops_utils.h'],['../sparse__ops__utils_8h.html#a99211623695fce2a359b74a5823b58b8',1,'torch_tensor_on_cuda_gpu_check(const c10::optional&lt; at::Tensor &gt; &amp;ten):&#160;sparse_ops_utils.h']]],
  ['torch_5ftensor_5fon_5fsame_5fdevice_5fcheck_27',['torch_tensor_on_same_device_check',['../sparse__ops__utils_8h.html#a5683dd4c2143c3c0ba0eeb80fd5223f0',1,'torch_tensor_on_same_device_check(const at::Tensor &amp;ten1, const at::Tensor &amp;ten2):&#160;sparse_ops_utils.h'],['../sparse__ops__utils_8h.html#ac60c66ce5a4058e4906907960f82f1be',1,'torch_tensor_on_same_device_check(const at::Tensor &amp;ten1, const c10::optional&lt; at::Tensor &gt; &amp;ten2):&#160;sparse_ops_utils.h']]],
  ['torch_5ftensor_5fundefined_28',['torch_tensor_undefined',['../sparse__ops__utils_8h.html#ab583553d9bf8ca92fadb8a81ffd40cd8',1,'torch_tensor_undefined(const at::Tensor &amp;ten):&#160;sparse_ops_utils.h'],['../sparse__ops__utils_8h.html#a5e916ca6a05a17d36e5341d929cc18e0',1,'torch_tensor_undefined(const c10::optional&lt; at::Tensor &gt; &amp;ten):&#160;sparse_ops_utils.h']]],
  ['transpose_29',['transpose',['../classfbgemm__gpu_1_1_generic_packed_tensor_accessor.html#aa4aba7637a10c7b8b839ef27952e855d',1,'fbgemm_gpu::GenericPackedTensorAccessor::transpose()'],['../classfbgemm__gpu_1_1_generic_packed_tensor_accessor_3_01_t_00_011_00_01_ptr_traits_00_01index__t_01_4.html#a0ed7d1e6f585332c781fc568e1fad1ac',1,'fbgemm_gpu::GenericPackedTensorAccessor&lt; T, 1, PtrTraits, index_t &gt;::transpose()']]],
  ['transpose_5fembedding_5finput_30',['transpose_embedding_input',['../split__embeddings__utils_8cuh.html#a508f832d3fec529868cbb1f9fa9defc8',1,'transpose_embedding_input(at::Tensor hash_size_cumsum, int64_t total_hash_size_bits, at::Tensor indices, at::Tensor offsets, bool nobag=false, const c10::optional&lt; at::Tensor &gt; &amp;vbe_b_t_map=c10::optional&lt; at::Tensor &gt;(), const int64_t info_B_num_bits=26, const int64_t info_B_mask=0x2FFFFFF, const int64_t total_unique_indices=-1, const bool is_index_select=false, const c10::optional&lt; at::Tensor &gt; &amp;total_L_offsets=c10::optional&lt; at::Tensor &gt;(), const int64_t fixed_L_per_warp=0, const int64_t num_warps_per_feature=0):&#160;split_embeddings_utils.cuh'],['../transpose__embedding__input_8cu.html#a569a769e3233130cce363d9ae151bd26',1,'transpose_embedding_input(Tensor hash_size_cumsum, int64_t total_hash_size_bits, Tensor indices, Tensor offsets, bool nobag, const c10::optional&lt; Tensor &gt; &amp;vbe_b_t_map, const int64_t info_B_num_bits, const int64_t info_B_mask, const int64_t total_unique_indices, const bool is_index_select, const c10::optional&lt; Tensor &gt; &amp;total_L_offsets, const int64_t fixed_L_per_warp, const int64_t num_warps_per_feature):&#160;transpose_embedding_input.cu']]],
  ['trapz_5fkernel_31',['trapz_kernel',['../namespacefbgemm__gpu.html#a45142e19fe831c9d085bb097b7d946b2',1,'fbgemm_gpu']]],
  ['true_32',['true',['../gen__embedding__backward__split__grad_8cu.html#af0ccb06b8169682c123d1399ed8e1869',1,'true():&#160;gen_embedding_backward_split_grad.cu'],['../namespacenbit.html#ae298c42e84018c608c72200f61270827',1,'nbit::true(const pta::PackedTensorAccessor64&lt; uint8_t, 1, at::RestrictPtrTraits &gt; dev_weights, const pta::PackedTensorAccessor64&lt; uint8_t, 1, at::RestrictPtrTraits &gt; uvm_weights, const pta::PackedTensorAccessor32&lt; int32_t, 1, at::RestrictPtrTraits &gt; weights_placements, const pta::PackedTensorAccessor32&lt; int64_t, 1, at::RestrictPtrTraits &gt; weights_offsets, const pta::PackedTensorAccessor32&lt; uint8_t, 1, at::RestrictPtrTraits &gt; weights_tys, const pta::PackedTensorAccessor32&lt; int32_t, 1, at::RestrictPtrTraits &gt; D_offsets, FixedDivisor fd_B, const pta::PackedTensorAccessor32&lt; int32_t, 1, at::RestrictPtrTraits &gt; indices, const pta::PackedTensorAccessor32&lt; int32_t, 1, at::RestrictPtrTraits &gt; offsets, const int64_t pooling_mode, const int64_t row_alignment, pta::PackedTensorAccessor32&lt; at::Half, 2, at::RestrictPtrTraits &gt; output, const pta::PackedTensorAccessor64&lt; uint8_t, 2, at::RestrictPtrTraits &gt; lxu_cache_weights, const pta::PackedTensorAccessor32&lt; int32_t, 1, at::RestrictPtrTraits &gt; lxu_cache_locations)'],['../namespacenbit.html#a9233b0f37aec7890155371e3f1f8a4c6',1,'nbit::true(const pta::PackedTensorAccessor64&lt; uint8_t, 1, at::RestrictPtrTraits &gt; dev_weights, const pta::PackedTensorAccessor64&lt; uint8_t, 1, at::RestrictPtrTraits &gt; uvm_weights, const pta::PackedTensorAccessor32&lt; int32_t, 1, at::RestrictPtrTraits &gt; weights_placements, const pta::PackedTensorAccessor32&lt; int64_t, 1, at::RestrictPtrTraits &gt; weights_offsets, const pta::PackedTensorAccessor32&lt; uint8_t, 1, at::RestrictPtrTraits &gt; weights_tys, const pta::PackedTensorAccessor32&lt; int32_t, 1, at::RestrictPtrTraits &gt; D_offsets, FixedDivisor fd_B, const pta::PackedTensorAccessor32&lt; int32_t, 1, at::RestrictPtrTraits &gt; indices, const pta::PackedTensorAccessor32&lt; int32_t, 1, at::RestrictPtrTraits &gt; offsets, const int64_t pooling_mode, const int64_t row_alignment, pta::PackedTensorAccessor32&lt; at::BFloat16, 2, at::RestrictPtrTraits &gt; output, const pta::PackedTensorAccessor64&lt; uint8_t, 2, at::RestrictPtrTraits &gt; lxu_cache_weights, const pta::PackedTensorAccessor32&lt; int32_t, 1, at::RestrictPtrTraits &gt; lxu_cache_locations)'],['../namespacenbit.html#ad461b37bcc67ce85965ea3d63318b609',1,'nbit::true(const pta::PackedTensorAccessor64&lt; uint8_t, 1, at::RestrictPtrTraits &gt; dev_weights, const pta::PackedTensorAccessor64&lt; uint8_t, 1, at::RestrictPtrTraits &gt; uvm_weights, const pta::PackedTensorAccessor32&lt; int32_t, 1, at::RestrictPtrTraits &gt; weights_placements, const pta::PackedTensorAccessor32&lt; int64_t, 1, at::RestrictPtrTraits &gt; weights_offsets, const pta::PackedTensorAccessor32&lt; uint8_t, 1, at::RestrictPtrTraits &gt; weights_tys, const pta::PackedTensorAccessor32&lt; int32_t, 1, at::RestrictPtrTraits &gt; D_offsets, FixedDivisor fd_B, const pta::PackedTensorAccessor32&lt; int32_t, 1, at::RestrictPtrTraits &gt; indices, const pta::PackedTensorAccessor32&lt; int32_t, 1, at::RestrictPtrTraits &gt; offsets, const int64_t pooling_mode, const int64_t row_alignment, pta::PackedTensorAccessor32&lt; float, 2, at::RestrictPtrTraits &gt; output, const pta::PackedTensorAccessor64&lt; uint8_t, 2, at::RestrictPtrTraits &gt; lxu_cache_weights, const pta::PackedTensorAccessor32&lt; int32_t, 1, at::RestrictPtrTraits &gt; lxu_cache_locations)'],['../namespacenbit.html#a6610e53a686bcaa7c0c055493223b286',1,'nbit::true(const pta::PackedTensorAccessor64&lt; uint8_t, 1, at::RestrictPtrTraits &gt; dev_weights, const pta::PackedTensorAccessor64&lt; uint8_t, 1, at::RestrictPtrTraits &gt; uvm_weights, const pta::PackedTensorAccessor32&lt; int32_t, 1, at::RestrictPtrTraits &gt; weights_placements, const pta::PackedTensorAccessor32&lt; int64_t, 1, at::RestrictPtrTraits &gt; weights_offsets, const pta::PackedTensorAccessor32&lt; uint8_t, 1, at::RestrictPtrTraits &gt; weights_tys, const pta::PackedTensorAccessor32&lt; int32_t, 1, at::RestrictPtrTraits &gt; D_offsets, FixedDivisor fd_B, const pta::PackedTensorAccessor32&lt; int32_t, 1, at::RestrictPtrTraits &gt; indices, const pta::PackedTensorAccessor32&lt; int32_t, 1, at::RestrictPtrTraits &gt; offsets, const int64_t pooling_mode, const int64_t row_alignment, pta::PackedTensorAccessor32&lt; uint8_t, 2, at::RestrictPtrTraits &gt; output, const pta::PackedTensorAccessor64&lt; uint8_t, 2, at::RestrictPtrTraits &gt; lxu_cache_weights, const pta::PackedTensorAccessor32&lt; int32_t, 1, at::RestrictPtrTraits &gt; lxu_cache_locations)'],['../namespacenbit.html#aa0e536c5986677aa5c753d497c9ec6ea',1,'nbit::true(const pta::PackedTensorAccessor64&lt; uint8_t, 1, at::RestrictPtrTraits &gt; dev_weights, const pta::PackedTensorAccessor64&lt; uint8_t, 1, at::RestrictPtrTraits &gt; uvm_weights, const pta::PackedTensorAccessor32&lt; int32_t, 1, at::RestrictPtrTraits &gt; weights_placements, const pta::PackedTensorAccessor32&lt; int64_t, 1, at::RestrictPtrTraits &gt; weights_offsets, const pta::PackedTensorAccessor32&lt; uint8_t, 1, at::RestrictPtrTraits &gt; weights_tys, const pta::PackedTensorAccessor32&lt; int32_t, 1, at::RestrictPtrTraits &gt; D_offsets, FixedDivisor fd_B, const pta::PackedTensorAccessor32&lt; int32_t, 1, at::RestrictPtrTraits &gt; indices, const pta::PackedTensorAccessor32&lt; int32_t, 1, at::RestrictPtrTraits &gt; offsets, const int64_t pooling_mode, const int64_t row_alignment, const int exponent_bits, const int exponent_bias, pta::PackedTensorAccessor32&lt; at::Half, 2, at::RestrictPtrTraits &gt; output, const pta::PackedTensorAccessor64&lt; uint8_t, 2, at::RestrictPtrTraits &gt; lxu_cache_weights, const pta::PackedTensorAccessor32&lt; int32_t, 1, at::RestrictPtrTraits &gt; lxu_cache_locations)'],['../namespacenbit.html#a744a48f6ba12a807eed65323fac0d7b9',1,'nbit::true(const pta::PackedTensorAccessor64&lt; uint8_t, 1, at::RestrictPtrTraits &gt; dev_weights, const pta::PackedTensorAccessor64&lt; uint8_t, 1, at::RestrictPtrTraits &gt; uvm_weights, const pta::PackedTensorAccessor32&lt; int32_t, 1, at::RestrictPtrTraits &gt; weights_placements, const pta::PackedTensorAccessor32&lt; int64_t, 1, at::RestrictPtrTraits &gt; weights_offsets, const pta::PackedTensorAccessor32&lt; uint8_t, 1, at::RestrictPtrTraits &gt; weights_tys, const pta::PackedTensorAccessor32&lt; int32_t, 1, at::RestrictPtrTraits &gt; D_offsets, FixedDivisor fd_B, const pta::PackedTensorAccessor32&lt; int32_t, 1, at::RestrictPtrTraits &gt; indices, const pta::PackedTensorAccessor32&lt; int32_t, 1, at::RestrictPtrTraits &gt; offsets, const int64_t pooling_mode, const int64_t row_alignment, const int exponent_bits, const int exponent_bias, pta::PackedTensorAccessor32&lt; at::BFloat16, 2, at::RestrictPtrTraits &gt; output, const pta::PackedTensorAccessor64&lt; uint8_t, 2, at::RestrictPtrTraits &gt; lxu_cache_weights, const pta::PackedTensorAccessor32&lt; int32_t, 1, at::RestrictPtrTraits &gt; lxu_cache_locations)'],['../namespacenbit.html#aa7f9e825cb23814721fa128e75fd54df',1,'nbit::true(const pta::PackedTensorAccessor64&lt; uint8_t, 1, at::RestrictPtrTraits &gt; dev_weights, const pta::PackedTensorAccessor64&lt; uint8_t, 1, at::RestrictPtrTraits &gt; uvm_weights, const pta::PackedTensorAccessor32&lt; int32_t, 1, at::RestrictPtrTraits &gt; weights_placements, const pta::PackedTensorAccessor32&lt; int64_t, 1, at::RestrictPtrTraits &gt; weights_offsets, const pta::PackedTensorAccessor32&lt; uint8_t, 1, at::RestrictPtrTraits &gt; weights_tys, const pta::PackedTensorAccessor32&lt; int32_t, 1, at::RestrictPtrTraits &gt; D_offsets, FixedDivisor fd_B, const pta::PackedTensorAccessor32&lt; int32_t, 1, at::RestrictPtrTraits &gt; indices, const pta::PackedTensorAccessor32&lt; int32_t, 1, at::RestrictPtrTraits &gt; offsets, const int64_t pooling_mode, const int64_t row_alignment, const int exponent_bits, const int exponent_bias, pta::PackedTensorAccessor32&lt; float, 2, at::RestrictPtrTraits &gt; output, const pta::PackedTensorAccessor64&lt; uint8_t, 2, at::RestrictPtrTraits &gt; lxu_cache_weights, const pta::PackedTensorAccessor32&lt; int32_t, 1, at::RestrictPtrTraits &gt; lxu_cache_locations)'],['../namespacenbit.html#af5e4b89707ccb6db711f4b214120f6d4',1,'nbit::true(const pta::PackedTensorAccessor64&lt; uint8_t, 1, at::RestrictPtrTraits &gt; dev_weights, const pta::PackedTensorAccessor64&lt; uint8_t, 1, at::RestrictPtrTraits &gt; uvm_weights, const pta::PackedTensorAccessor32&lt; int32_t, 1, at::RestrictPtrTraits &gt; weights_placements, const pta::PackedTensorAccessor32&lt; int64_t, 1, at::RestrictPtrTraits &gt; weights_offsets, const pta::PackedTensorAccessor32&lt; uint8_t, 1, at::RestrictPtrTraits &gt; weights_tys, const pta::PackedTensorAccessor32&lt; int32_t, 1, at::RestrictPtrTraits &gt; D_offsets, FixedDivisor fd_B, const pta::PackedTensorAccessor32&lt; int32_t, 1, at::RestrictPtrTraits &gt; indices, const pta::PackedTensorAccessor32&lt; int32_t, 1, at::RestrictPtrTraits &gt; offsets, const int64_t pooling_mode, const int64_t row_alignment, const int exponent_bits, const int exponent_bias, pta::PackedTensorAccessor32&lt; uint8_t, 2, at::RestrictPtrTraits &gt; output, const pta::PackedTensorAccessor64&lt; uint8_t, 2, at::RestrictPtrTraits &gt; lxu_cache_weights, const pta::PackedTensorAccessor32&lt; int32_t, 1, at::RestrictPtrTraits &gt; lxu_cache_locations)'],['../namespacenbit.html#ae950ec6b1a6c8e70896ceea8585e8a94',1,'nbit::true(const pta::PackedTensorAccessor64&lt; uint8_t, 1, at::RestrictPtrTraits &gt; dev_weights, const pta::PackedTensorAccessor64&lt; uint8_t, 1, at::RestrictPtrTraits &gt; uvm_weights, const pta::PackedTensorAccessor32&lt; int32_t, 1, at::RestrictPtrTraits &gt; weights_placements, const pta::PackedTensorAccessor32&lt; int64_t, 1, at::RestrictPtrTraits &gt; weights_offsets, const pta::PackedTensorAccessor32&lt; uint8_t, 1, at::RestrictPtrTraits &gt; weights_tys, const int64_t D, FixedDivisor fd_B, const pta::PackedTensorAccessor32&lt; int32_t, 1, at::RestrictPtrTraits &gt; indices, const pta::PackedTensorAccessor32&lt; int32_t, 1, at::RestrictPtrTraits &gt; offsets, const int64_t row_alignment, pta::PackedTensorAccessor32&lt; at::Half, 2, at::RestrictPtrTraits &gt; output, const pta::PackedTensorAccessor64&lt; uint8_t, 2, at::RestrictPtrTraits &gt; lxu_cache_weights, const pta::PackedTensorAccessor32&lt; int32_t, 1, at::RestrictPtrTraits &gt; lxu_cache_locations)'],['../namespacenbit.html#a80b1856aa5c50bef02b6cfc6e07a738f',1,'nbit::true(const pta::PackedTensorAccessor64&lt; uint8_t, 1, at::RestrictPtrTraits &gt; dev_weights, const pta::PackedTensorAccessor64&lt; uint8_t, 1, at::RestrictPtrTraits &gt; uvm_weights, const pta::PackedTensorAccessor32&lt; int32_t, 1, at::RestrictPtrTraits &gt; weights_placements, const pta::PackedTensorAccessor32&lt; int64_t, 1, at::RestrictPtrTraits &gt; weights_offsets, const pta::PackedTensorAccessor32&lt; uint8_t, 1, at::RestrictPtrTraits &gt; weights_tys, const int64_t D, FixedDivisor fd_B, const pta::PackedTensorAccessor32&lt; int32_t, 1, at::RestrictPtrTraits &gt; indices, const pta::PackedTensorAccessor32&lt; int32_t, 1, at::RestrictPtrTraits &gt; offsets, const int64_t row_alignment, pta::PackedTensorAccessor32&lt; at::BFloat16, 2, at::RestrictPtrTraits &gt; output, const pta::PackedTensorAccessor64&lt; uint8_t, 2, at::RestrictPtrTraits &gt; lxu_cache_weights, const pta::PackedTensorAccessor32&lt; int32_t, 1, at::RestrictPtrTraits &gt; lxu_cache_locations)'],['../namespacenbit.html#a5190453e12b3ae3d90ccbad2d0fd3366',1,'nbit::true(const pta::PackedTensorAccessor64&lt; uint8_t, 1, at::RestrictPtrTraits &gt; dev_weights, const pta::PackedTensorAccessor64&lt; uint8_t, 1, at::RestrictPtrTraits &gt; uvm_weights, const pta::PackedTensorAccessor32&lt; int32_t, 1, at::RestrictPtrTraits &gt; weights_placements, const pta::PackedTensorAccessor32&lt; int64_t, 1, at::RestrictPtrTraits &gt; weights_offsets, const pta::PackedTensorAccessor32&lt; uint8_t, 1, at::RestrictPtrTraits &gt; weights_tys, const int64_t D, FixedDivisor fd_B, const pta::PackedTensorAccessor32&lt; int32_t, 1, at::RestrictPtrTraits &gt; indices, const pta::PackedTensorAccessor32&lt; int32_t, 1, at::RestrictPtrTraits &gt; offsets, const int64_t row_alignment, pta::PackedTensorAccessor32&lt; float, 2, at::RestrictPtrTraits &gt; output, const pta::PackedTensorAccessor64&lt; uint8_t, 2, at::RestrictPtrTraits &gt; lxu_cache_weights, const pta::PackedTensorAccessor32&lt; int32_t, 1, at::RestrictPtrTraits &gt; lxu_cache_locations)'],['../namespacenbit.html#aeab80be016250076834edd018371fadc',1,'nbit::true(const pta::PackedTensorAccessor64&lt; uint8_t, 1, at::RestrictPtrTraits &gt; dev_weights, const pta::PackedTensorAccessor64&lt; uint8_t, 1, at::RestrictPtrTraits &gt; uvm_weights, const pta::PackedTensorAccessor32&lt; int32_t, 1, at::RestrictPtrTraits &gt; weights_placements, const pta::PackedTensorAccessor32&lt; int64_t, 1, at::RestrictPtrTraits &gt; weights_offsets, const pta::PackedTensorAccessor32&lt; uint8_t, 1, at::RestrictPtrTraits &gt; weights_tys, const int64_t D, FixedDivisor fd_B, const pta::PackedTensorAccessor32&lt; int32_t, 1, at::RestrictPtrTraits &gt; indices, const pta::PackedTensorAccessor32&lt; int32_t, 1, at::RestrictPtrTraits &gt; offsets, const int64_t row_alignment, pta::PackedTensorAccessor32&lt; uint8_t, 2, at::RestrictPtrTraits &gt; output, const pta::PackedTensorAccessor64&lt; uint8_t, 2, at::RestrictPtrTraits &gt; lxu_cache_weights, const pta::PackedTensorAccessor32&lt; int32_t, 1, at::RestrictPtrTraits &gt; lxu_cache_locations)'],['../namespacenbit.html#ac4473fe74a275df878cef6094b97142f',1,'nbit::true(const pta::PackedTensorAccessor64&lt; uint8_t, 1, at::RestrictPtrTraits &gt; dev_weights, const pta::PackedTensorAccessor64&lt; uint8_t, 1, at::RestrictPtrTraits &gt; uvm_weights, const pta::PackedTensorAccessor32&lt; int32_t, 1, at::RestrictPtrTraits &gt; weights_placements, const pta::PackedTensorAccessor32&lt; int64_t, 1, at::RestrictPtrTraits &gt; weights_offsets, const pta::PackedTensorAccessor32&lt; uint8_t, 1, at::RestrictPtrTraits &gt; weights_tys, const int64_t D, FixedDivisor fd_B, const pta::PackedTensorAccessor32&lt; int32_t, 1, at::RestrictPtrTraits &gt; indices, const pta::PackedTensorAccessor32&lt; int32_t, 1, at::RestrictPtrTraits &gt; offsets, const int64_t row_alignment, const int exponent_bits, const int exponent_bias, pta::PackedTensorAccessor32&lt; at::Half, 2, at::RestrictPtrTraits &gt; output, const pta::PackedTensorAccessor64&lt; uint8_t, 2, at::RestrictPtrTraits &gt; lxu_cache_weights, const pta::PackedTensorAccessor32&lt; int32_t, 1, at::RestrictPtrTraits &gt; lxu_cache_locations)'],['../namespacenbit.html#a5e7304badb9669f2af28007bc9faa533',1,'nbit::true(const pta::PackedTensorAccessor64&lt; uint8_t, 1, at::RestrictPtrTraits &gt; dev_weights, const pta::PackedTensorAccessor64&lt; uint8_t, 1, at::RestrictPtrTraits &gt; uvm_weights, const pta::PackedTensorAccessor32&lt; int32_t, 1, at::RestrictPtrTraits &gt; weights_placements, const pta::PackedTensorAccessor32&lt; int64_t, 1, at::RestrictPtrTraits &gt; weights_offsets, const pta::PackedTensorAccessor32&lt; uint8_t, 1, at::RestrictPtrTraits &gt; weights_tys, const int64_t D, FixedDivisor fd_B, const pta::PackedTensorAccessor32&lt; int32_t, 1, at::RestrictPtrTraits &gt; indices, const pta::PackedTensorAccessor32&lt; int32_t, 1, at::RestrictPtrTraits &gt; offsets, const int64_t row_alignment, const int exponent_bits, const int exponent_bias, pta::PackedTensorAccessor32&lt; at::BFloat16, 2, at::RestrictPtrTraits &gt; output, const pta::PackedTensorAccessor64&lt; uint8_t, 2, at::RestrictPtrTraits &gt; lxu_cache_weights, const pta::PackedTensorAccessor32&lt; int32_t, 1, at::RestrictPtrTraits &gt; lxu_cache_locations)'],['../namespacenbit.html#a000a2e8569876d491d4d9578f5bca2fb',1,'nbit::true(const pta::PackedTensorAccessor64&lt; uint8_t, 1, at::RestrictPtrTraits &gt; dev_weights, const pta::PackedTensorAccessor64&lt; uint8_t, 1, at::RestrictPtrTraits &gt; uvm_weights, const pta::PackedTensorAccessor32&lt; int32_t, 1, at::RestrictPtrTraits &gt; weights_placements, const pta::PackedTensorAccessor32&lt; int64_t, 1, at::RestrictPtrTraits &gt; weights_offsets, const pta::PackedTensorAccessor32&lt; uint8_t, 1, at::RestrictPtrTraits &gt; weights_tys, const int64_t D, FixedDivisor fd_B, const pta::PackedTensorAccessor32&lt; int32_t, 1, at::RestrictPtrTraits &gt; indices, const pta::PackedTensorAccessor32&lt; int32_t, 1, at::RestrictPtrTraits &gt; offsets, const int64_t row_alignment, const int exponent_bits, const int exponent_bias, pta::PackedTensorAccessor32&lt; float, 2, at::RestrictPtrTraits &gt; output, const pta::PackedTensorAccessor64&lt; uint8_t, 2, at::RestrictPtrTraits &gt; lxu_cache_weights, const pta::PackedTensorAccessor32&lt; int32_t, 1, at::RestrictPtrTraits &gt; lxu_cache_locations)'],['../namespacenbit.html#a1b561270c0c573adbb9b099b20a3ca71',1,'nbit::true(const pta::PackedTensorAccessor64&lt; uint8_t, 1, at::RestrictPtrTraits &gt; dev_weights, const pta::PackedTensorAccessor64&lt; uint8_t, 1, at::RestrictPtrTraits &gt; uvm_weights, const pta::PackedTensorAccessor32&lt; int32_t, 1, at::RestrictPtrTraits &gt; weights_placements, const pta::PackedTensorAccessor32&lt; int64_t, 1, at::RestrictPtrTraits &gt; weights_offsets, const pta::PackedTensorAccessor32&lt; uint8_t, 1, at::RestrictPtrTraits &gt; weights_tys, const int64_t D, FixedDivisor fd_B, const pta::PackedTensorAccessor32&lt; int32_t, 1, at::RestrictPtrTraits &gt; indices, const pta::PackedTensorAccessor32&lt; int32_t, 1, at::RestrictPtrTraits &gt; offsets, const int64_t row_alignment, const int exponent_bits, const int exponent_bias, pta::PackedTensorAccessor32&lt; uint8_t, 2, at::RestrictPtrTraits &gt; output, const pta::PackedTensorAccessor64&lt; uint8_t, 2, at::RestrictPtrTraits &gt; lxu_cache_weights, const pta::PackedTensorAccessor32&lt; int32_t, 1, at::RestrictPtrTraits &gt; lxu_cache_locations)'],['../namespacenbit.html#aa4e2b761fd2635bd5d972c84f9e28837',1,'nbit::true(const pta::PackedTensorAccessor64&lt; uint8_t, 1, at::RestrictPtrTraits &gt; dev_weights, const pta::PackedTensorAccessor64&lt; uint8_t, 1, at::RestrictPtrTraits &gt; uvm_weights, const pta::PackedTensorAccessor32&lt; int32_t, 1, at::RestrictPtrTraits &gt; weights_placements, const pta::PackedTensorAccessor32&lt; int64_t, 1, at::RestrictPtrTraits &gt; weights_offsets, const pta::PackedTensorAccessor32&lt; uint8_t, 1, at::RestrictPtrTraits &gt; weights_tys, const pta::PackedTensorAccessor32&lt; int32_t, 1, at::RestrictPtrTraits &gt; D_offsets, FixedDivisor fd_B, const pta::PackedTensorAccessor32&lt; int32_t, 1, at::RestrictPtrTraits &gt; indices, const pta::PackedTensorAccessor32&lt; int32_t, 1, at::RestrictPtrTraits &gt; offsets, const int64_t pooling_mode, const int64_t row_alignment, pta::PackedTensorAccessor32&lt; float, 1, at::RestrictPtrTraits &gt; indice_weights, pta::PackedTensorAccessor32&lt; at::Half, 2, at::RestrictPtrTraits &gt; output, const pta::PackedTensorAccessor64&lt; uint8_t, 2, at::RestrictPtrTraits &gt; lxu_cache_weights, const pta::PackedTensorAccessor32&lt; int32_t, 1, at::RestrictPtrTraits &gt; lxu_cache_locations)'],['../namespacenbit.html#aea0485b6b1bbf758999bd85f6affc052',1,'nbit::true(const pta::PackedTensorAccessor64&lt; uint8_t, 1, at::RestrictPtrTraits &gt; dev_weights, const pta::PackedTensorAccessor64&lt; uint8_t, 1, at::RestrictPtrTraits &gt; uvm_weights, const pta::PackedTensorAccessor32&lt; int32_t, 1, at::RestrictPtrTraits &gt; weights_placements, const pta::PackedTensorAccessor32&lt; int64_t, 1, at::RestrictPtrTraits &gt; weights_offsets, const pta::PackedTensorAccessor32&lt; uint8_t, 1, at::RestrictPtrTraits &gt; weights_tys, const pta::PackedTensorAccessor32&lt; int32_t, 1, at::RestrictPtrTraits &gt; D_offsets, FixedDivisor fd_B, const pta::PackedTensorAccessor32&lt; int32_t, 1, at::RestrictPtrTraits &gt; indices, const pta::PackedTensorAccessor32&lt; int32_t, 1, at::RestrictPtrTraits &gt; offsets, const int64_t pooling_mode, const int64_t row_alignment, pta::PackedTensorAccessor32&lt; float, 1, at::RestrictPtrTraits &gt; indice_weights, pta::PackedTensorAccessor32&lt; at::BFloat16, 2, at::RestrictPtrTraits &gt; output, const pta::PackedTensorAccessor64&lt; uint8_t, 2, at::RestrictPtrTraits &gt; lxu_cache_weights, const pta::PackedTensorAccessor32&lt; int32_t, 1, at::RestrictPtrTraits &gt; lxu_cache_locations)'],['../namespacenbit.html#ab843cff102b60ffbfb639c2371b90f7b',1,'nbit::true(const pta::PackedTensorAccessor64&lt; uint8_t, 1, at::RestrictPtrTraits &gt; dev_weights, const pta::PackedTensorAccessor64&lt; uint8_t, 1, at::RestrictPtrTraits &gt; uvm_weights, const pta::PackedTensorAccessor32&lt; int32_t, 1, at::RestrictPtrTraits &gt; weights_placements, const pta::PackedTensorAccessor32&lt; int64_t, 1, at::RestrictPtrTraits &gt; weights_offsets, const pta::PackedTensorAccessor32&lt; uint8_t, 1, at::RestrictPtrTraits &gt; weights_tys, const pta::PackedTensorAccessor32&lt; int32_t, 1, at::RestrictPtrTraits &gt; D_offsets, FixedDivisor fd_B, const pta::PackedTensorAccessor32&lt; int32_t, 1, at::RestrictPtrTraits &gt; indices, const pta::PackedTensorAccessor32&lt; int32_t, 1, at::RestrictPtrTraits &gt; offsets, const int64_t pooling_mode, const int64_t row_alignment, pta::PackedTensorAccessor32&lt; float, 1, at::RestrictPtrTraits &gt; indice_weights, pta::PackedTensorAccessor32&lt; float, 2, at::RestrictPtrTraits &gt; output, const pta::PackedTensorAccessor64&lt; uint8_t, 2, at::RestrictPtrTraits &gt; lxu_cache_weights, const pta::PackedTensorAccessor32&lt; int32_t, 1, at::RestrictPtrTraits &gt; lxu_cache_locations)'],['../namespacenbit.html#a085775b780406668fe81c55a30eb3098',1,'nbit::true(const pta::PackedTensorAccessor64&lt; uint8_t, 1, at::RestrictPtrTraits &gt; dev_weights, const pta::PackedTensorAccessor64&lt; uint8_t, 1, at::RestrictPtrTraits &gt; uvm_weights, const pta::PackedTensorAccessor32&lt; int32_t, 1, at::RestrictPtrTraits &gt; weights_placements, const pta::PackedTensorAccessor32&lt; int64_t, 1, at::RestrictPtrTraits &gt; weights_offsets, const pta::PackedTensorAccessor32&lt; uint8_t, 1, at::RestrictPtrTraits &gt; weights_tys, const pta::PackedTensorAccessor32&lt; int32_t, 1, at::RestrictPtrTraits &gt; D_offsets, FixedDivisor fd_B, const pta::PackedTensorAccessor32&lt; int32_t, 1, at::RestrictPtrTraits &gt; indices, const pta::PackedTensorAccessor32&lt; int32_t, 1, at::RestrictPtrTraits &gt; offsets, const int64_t pooling_mode, const int64_t row_alignment, pta::PackedTensorAccessor32&lt; float, 1, at::RestrictPtrTraits &gt; indice_weights, pta::PackedTensorAccessor32&lt; uint8_t, 2, at::RestrictPtrTraits &gt; output, const pta::PackedTensorAccessor64&lt; uint8_t, 2, at::RestrictPtrTraits &gt; lxu_cache_weights, const pta::PackedTensorAccessor32&lt; int32_t, 1, at::RestrictPtrTraits &gt; lxu_cache_locations)'],['../namespacenbit.html#a5614c839b9baa44dd6962fe11a148918',1,'nbit::true(const pta::PackedTensorAccessor64&lt; uint8_t, 1, at::RestrictPtrTraits &gt; dev_weights, const pta::PackedTensorAccessor64&lt; uint8_t, 1, at::RestrictPtrTraits &gt; uvm_weights, const pta::PackedTensorAccessor32&lt; int32_t, 1, at::RestrictPtrTraits &gt; weights_placements, const pta::PackedTensorAccessor32&lt; int64_t, 1, at::RestrictPtrTraits &gt; weights_offsets, const pta::PackedTensorAccessor32&lt; uint8_t, 1, at::RestrictPtrTraits &gt; weights_tys, const pta::PackedTensorAccessor32&lt; int32_t, 1, at::RestrictPtrTraits &gt; D_offsets, FixedDivisor fd_B, const pta::PackedTensorAccessor32&lt; int32_t, 1, at::RestrictPtrTraits &gt; indices, const pta::PackedTensorAccessor32&lt; int32_t, 1, at::RestrictPtrTraits &gt; offsets, const int64_t pooling_mode, const int64_t row_alignment, pta::PackedTensorAccessor32&lt; float, 1, at::RestrictPtrTraits &gt; indice_weights, const int exponent_bits, const int exponent_bias, pta::PackedTensorAccessor32&lt; at::Half, 2, at::RestrictPtrTraits &gt; output, const pta::PackedTensorAccessor64&lt; uint8_t, 2, at::RestrictPtrTraits &gt; lxu_cache_weights, const pta::PackedTensorAccessor32&lt; int32_t, 1, at::RestrictPtrTraits &gt; lxu_cache_locations)'],['../namespacenbit.html#af580fa47263724bff70ce910764bea41',1,'nbit::true(const pta::PackedTensorAccessor64&lt; uint8_t, 1, at::RestrictPtrTraits &gt; dev_weights, const pta::PackedTensorAccessor64&lt; uint8_t, 1, at::RestrictPtrTraits &gt; uvm_weights, const pta::PackedTensorAccessor32&lt; int32_t, 1, at::RestrictPtrTraits &gt; weights_placements, const pta::PackedTensorAccessor32&lt; int64_t, 1, at::RestrictPtrTraits &gt; weights_offsets, const pta::PackedTensorAccessor32&lt; uint8_t, 1, at::RestrictPtrTraits &gt; weights_tys, const pta::PackedTensorAccessor32&lt; int32_t, 1, at::RestrictPtrTraits &gt; D_offsets, FixedDivisor fd_B, const pta::PackedTensorAccessor32&lt; int32_t, 1, at::RestrictPtrTraits &gt; indices, const pta::PackedTensorAccessor32&lt; int32_t, 1, at::RestrictPtrTraits &gt; offsets, const int64_t pooling_mode, const int64_t row_alignment, pta::PackedTensorAccessor32&lt; float, 1, at::RestrictPtrTraits &gt; indice_weights, const int exponent_bits, const int exponent_bias, pta::PackedTensorAccessor32&lt; at::BFloat16, 2, at::RestrictPtrTraits &gt; output, const pta::PackedTensorAccessor64&lt; uint8_t, 2, at::RestrictPtrTraits &gt; lxu_cache_weights, const pta::PackedTensorAccessor32&lt; int32_t, 1, at::RestrictPtrTraits &gt; lxu_cache_locations)'],['../namespacenbit.html#acb54005a5872970a6721deca8ff5cd99',1,'nbit::true(const pta::PackedTensorAccessor64&lt; uint8_t, 1, at::RestrictPtrTraits &gt; dev_weights, const pta::PackedTensorAccessor64&lt; uint8_t, 1, at::RestrictPtrTraits &gt; uvm_weights, const pta::PackedTensorAccessor32&lt; int32_t, 1, at::RestrictPtrTraits &gt; weights_placements, const pta::PackedTensorAccessor32&lt; int64_t, 1, at::RestrictPtrTraits &gt; weights_offsets, const pta::PackedTensorAccessor32&lt; uint8_t, 1, at::RestrictPtrTraits &gt; weights_tys, const pta::PackedTensorAccessor32&lt; int32_t, 1, at::RestrictPtrTraits &gt; D_offsets, FixedDivisor fd_B, const pta::PackedTensorAccessor32&lt; int32_t, 1, at::RestrictPtrTraits &gt; indices, const pta::PackedTensorAccessor32&lt; int32_t, 1, at::RestrictPtrTraits &gt; offsets, const int64_t pooling_mode, const int64_t row_alignment, pta::PackedTensorAccessor32&lt; float, 1, at::RestrictPtrTraits &gt; indice_weights, const int exponent_bits, const int exponent_bias, pta::PackedTensorAccessor32&lt; float, 2, at::RestrictPtrTraits &gt; output, const pta::PackedTensorAccessor64&lt; uint8_t, 2, at::RestrictPtrTraits &gt; lxu_cache_weights, const pta::PackedTensorAccessor32&lt; int32_t, 1, at::RestrictPtrTraits &gt; lxu_cache_locations)'],['../namespacenbit.html#a7d2686b58c584f889807ad3902056eac',1,'nbit::true(const pta::PackedTensorAccessor64&lt; uint8_t, 1, at::RestrictPtrTraits &gt; dev_weights, const pta::PackedTensorAccessor64&lt; uint8_t, 1, at::RestrictPtrTraits &gt; uvm_weights, const pta::PackedTensorAccessor32&lt; int32_t, 1, at::RestrictPtrTraits &gt; weights_placements, const pta::PackedTensorAccessor32&lt; int64_t, 1, at::RestrictPtrTraits &gt; weights_offsets, const pta::PackedTensorAccessor32&lt; uint8_t, 1, at::RestrictPtrTraits &gt; weights_tys, const pta::PackedTensorAccessor32&lt; int32_t, 1, at::RestrictPtrTraits &gt; D_offsets, FixedDivisor fd_B, const pta::PackedTensorAccessor32&lt; int32_t, 1, at::RestrictPtrTraits &gt; indices, const pta::PackedTensorAccessor32&lt; int32_t, 1, at::RestrictPtrTraits &gt; offsets, const int64_t pooling_mode, const int64_t row_alignment, pta::PackedTensorAccessor32&lt; float, 1, at::RestrictPtrTraits &gt; indice_weights, const int exponent_bits, const int exponent_bias, pta::PackedTensorAccessor32&lt; uint8_t, 2, at::RestrictPtrTraits &gt; output, const pta::PackedTensorAccessor64&lt; uint8_t, 2, at::RestrictPtrTraits &gt; lxu_cache_weights, const pta::PackedTensorAccessor32&lt; int32_t, 1, at::RestrictPtrTraits &gt; lxu_cache_locations)'],['../gen__embedding__forward__split__unweighted__v2__kernel_8cu.html#a06d07c66722a850f758f54932d3dbe17',1,'true(const uint8_t *__restrict__ const dev_weights, const uint8_t *__restrict__ const uvm_weights, const float *__restrict__ const lxu_cache_weights, const int32_t *__restrict__ const weights_placements, const uint32_t B, const uint32_t T, const bool mean_pooling, const uint32_t max_D_cache, const FixedDivisor fd_num_warps_per_table, const int64_t *__restrict__ const indices, const int64_t *__restrict__ const offsets, const uint32_t *__restrict__ const D_offsets, const int64_t *__restrict__ const weights_offsets, const int32_t *__restrict__ const lxu_cache_locations, uint8_t *__restrict__ const output):&#160;gen_embedding_forward_split_unweighted_v2_kernel.cu'],['../gen__embedding__forward__split__unweighted__v2__kernel_8cu.html#a1aa60c6099666e18389fa1e982910986',1,'true(const uint8_t *__restrict__ const dev_weights, const uint8_t *__restrict__ const uvm_weights, const at::Half *__restrict__ const lxu_cache_weights, const int32_t *__restrict__ const weights_placements, const uint32_t B, const uint32_t T, const bool mean_pooling, const uint32_t max_D_cache, const FixedDivisor fd_num_warps_per_table, const int64_t *__restrict__ const indices, const int64_t *__restrict__ const offsets, const uint32_t *__restrict__ const D_offsets, const int64_t *__restrict__ const weights_offsets, const int32_t *__restrict__ const lxu_cache_locations, uint8_t *__restrict__ const output):&#160;gen_embedding_forward_split_unweighted_v2_kernel.cu'],['../gen__embedding__forward__split__unweighted__v2__kernel_8cu.html#a8de160ae737c50e86160493247817870',1,'true(const float *__restrict__ const dev_weights, const float *__restrict__ const uvm_weights, const float *__restrict__ const lxu_cache_weights, const int32_t *__restrict__ const weights_placements, const uint32_t B, const uint32_t T, const bool mean_pooling, const uint32_t max_D_cache, const FixedDivisor fd_num_warps_per_table, const int64_t *__restrict__ const indices, const int64_t *__restrict__ const offsets, const uint32_t *__restrict__ const D_offsets, const int64_t *__restrict__ const weights_offsets, const int32_t *__restrict__ const lxu_cache_locations, uint8_t *__restrict__ const output):&#160;gen_embedding_forward_split_unweighted_v2_kernel.cu'],['../gen__embedding__forward__split__unweighted__v2__kernel_8cu.html#aa74dcf7a765d22c0b1ec49310c9a04b3',1,'true(const float *__restrict__ const dev_weights, const float *__restrict__ const uvm_weights, const at::Half *__restrict__ const lxu_cache_weights, const int32_t *__restrict__ const weights_placements, const uint32_t B, const uint32_t T, const bool mean_pooling, const uint32_t max_D_cache, const FixedDivisor fd_num_warps_per_table, const int64_t *__restrict__ const indices, const int64_t *__restrict__ const offsets, const uint32_t *__restrict__ const D_offsets, const int64_t *__restrict__ const weights_offsets, const int32_t *__restrict__ const lxu_cache_locations, uint8_t *__restrict__ const output):&#160;gen_embedding_forward_split_unweighted_v2_kernel.cu'],['../gen__embedding__forward__split__unweighted__v2__kernel_8cu.html#a5649e552b4b7bb69095114018ba395fb',1,'true(const uint8_t *__restrict__ const dev_weights, const uint8_t *__restrict__ const uvm_weights, const float *__restrict__ const lxu_cache_weights, const int32_t *__restrict__ const weights_placements, const uint32_t B, const uint32_t T, const bool mean_pooling, const uint32_t max_D_cache, const FixedDivisor fd_num_warps_per_table, const int64_t *__restrict__ const indices, const int64_t *__restrict__ const offsets, const uint32_t *__restrict__ const D_offsets, const int64_t *__restrict__ const weights_offsets, const int32_t *__restrict__ const lxu_cache_locations, at::Half *__restrict__ const output):&#160;gen_embedding_forward_split_unweighted_v2_kernel.cu'],['../gen__embedding__forward__split__unweighted__v2__kernel_8cu.html#a9ec2bf37e5db917feed838745ed81985',1,'true(const uint8_t *__restrict__ const dev_weights, const uint8_t *__restrict__ const uvm_weights, const at::Half *__restrict__ const lxu_cache_weights, const int32_t *__restrict__ const weights_placements, const uint32_t B, const uint32_t T, const bool mean_pooling, const uint32_t max_D_cache, const FixedDivisor fd_num_warps_per_table, const int64_t *__restrict__ const indices, const int64_t *__restrict__ const offsets, const uint32_t *__restrict__ const D_offsets, const int64_t *__restrict__ const weights_offsets, const int32_t *__restrict__ const lxu_cache_locations, at::Half *__restrict__ const output):&#160;gen_embedding_forward_split_unweighted_v2_kernel.cu'],['../gen__embedding__forward__split__unweighted__v2__kernel_8cu.html#a16cf98f36e41cdcacdb6dabac0b258e0',1,'true(const float *__restrict__ const dev_weights, const float *__restrict__ const uvm_weights, const float *__restrict__ const lxu_cache_weights, const int32_t *__restrict__ const weights_placements, const uint32_t B, const uint32_t T, const bool mean_pooling, const uint32_t max_D_cache, const FixedDivisor fd_num_warps_per_table, const int64_t *__restrict__ const indices, const int64_t *__restrict__ const offsets, const uint32_t *__restrict__ const D_offsets, const int64_t *__restrict__ const weights_offsets, const int32_t *__restrict__ const lxu_cache_locations, at::Half *__restrict__ const output):&#160;gen_embedding_forward_split_unweighted_v2_kernel.cu'],['../gen__embedding__forward__split__unweighted__v2__kernel_8cu.html#ab6f0a4b5648537896b38264e4d38f9aa',1,'true(const float *__restrict__ const dev_weights, const float *__restrict__ const uvm_weights, const at::Half *__restrict__ const lxu_cache_weights, const int32_t *__restrict__ const weights_placements, const uint32_t B, const uint32_t T, const bool mean_pooling, const uint32_t max_D_cache, const FixedDivisor fd_num_warps_per_table, const int64_t *__restrict__ const indices, const int64_t *__restrict__ const offsets, const uint32_t *__restrict__ const D_offsets, const int64_t *__restrict__ const weights_offsets, const int32_t *__restrict__ const lxu_cache_locations, at::Half *__restrict__ const output):&#160;gen_embedding_forward_split_unweighted_v2_kernel.cu'],['../gen__embedding__forward__split__unweighted__v2__kernel_8cu.html#a1e7e3a44299ea276cb2e5f5082977777',1,'true(const uint8_t *__restrict__ const dev_weights, const uint8_t *__restrict__ const uvm_weights, const float *__restrict__ const lxu_cache_weights, const int32_t *__restrict__ const weights_placements, const uint32_t B, const uint32_t T, const bool mean_pooling, const uint32_t max_D_cache, const FixedDivisor fd_num_warps_per_table, const int64_t *__restrict__ const indices, const int64_t *__restrict__ const offsets, const uint32_t *__restrict__ const D_offsets, const int64_t *__restrict__ const weights_offsets, const int32_t *__restrict__ const lxu_cache_locations, float *__restrict__ const output):&#160;gen_embedding_forward_split_unweighted_v2_kernel.cu'],['../gen__embedding__forward__split__unweighted__v2__kernel_8cu.html#a3d5bd72dd7f6e6c6b0a50b2070e74f45',1,'true(const uint8_t *__restrict__ const dev_weights, const uint8_t *__restrict__ const uvm_weights, const at::Half *__restrict__ const lxu_cache_weights, const int32_t *__restrict__ const weights_placements, const uint32_t B, const uint32_t T, const bool mean_pooling, const uint32_t max_D_cache, const FixedDivisor fd_num_warps_per_table, const int64_t *__restrict__ const indices, const int64_t *__restrict__ const offsets, const uint32_t *__restrict__ const D_offsets, const int64_t *__restrict__ const weights_offsets, const int32_t *__restrict__ const lxu_cache_locations, float *__restrict__ const output):&#160;gen_embedding_forward_split_unweighted_v2_kernel.cu'],['../gen__embedding__forward__split__unweighted__v2__kernel_8cu.html#af605abd85d3cc9e6dca40ea687104f6e',1,'true(const float *__restrict__ const dev_weights, const float *__restrict__ const uvm_weights, const float *__restrict__ const lxu_cache_weights, const int32_t *__restrict__ const weights_placements, const uint32_t B, const uint32_t T, const bool mean_pooling, const uint32_t max_D_cache, const FixedDivisor fd_num_warps_per_table, const int64_t *__restrict__ const indices, const int64_t *__restrict__ const offsets, const uint32_t *__restrict__ const D_offsets, const int64_t *__restrict__ const weights_offsets, const int32_t *__restrict__ const lxu_cache_locations, float *__restrict__ const output):&#160;gen_embedding_forward_split_unweighted_v2_kernel.cu'],['../gen__embedding__forward__split__unweighted__v2__kernel_8cu.html#a9c2ae1d1bfa19b2caadbc8e76c32697c',1,'true(const float *__restrict__ const dev_weights, const float *__restrict__ const uvm_weights, const at::Half *__restrict__ const lxu_cache_weights, const int32_t *__restrict__ const weights_placements, const uint32_t B, const uint32_t T, const bool mean_pooling, const uint32_t max_D_cache, const FixedDivisor fd_num_warps_per_table, const int64_t *__restrict__ const indices, const int64_t *__restrict__ const offsets, const uint32_t *__restrict__ const D_offsets, const int64_t *__restrict__ const weights_offsets, const int32_t *__restrict__ const lxu_cache_locations, float *__restrict__ const output):&#160;gen_embedding_forward_split_unweighted_v2_kernel.cu'],['../gen__embedding__forward__split__weighted__v2__kernel_8cu.html#aa41a6064cb3571ecd43c9da816216785',1,'true(const uint8_t *__restrict__ const dev_weights, const uint8_t *__restrict__ const uvm_weights, const float *__restrict__ const lxu_cache_weights, const int32_t *__restrict__ const weights_placements, const uint32_t B, const uint32_t T, const bool mean_pooling, const uint32_t max_D_cache, const FixedDivisor fd_num_warps_per_table, const int64_t *__restrict__ const indices, const float *__restrict__ const index_weights, const int64_t *__restrict__ const offsets, const uint32_t *__restrict__ const D_offsets, const int64_t *__restrict__ const weights_offsets, const int32_t *__restrict__ const lxu_cache_locations, uint8_t *__restrict__ const output):&#160;gen_embedding_forward_split_weighted_v2_kernel.cu'],['../gen__embedding__forward__split__weighted__v2__kernel_8cu.html#a66d27435490ba7673e7362fca9cc8f7e',1,'true(const uint8_t *__restrict__ const dev_weights, const uint8_t *__restrict__ const uvm_weights, const at::Half *__restrict__ const lxu_cache_weights, const int32_t *__restrict__ const weights_placements, const uint32_t B, const uint32_t T, const bool mean_pooling, const uint32_t max_D_cache, const FixedDivisor fd_num_warps_per_table, const int64_t *__restrict__ const indices, const float *__restrict__ const index_weights, const int64_t *__restrict__ const offsets, const uint32_t *__restrict__ const D_offsets, const int64_t *__restrict__ const weights_offsets, const int32_t *__restrict__ const lxu_cache_locations, uint8_t *__restrict__ const output):&#160;gen_embedding_forward_split_weighted_v2_kernel.cu'],['../gen__embedding__forward__split__weighted__v2__kernel_8cu.html#ad88bb49652d4d156c75abb8ca2419542',1,'true(const float *__restrict__ const dev_weights, const float *__restrict__ const uvm_weights, const float *__restrict__ const lxu_cache_weights, const int32_t *__restrict__ const weights_placements, const uint32_t B, const uint32_t T, const bool mean_pooling, const uint32_t max_D_cache, const FixedDivisor fd_num_warps_per_table, const int64_t *__restrict__ const indices, const float *__restrict__ const index_weights, const int64_t *__restrict__ const offsets, const uint32_t *__restrict__ const D_offsets, const int64_t *__restrict__ const weights_offsets, const int32_t *__restrict__ const lxu_cache_locations, uint8_t *__restrict__ const output):&#160;gen_embedding_forward_split_weighted_v2_kernel.cu'],['../gen__embedding__forward__split__weighted__v2__kernel_8cu.html#a0a28fe8dcfa38da6241b67d3ec3e4ff2',1,'true(const float *__restrict__ const dev_weights, const float *__restrict__ const uvm_weights, const at::Half *__restrict__ const lxu_cache_weights, const int32_t *__restrict__ const weights_placements, const uint32_t B, const uint32_t T, const bool mean_pooling, const uint32_t max_D_cache, const FixedDivisor fd_num_warps_per_table, const int64_t *__restrict__ const indices, const float *__restrict__ const index_weights, const int64_t *__restrict__ const offsets, const uint32_t *__restrict__ const D_offsets, const int64_t *__restrict__ const weights_offsets, const int32_t *__restrict__ const lxu_cache_locations, uint8_t *__restrict__ const output):&#160;gen_embedding_forward_split_weighted_v2_kernel.cu'],['../gen__embedding__forward__split__weighted__v2__kernel_8cu.html#a09d02507a5cf390975fafa6a5c7096e8',1,'true(const uint8_t *__restrict__ const dev_weights, const uint8_t *__restrict__ const uvm_weights, const float *__restrict__ const lxu_cache_weights, const int32_t *__restrict__ const weights_placements, const uint32_t B, const uint32_t T, const bool mean_pooling, const uint32_t max_D_cache, const FixedDivisor fd_num_warps_per_table, const int64_t *__restrict__ const indices, const float *__restrict__ const index_weights, const int64_t *__restrict__ const offsets, const uint32_t *__restrict__ const D_offsets, const int64_t *__restrict__ const weights_offsets, const int32_t *__restrict__ const lxu_cache_locations, at::Half *__restrict__ const output):&#160;gen_embedding_forward_split_weighted_v2_kernel.cu'],['../gen__embedding__forward__split__weighted__v2__kernel_8cu.html#aa93f293dcfd38afcd57776f33ceb8490',1,'true(const uint8_t *__restrict__ const dev_weights, const uint8_t *__restrict__ const uvm_weights, const at::Half *__restrict__ const lxu_cache_weights, const int32_t *__restrict__ const weights_placements, const uint32_t B, const uint32_t T, const bool mean_pooling, const uint32_t max_D_cache, const FixedDivisor fd_num_warps_per_table, const int64_t *__restrict__ const indices, const float *__restrict__ const index_weights, const int64_t *__restrict__ const offsets, const uint32_t *__restrict__ const D_offsets, const int64_t *__restrict__ const weights_offsets, const int32_t *__restrict__ const lxu_cache_locations, at::Half *__restrict__ const output):&#160;gen_embedding_forward_split_weighted_v2_kernel.cu'],['../gen__embedding__forward__split__weighted__v2__kernel_8cu.html#ab59b0abf8963d48e63c90334daea4fc5',1,'true(const float *__restrict__ const dev_weights, const float *__restrict__ const uvm_weights, const float *__restrict__ const lxu_cache_weights, const int32_t *__restrict__ const weights_placements, const uint32_t B, const uint32_t T, const bool mean_pooling, const uint32_t max_D_cache, const FixedDivisor fd_num_warps_per_table, const int64_t *__restrict__ const indices, const float *__restrict__ const index_weights, const int64_t *__restrict__ const offsets, const uint32_t *__restrict__ const D_offsets, const int64_t *__restrict__ const weights_offsets, const int32_t *__restrict__ const lxu_cache_locations, at::Half *__restrict__ const output):&#160;gen_embedding_forward_split_weighted_v2_kernel.cu'],['../gen__embedding__forward__split__weighted__v2__kernel_8cu.html#ab80c4590dcdff94d23d4f89f1c7e0039',1,'true(const float *__restrict__ const dev_weights, const float *__restrict__ const uvm_weights, const at::Half *__restrict__ const lxu_cache_weights, const int32_t *__restrict__ const weights_placements, const uint32_t B, const uint32_t T, const bool mean_pooling, const uint32_t max_D_cache, const FixedDivisor fd_num_warps_per_table, const int64_t *__restrict__ const indices, const float *__restrict__ const index_weights, const int64_t *__restrict__ const offsets, const uint32_t *__restrict__ const D_offsets, const int64_t *__restrict__ const weights_offsets, const int32_t *__restrict__ const lxu_cache_locations, at::Half *__restrict__ const output):&#160;gen_embedding_forward_split_weighted_v2_kernel.cu'],['../gen__embedding__forward__split__weighted__v2__kernel_8cu.html#addc9e8fb4cd569b143bff818ca6e068b',1,'true(const uint8_t *__restrict__ const dev_weights, const uint8_t *__restrict__ const uvm_weights, const float *__restrict__ const lxu_cache_weights, const int32_t *__restrict__ const weights_placements, const uint32_t B, const uint32_t T, const bool mean_pooling, const uint32_t max_D_cache, const FixedDivisor fd_num_warps_per_table, const int64_t *__restrict__ const indices, const float *__restrict__ const index_weights, const int64_t *__restrict__ const offsets, const uint32_t *__restrict__ const D_offsets, const int64_t *__restrict__ const weights_offsets, const int32_t *__restrict__ const lxu_cache_locations, float *__restrict__ const output):&#160;gen_embedding_forward_split_weighted_v2_kernel.cu'],['../gen__embedding__forward__split__weighted__v2__kernel_8cu.html#aca3f7571841f3f5e46e703a210f5ef3d',1,'true(const uint8_t *__restrict__ const dev_weights, const uint8_t *__restrict__ const uvm_weights, const at::Half *__restrict__ const lxu_cache_weights, const int32_t *__restrict__ const weights_placements, const uint32_t B, const uint32_t T, const bool mean_pooling, const uint32_t max_D_cache, const FixedDivisor fd_num_warps_per_table, const int64_t *__restrict__ const indices, const float *__restrict__ const index_weights, const int64_t *__restrict__ const offsets, const uint32_t *__restrict__ const D_offsets, const int64_t *__restrict__ const weights_offsets, const int32_t *__restrict__ const lxu_cache_locations, float *__restrict__ const output):&#160;gen_embedding_forward_split_weighted_v2_kernel.cu'],['../gen__embedding__forward__split__weighted__v2__kernel_8cu.html#afeba51154f1a22327b47305480f43671',1,'true(const float *__restrict__ const dev_weights, const float *__restrict__ const uvm_weights, const float *__restrict__ const lxu_cache_weights, const int32_t *__restrict__ const weights_placements, const uint32_t B, const uint32_t T, const bool mean_pooling, const uint32_t max_D_cache, const FixedDivisor fd_num_warps_per_table, const int64_t *__restrict__ const indices, const float *__restrict__ const index_weights, const int64_t *__restrict__ const offsets, const uint32_t *__restrict__ const D_offsets, const int64_t *__restrict__ const weights_offsets, const int32_t *__restrict__ const lxu_cache_locations, float *__restrict__ const output):&#160;gen_embedding_forward_split_weighted_v2_kernel.cu'],['../gen__embedding__forward__split__weighted__v2__kernel_8cu.html#a4a3bc2db616d7f8f845d8e0cd092fd56',1,'true(const float *__restrict__ const dev_weights, const float *__restrict__ const uvm_weights, const at::Half *__restrict__ const lxu_cache_weights, const int32_t *__restrict__ const weights_placements, const uint32_t B, const uint32_t T, const bool mean_pooling, const uint32_t max_D_cache, const FixedDivisor fd_num_warps_per_table, const int64_t *__restrict__ const indices, const float *__restrict__ const index_weights, const int64_t *__restrict__ const offsets, const uint32_t *__restrict__ const D_offsets, const int64_t *__restrict__ const weights_offsets, const int32_t *__restrict__ const lxu_cache_locations, float *__restrict__ const output):&#160;gen_embedding_forward_split_weighted_v2_kernel.cu']]],
  ['two_5fto_5fe_33',['two_to_e',['../verify__fp16__stochastic__benchmark_8cu.html#ab29b4915253bcafe11f5d95cfb227c0b',1,'verify_fp16_stochastic_benchmark.cu']]]
];
