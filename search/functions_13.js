var searchData=
[
  ['segment_5fsum_5fcsr_5fcpu_0',['segment_sum_csr_cpu',['../namespacefbgemm__gpu.html#a678327561759694192908f1f111424f7',1,'fbgemm_gpu']]],
  ['segment_5fsum_5fcsr_5fcuda_1',['segment_sum_csr_cuda',['../namespacefbgemm__gpu.html#a8ae9711da44e5cd4a81f95a762b41180',1,'fbgemm_gpu']]],
  ['set_2',['set',['../classssd_1_1_embedding_rocks_d_b.html#a1951c5647b663fc955ee1076f68190ec',1,'ssd::EmbeddingRocksDB']]],
  ['set_5fcuda_3',['set_cuda',['../classssd_1_1_embedding_rocks_d_b.html#a1b6c5343b7eafae73491f0749f1151a9',1,'ssd::EmbeddingRocksDB']]],
  ['set_5fstochastic_5frounding_4',['set_stochastic_rounding',['../structfbgemm__gpu_1_1_weight_row.html#a4548dbb10be8705cf81e3e2362f1cea3',1,'fbgemm_gpu::WeightRow']]],
  ['shfl_5fdown_5fsync_5',['shfl_down_sync',['../namespacefbgemm__gpu.html#a52eb62356a603284f18652bc195274ea',1,'fbgemm_gpu']]],
  ['shfl_5fsync_6',['shfl_sync',['../namespacefbgemm__gpu.html#a9b3fcf49a28b6524c8db8c7c523e1798',1,'fbgemm_gpu']]],
  ['shfl_5fxor_7',['shfl_xor',['../namespacefbgemm__gpu.html#a17b07e8668ed9b29a8b37d21a829723d',1,'fbgemm_gpu']]],
  ['should_5fprune_8',['should_prune',['../namespacefbgemm__gpu.html#a4ae09e478c1e9d6a414935fb6cf60f99',1,'fbgemm_gpu']]],
  ['size_9',['size',['../classfbgemm__gpu_1_1_tensor_accessor_base.html#a53408e729e4cd52d06e5c577afbfcf9d',1,'fbgemm_gpu::TensorAccessorBase::size()'],['../classfbgemm__gpu_1_1_generic_packed_tensor_accessor_base.html#a53408e729e4cd52d06e5c577afbfcf9d',1,'fbgemm_gpu::GenericPackedTensorAccessorBase::size()']]],
  ['sizes_10',['sizes',['../classfbgemm__gpu_1_1_tensor_accessor_base.html#a5b7afa180d3bd84115f26a365b167e5e',1,'fbgemm_gpu::TensorAccessorBase']]],
  ['sort_11',['sort',['../structfbgemm__gpu_1_1_bitonic_sort.html#ae729c535b885ed8e2aca6d99ef51e4b0',1,'fbgemm_gpu::BitonicSort']]],
  ['split_5fadagrad_5ftable_5fupdate_5fkernel_12',['split_adagrad_table_update_kernel',['../gen__embedding__optimizer__adagrad__split__device__kernel_8cuh.html#aae2b7a37c2c14a8e8575336d88932f5e',1,'gen_embedding_optimizer_adagrad_split_device_kernel.cuh']]],
  ['split_5fadam_5ftable_5fupdate_5fkernel_13',['split_adam_table_update_kernel',['../gen__embedding__optimizer__adam__split__device__kernel_8cuh.html#a415ebd6751961f1e6826cfe2712cc85e',1,'gen_embedding_optimizer_adam_split_device_kernel.cuh']]],
  ['split_5fapprox_5frowwise_5fadagrad_5ftable_5fupdate_5fkernel_14',['split_approx_rowwise_adagrad_table_update_kernel',['../gen__embedding__optimizer__approx__rowwise__adagrad__split__device__kernel_8cuh.html#a9263ef077d631b455021b5cfe68d9632',1,'gen_embedding_optimizer_approx_rowwise_adagrad_split_device_kernel.cuh']]],
  ['split_5fapprox_5frowwise_5fadagrad_5fwith_5fcounter_5ftable_5fupdate_5fkernel_15',['split_approx_rowwise_adagrad_with_counter_table_update_kernel',['../gen__embedding__optimizer__approx__rowwise__adagrad__with__counter__split__device__kernel_8cuh.html#a2f7931888711cbd1dff1f7fda564b3a5',1,'gen_embedding_optimizer_approx_rowwise_adagrad_with_counter_split_device_kernel.cuh']]],
  ['split_5fapprox_5frowwise_5fadagrad_5fwith_5fweight_5fdecay_5ftable_5fupdate_5fkernel_16',['split_approx_rowwise_adagrad_with_weight_decay_table_update_kernel',['../gen__embedding__optimizer__approx__rowwise__adagrad__with__weight__decay__split__device__kernel_8cuh.html#a30fdc78bf391825590b69585779a9baf',1,'gen_embedding_optimizer_approx_rowwise_adagrad_with_weight_decay_split_device_kernel.cuh']]],
  ['split_5fapprox_5fsgd_5ftable_5fupdate_5fkernel_17',['split_approx_sgd_table_update_kernel',['../gen__embedding__optimizer__approx__sgd__split__device__kernel_8cuh.html#abcf3f2a323ec4155270a5fcfffecd462',1,'gen_embedding_optimizer_approx_sgd_split_device_kernel.cuh']]],
  ['split_5fdense_5ftable_5fupdate_5fkernel_18',['split_dense_table_update_kernel',['../gen__embedding__optimizer__dense__split__device__kernel_8cuh.html#a9a55851e1eec2af9f174c94e138a4aa7',1,'gen_embedding_optimizer_dense_split_device_kernel.cuh']]],
  ['split_5fembedding_5fbackward_5fcodegen_5fadagrad_5fcpu_19',['split_embedding_backward_codegen_adagrad_cpu',['../gen__embedding__backward__adagrad__split__cpu_8cpp.html#a5e9389fec0497e9f90df6043627319ca',1,'split_embedding_backward_codegen_adagrad_cpu(Tensor grad_output, Tensor host_weights, Tensor weights_placements, Tensor weights_offsets, Tensor D_offsets, int64_t max_D, Tensor hash_size_cumsum, int64_t total_hash_size_bits, Tensor indices, Tensor offsets, int64_t pooling_mode, Tensor indice_weights, bool stochastic_rounding, Tensor momentum1_host, Tensor momentum1_placements, Tensor momentum1_offsets, double eps=0, double learning_rate=0, int64_t output_dtype=static_cast&lt; int64_t &gt;(SparseType::FP32)):&#160;gen_embedding_backward_adagrad_split_cpu.cpp'],['../gen__embedding__backward__split__adagrad__cpu_8cpp.html#a5e9389fec0497e9f90df6043627319ca',1,'split_embedding_backward_codegen_adagrad_cpu(Tensor grad_output, Tensor host_weights, Tensor weights_placements, Tensor weights_offsets, Tensor D_offsets, int64_t max_D, Tensor hash_size_cumsum, int64_t total_hash_size_bits, Tensor indices, Tensor offsets, int64_t pooling_mode, Tensor indice_weights, bool stochastic_rounding, Tensor momentum1_host, Tensor momentum1_placements, Tensor momentum1_offsets, double eps=0, double learning_rate=0, int64_t output_dtype=static_cast&lt; int64_t &gt;(SparseType::FP32)):&#160;gen_embedding_backward_adagrad_split_cpu.cpp']]],
  ['split_5fembedding_5fbackward_5fcodegen_5fadagrad_5funweighted_5fexact_5fcuda_20',['split_embedding_backward_codegen_adagrad_unweighted_exact_cuda',['../gen__embedding__backward__adagrad__split__unweighted__cuda_8cu.html#a1207210a9545e9575750541d0b87d2ff',1,'split_embedding_backward_codegen_adagrad_unweighted_exact_cuda(const Tensor &amp;grad_output, const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t max_D, const Tensor &amp;hash_size_cumsum, const int64_t total_hash_size_bits, const Tensor &amp;indices, const Tensor &amp;offsets, const int64_t pooling_mode, const Tensor &amp;lxu_cache_locations, const int64_t unused_, const int64_t max_segment_length_per_warp, const bool stochastic_rounding, const int64_t info_B_num_bits, const int64_t info_B_mask_int64, const bool use_uniq_cache_locations, const bool use_homogeneous_placements, Tensor momentum1_dev, Tensor momentum1_uvm, Tensor momentum1_placements, Tensor momentum1_offsets, double eps, double learning_rate):&#160;gen_embedding_backward_adagrad_split_unweighted_cuda.cu'],['../gen__embedding__backward__split__adagrad_8cpp.html#a06b1cf5ad03a298c5257a31b33524398',1,'split_embedding_backward_codegen_adagrad_unweighted_exact_cuda(const Tensor &amp;grad_output, const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t max_D, const Tensor &amp;hash_size_cumsum, const int64_t total_hash_size_bits, const Tensor &amp;indices, const Tensor &amp;offsets, const int64_t pooling_mode, const Tensor &amp;lxu_cache_locations, const int64_t BT_block_size, const int64_t max_segment_length_per_warp, const bool stochastic_rounding, const int64_t info_B_num_bits, const int64_t info_B_mask_int64, const bool use_uniq_cache_locations, const bool use_homogeneous_placements, Tensor momentum1_dev, Tensor momentum1_uvm, Tensor momentum1_placements, Tensor momentum1_offsets, double eps=0, double learning_rate=0):&#160;gen_embedding_backward_adagrad_split_unweighted_cuda.cu']]],
  ['split_5fembedding_5fbackward_5fcodegen_5fadagrad_5fweighted_5fexact_5fcuda_21',['split_embedding_backward_codegen_adagrad_weighted_exact_cuda',['../gen__embedding__backward__adagrad__split__weighted__cuda_8cu.html#a0e8cc9d4217b55864ac828677d7d546d',1,'split_embedding_backward_codegen_adagrad_weighted_exact_cuda(const Tensor &amp;grad_output, const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t max_D, const Tensor &amp;hash_size_cumsum, const int64_t total_hash_size_bits, const Tensor &amp;indices, const Tensor &amp;offsets, const int64_t pooling_mode, const Tensor &amp;indice_weights, const Tensor &amp;lxu_cache_locations, const int64_t unused_, const int64_t max_segment_length_per_warp, const bool stochastic_rounding, const int64_t info_B_num_bits, const int64_t info_B_mask_int64, const bool use_uniq_cache_locations, const bool use_homogeneous_placements, Tensor momentum1_dev, Tensor momentum1_uvm, Tensor momentum1_placements, Tensor momentum1_offsets, double eps, double learning_rate):&#160;gen_embedding_backward_adagrad_split_weighted_cuda.cu'],['../gen__embedding__backward__split__adagrad_8cpp.html#affb9be553e49e7bea6a6c3f60b63dc04',1,'split_embedding_backward_codegen_adagrad_weighted_exact_cuda(const Tensor &amp;grad_output, const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t max_D, const Tensor &amp;hash_size_cumsum, const int64_t total_hash_size_bits, const Tensor &amp;indices, const Tensor &amp;offsets, const int64_t pooling_mode, const Tensor &amp;indice_weights, const Tensor &amp;lxu_cache_locations, const int64_t BT_block_size, const int64_t max_segment_length_per_warp, const bool stochastic_rounding, const int64_t info_B_num_bits, const int64_t info_B_mask_int64, const bool use_uniq_cache_locations, const bool use_homogeneous_placements, Tensor momentum1_dev, Tensor momentum1_uvm, Tensor momentum1_placements, Tensor momentum1_offsets, double eps=0, double learning_rate=0):&#160;gen_embedding_backward_adagrad_split_weighted_cuda.cu']]],
  ['split_5fembedding_5fbackward_5fcodegen_5fadam_5funweighted_5fexact_5fcuda_22',['split_embedding_backward_codegen_adam_unweighted_exact_cuda',['../gen__embedding__backward__adam__split__unweighted__cuda_8cu.html#a7c3fa518fa48a831ea3f8e691672808e',1,'split_embedding_backward_codegen_adam_unweighted_exact_cuda(const Tensor &amp;grad_output, const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t max_D, const Tensor &amp;hash_size_cumsum, const int64_t total_hash_size_bits, const Tensor &amp;indices, const Tensor &amp;offsets, const int64_t pooling_mode, const Tensor &amp;lxu_cache_locations, const int64_t unused_, const int64_t max_segment_length_per_warp, const bool stochastic_rounding, const int64_t info_B_num_bits, const int64_t info_B_mask_int64, const bool use_uniq_cache_locations, const bool use_homogeneous_placements, Tensor momentum1_dev, Tensor momentum1_uvm, Tensor momentum1_placements, Tensor momentum1_offsets, Tensor momentum2_dev, Tensor momentum2_uvm, Tensor momentum2_placements, Tensor momentum2_offsets, double learning_rate, double eps, double beta1, double beta2, double weight_decay, int64_t iter):&#160;gen_embedding_backward_adam_split_unweighted_cuda.cu'],['../gen__embedding__backward__split__adam_8cpp.html#ae27a3d26d13d596aaaa1e621990e0d71',1,'split_embedding_backward_codegen_adam_unweighted_exact_cuda(const Tensor &amp;grad_output, const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t max_D, const Tensor &amp;hash_size_cumsum, const int64_t total_hash_size_bits, const Tensor &amp;indices, const Tensor &amp;offsets, const int64_t pooling_mode, const Tensor &amp;lxu_cache_locations, const int64_t BT_block_size, const int64_t max_segment_length_per_warp, const bool stochastic_rounding, const int64_t info_B_num_bits, const int64_t info_B_mask_int64, const bool use_uniq_cache_locations, const bool use_homogeneous_placements, Tensor momentum1_dev, Tensor momentum1_uvm, Tensor momentum1_placements, Tensor momentum1_offsets, Tensor momentum2_dev, Tensor momentum2_uvm, Tensor momentum2_placements, Tensor momentum2_offsets, double learning_rate=0, double eps=0, double beta1=0, double beta2=0, double weight_decay=0, int64_t iter=0):&#160;gen_embedding_backward_adam_split_unweighted_cuda.cu']]],
  ['split_5fembedding_5fbackward_5fcodegen_5fadam_5fweighted_5fexact_5fcuda_23',['split_embedding_backward_codegen_adam_weighted_exact_cuda',['../gen__embedding__backward__adam__split__weighted__cuda_8cu.html#aea34407b88c9df5b3be55e8ea24a347d',1,'split_embedding_backward_codegen_adam_weighted_exact_cuda(const Tensor &amp;grad_output, const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t max_D, const Tensor &amp;hash_size_cumsum, const int64_t total_hash_size_bits, const Tensor &amp;indices, const Tensor &amp;offsets, const int64_t pooling_mode, const Tensor &amp;indice_weights, const Tensor &amp;lxu_cache_locations, const int64_t unused_, const int64_t max_segment_length_per_warp, const bool stochastic_rounding, const int64_t info_B_num_bits, const int64_t info_B_mask_int64, const bool use_uniq_cache_locations, const bool use_homogeneous_placements, Tensor momentum1_dev, Tensor momentum1_uvm, Tensor momentum1_placements, Tensor momentum1_offsets, Tensor momentum2_dev, Tensor momentum2_uvm, Tensor momentum2_placements, Tensor momentum2_offsets, double learning_rate, double eps, double beta1, double beta2, double weight_decay, int64_t iter):&#160;gen_embedding_backward_adam_split_weighted_cuda.cu'],['../gen__embedding__backward__split__adam_8cpp.html#a8e4ae3bed221149c3b3ab6a5c0f38605',1,'split_embedding_backward_codegen_adam_weighted_exact_cuda(const Tensor &amp;grad_output, const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t max_D, const Tensor &amp;hash_size_cumsum, const int64_t total_hash_size_bits, const Tensor &amp;indices, const Tensor &amp;offsets, const int64_t pooling_mode, const Tensor &amp;indice_weights, const Tensor &amp;lxu_cache_locations, const int64_t BT_block_size, const int64_t max_segment_length_per_warp, const bool stochastic_rounding, const int64_t info_B_num_bits, const int64_t info_B_mask_int64, const bool use_uniq_cache_locations, const bool use_homogeneous_placements, Tensor momentum1_dev, Tensor momentum1_uvm, Tensor momentum1_placements, Tensor momentum1_offsets, Tensor momentum2_dev, Tensor momentum2_uvm, Tensor momentum2_placements, Tensor momentum2_offsets, double learning_rate=0, double eps=0, double beta1=0, double beta2=0, double weight_decay=0, int64_t iter=0):&#160;gen_embedding_backward_adam_split_weighted_cuda.cu']]],
  ['split_5fembedding_5fbackward_5fcodegen_5fapprox_5frowwise_5fadagrad_5fwith_5fweight_5fdecay_5funweighted_5fexact_5fcuda_24',['split_embedding_backward_codegen_approx_rowwise_adagrad_with_weight_decay_unweighted_exact_cuda',['../gen__embedding__backward__approx__rowwise__adagrad__with__weight__decay__split__unweighted__cuda_8cu.html#a346e3b137705a7c27ea4448090c853ca',1,'split_embedding_backward_codegen_approx_rowwise_adagrad_with_weight_decay_unweighted_exact_cuda(const Tensor &amp;grad_output, const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t max_D, const Tensor &amp;hash_size_cumsum, const int64_t total_hash_size_bits, const Tensor &amp;indices, const Tensor &amp;offsets, const int64_t pooling_mode, const Tensor &amp;lxu_cache_locations, const int64_t unused_, const int64_t max_segment_length_per_warp, const bool stochastic_rounding, const int64_t info_B_num_bits, const int64_t info_B_mask_int64, const bool use_uniq_cache_locations, const bool use_homogeneous_placements, Tensor momentum1_dev, Tensor momentum1_uvm, Tensor momentum1_placements, Tensor momentum1_offsets, double eps, double learning_rate, double weight_decay, int64_t weight_decay_mode):&#160;gen_embedding_backward_approx_rowwise_adagrad_with_weight_decay_split_unweighted_cuda.cu'],['../gen__embedding__backward__split__approx__rowwise__adagrad__with__weight__decay_8cpp.html#afbce26182226d45104cf25fc6ebf90df',1,'split_embedding_backward_codegen_approx_rowwise_adagrad_with_weight_decay_unweighted_exact_cuda(const Tensor &amp;grad_output, const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t max_D, const Tensor &amp;hash_size_cumsum, const int64_t total_hash_size_bits, const Tensor &amp;indices, const Tensor &amp;offsets, const int64_t pooling_mode, const Tensor &amp;lxu_cache_locations, const int64_t BT_block_size, const int64_t max_segment_length_per_warp, const bool stochastic_rounding, const int64_t info_B_num_bits, const int64_t info_B_mask_int64, const bool use_uniq_cache_locations, const bool use_homogeneous_placements, Tensor momentum1_dev, Tensor momentum1_uvm, Tensor momentum1_placements, Tensor momentum1_offsets, double eps=0, double learning_rate=0, double weight_decay=0.0, int64_t weight_decay_mode=0):&#160;gen_embedding_backward_approx_rowwise_adagrad_with_weight_decay_split_unweighted_cuda.cu']]],
  ['split_5fembedding_5fbackward_5fcodegen_5fapprox_5frowwise_5fadagrad_5fwith_5fweight_5fdecay_5fweighted_5fexact_5fcuda_25',['split_embedding_backward_codegen_approx_rowwise_adagrad_with_weight_decay_weighted_exact_cuda',['../gen__embedding__backward__approx__rowwise__adagrad__with__weight__decay__split__weighted__cuda_8cu.html#a1ff3b73be256bfc5b6a6a92c35f5c101',1,'split_embedding_backward_codegen_approx_rowwise_adagrad_with_weight_decay_weighted_exact_cuda(const Tensor &amp;grad_output, const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t max_D, const Tensor &amp;hash_size_cumsum, const int64_t total_hash_size_bits, const Tensor &amp;indices, const Tensor &amp;offsets, const int64_t pooling_mode, const Tensor &amp;indice_weights, const Tensor &amp;lxu_cache_locations, const int64_t unused_, const int64_t max_segment_length_per_warp, const bool stochastic_rounding, const int64_t info_B_num_bits, const int64_t info_B_mask_int64, const bool use_uniq_cache_locations, const bool use_homogeneous_placements, Tensor momentum1_dev, Tensor momentum1_uvm, Tensor momentum1_placements, Tensor momentum1_offsets, double eps, double learning_rate, double weight_decay, int64_t weight_decay_mode):&#160;gen_embedding_backward_approx_rowwise_adagrad_with_weight_decay_split_weighted_cuda.cu'],['../gen__embedding__backward__split__approx__rowwise__adagrad__with__weight__decay_8cpp.html#ae5ec715aff7b59ae2cd64991053a8744',1,'split_embedding_backward_codegen_approx_rowwise_adagrad_with_weight_decay_weighted_exact_cuda(const Tensor &amp;grad_output, const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t max_D, const Tensor &amp;hash_size_cumsum, const int64_t total_hash_size_bits, const Tensor &amp;indices, const Tensor &amp;offsets, const int64_t pooling_mode, const Tensor &amp;indice_weights, const Tensor &amp;lxu_cache_locations, const int64_t BT_block_size, const int64_t max_segment_length_per_warp, const bool stochastic_rounding, const int64_t info_B_num_bits, const int64_t info_B_mask_int64, const bool use_uniq_cache_locations, const bool use_homogeneous_placements, Tensor momentum1_dev, Tensor momentum1_uvm, Tensor momentum1_placements, Tensor momentum1_offsets, double eps=0, double learning_rate=0, double weight_decay=0.0, int64_t weight_decay_mode=0):&#160;gen_embedding_backward_approx_rowwise_adagrad_with_weight_decay_split_weighted_cuda.cu']]],
  ['split_5fembedding_5fbackward_5fcodegen_5fdense_5fcpu_26',['split_embedding_backward_codegen_dense_cpu',['../gen__embedding__backward__dense__split__cpu_8cpp.html#a9872de3651e55555a2bea1c407c45c5d',1,'split_embedding_backward_codegen_dense_cpu(Tensor grad_output, Tensor host_weights, Tensor weights_offsets, Tensor D_offsets, int64_t max_D, Tensor hash_size_cumsum, int64_t total_hash_size_bits, Tensor indices, Tensor offsets, int64_t pooling_mode, Tensor indice_weights, double unused=0):&#160;gen_embedding_backward_dense_split_cpu.cpp'],['../embedding__backward__dense__host__cpu_8cpp.html#a16114b295cd4bb55fd704d1cc575284f',1,'split_embedding_backward_codegen_dense_cpu(Tensor grad_output, Tensor host_weights, Tensor weights_offsets, Tensor D_offsets, int64_t max_D, Tensor hash_size_cumsum, int64_t total_hash_size_bits, Tensor indices, Tensor offsets, int64_t pooling_mode, Tensor indice_weights, double unused):&#160;gen_embedding_backward_dense_split_cpu.cpp']]],
  ['split_5fembedding_5fbackward_5fcodegen_5fdense_5funweighted_5fexact_5fcuda_27',['split_embedding_backward_codegen_dense_unweighted_exact_cuda',['../gen__embedding__backward__dense__split__unweighted__cuda_8cu.html#af39484621a2a43237ee275c7d9497e16',1,'split_embedding_backward_codegen_dense_unweighted_exact_cuda(const Tensor &amp;grad_output, const Tensor &amp;dev_weights, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t max_D, const Tensor &amp;hash_size_cumsum, const int64_t total_hash_size_bits, const Tensor &amp;indices, const Tensor &amp;offsets, const int64_t pooling_mode, const int64_t unused_, const int64_t max_segment_length_per_warp, double unused):&#160;gen_embedding_backward_dense_split_unweighted_cuda.cu'],['../embedding__backward__dense__host_8cpp.html#aebdb9ab2fd0166beebd42528ea223ac4',1,'split_embedding_backward_codegen_dense_unweighted_exact_cuda(const Tensor &amp;grad_output, const Tensor &amp;dev_weights, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t max_D, const Tensor &amp;hash_size_cumsum, const int64_t total_hash_size_bits, const Tensor &amp;indices, const Tensor &amp;offsets, const int64_t pooling_mode, const int64_t BT_block_size, const int64_t max_segment_length_per_warp, const double unused):&#160;gen_embedding_backward_dense_split_unweighted_cuda.cu']]],
  ['split_5fembedding_5fbackward_5fcodegen_5fdense_5fweighted_5fexact_5fcuda_28',['split_embedding_backward_codegen_dense_weighted_exact_cuda',['../gen__embedding__backward__dense__split__weighted__cuda_8cu.html#aeae20f9c1a93bb4297f2710fe00723a2',1,'split_embedding_backward_codegen_dense_weighted_exact_cuda(const Tensor &amp;grad_output, const Tensor &amp;dev_weights, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t max_D, const Tensor &amp;hash_size_cumsum, const int64_t total_hash_size_bits, const Tensor &amp;indices, const Tensor &amp;offsets, const int64_t pooling_mode, const Tensor &amp;indice_weights, const int64_t unused_, const int64_t max_segment_length_per_warp, double unused):&#160;gen_embedding_backward_dense_split_weighted_cuda.cu'],['../embedding__backward__dense__host_8cpp.html#a4a920500b84d7febde7964cfa515c690',1,'split_embedding_backward_codegen_dense_weighted_exact_cuda(const Tensor &amp;grad_output, const Tensor &amp;dev_weights, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t max_D, const Tensor &amp;hash_size_cumsum, const int64_t total_hash_size_bits, const Tensor &amp;indices, const Tensor &amp;offsets, const int64_t pooling_mode, const Tensor &amp;indice_weights, const int64_t BT_block_size, const int64_t max_segment_length_per_warp, const double unused):&#160;gen_embedding_backward_dense_split_weighted_cuda.cu']]],
  ['split_5fembedding_5fbackward_5fcodegen_5flamb_5funweighted_5fexact_5fcuda_29',['split_embedding_backward_codegen_lamb_unweighted_exact_cuda',['../gen__embedding__backward__lamb__split__unweighted__cuda_8cu.html#a45b16bde5dcd4ed361824c02fb19aa28',1,'split_embedding_backward_codegen_lamb_unweighted_exact_cuda(const Tensor &amp;grad_output, const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t max_D, const Tensor &amp;hash_size_cumsum, const int64_t total_hash_size_bits, const Tensor &amp;indices, const Tensor &amp;offsets, const int64_t pooling_mode, const Tensor &amp;lxu_cache_locations, const int64_t unused_, const int64_t max_segment_length_per_warp, const bool stochastic_rounding, const int64_t info_B_num_bits, const int64_t info_B_mask_int64, const bool use_uniq_cache_locations, const bool use_homogeneous_placements, Tensor momentum1_dev, Tensor momentum1_uvm, Tensor momentum1_placements, Tensor momentum1_offsets, Tensor momentum2_dev, Tensor momentum2_uvm, Tensor momentum2_placements, Tensor momentum2_offsets, double learning_rate, double eps, double beta1, double beta2, double weight_decay, int64_t iter):&#160;gen_embedding_backward_lamb_split_unweighted_cuda.cu'],['../gen__embedding__backward__split__lamb_8cpp.html#abafaac43ca0a5d04be6280c0db92ef81',1,'split_embedding_backward_codegen_lamb_unweighted_exact_cuda(const Tensor &amp;grad_output, const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t max_D, const Tensor &amp;hash_size_cumsum, const int64_t total_hash_size_bits, const Tensor &amp;indices, const Tensor &amp;offsets, const int64_t pooling_mode, const Tensor &amp;lxu_cache_locations, const int64_t BT_block_size, const int64_t max_segment_length_per_warp, const bool stochastic_rounding, const int64_t info_B_num_bits, const int64_t info_B_mask_int64, const bool use_uniq_cache_locations, const bool use_homogeneous_placements, Tensor momentum1_dev, Tensor momentum1_uvm, Tensor momentum1_placements, Tensor momentum1_offsets, Tensor momentum2_dev, Tensor momentum2_uvm, Tensor momentum2_placements, Tensor momentum2_offsets, double learning_rate=0, double eps=0, double beta1=0, double beta2=0, double weight_decay=0, int64_t iter=0):&#160;gen_embedding_backward_lamb_split_unweighted_cuda.cu']]],
  ['split_5fembedding_5fbackward_5fcodegen_5flamb_5fweighted_5fexact_5fcuda_30',['split_embedding_backward_codegen_lamb_weighted_exact_cuda',['../gen__embedding__backward__lamb__split__weighted__cuda_8cu.html#ac26e29ea75fba6b9f3922118cd293b96',1,'split_embedding_backward_codegen_lamb_weighted_exact_cuda(const Tensor &amp;grad_output, const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t max_D, const Tensor &amp;hash_size_cumsum, const int64_t total_hash_size_bits, const Tensor &amp;indices, const Tensor &amp;offsets, const int64_t pooling_mode, const Tensor &amp;indice_weights, const Tensor &amp;lxu_cache_locations, const int64_t unused_, const int64_t max_segment_length_per_warp, const bool stochastic_rounding, const int64_t info_B_num_bits, const int64_t info_B_mask_int64, const bool use_uniq_cache_locations, const bool use_homogeneous_placements, Tensor momentum1_dev, Tensor momentum1_uvm, Tensor momentum1_placements, Tensor momentum1_offsets, Tensor momentum2_dev, Tensor momentum2_uvm, Tensor momentum2_placements, Tensor momentum2_offsets, double learning_rate, double eps, double beta1, double beta2, double weight_decay, int64_t iter):&#160;gen_embedding_backward_lamb_split_weighted_cuda.cu'],['../gen__embedding__backward__split__lamb_8cpp.html#a2cb504a8487e7581fcf600c9dd9bb4da',1,'split_embedding_backward_codegen_lamb_weighted_exact_cuda(const Tensor &amp;grad_output, const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t max_D, const Tensor &amp;hash_size_cumsum, const int64_t total_hash_size_bits, const Tensor &amp;indices, const Tensor &amp;offsets, const int64_t pooling_mode, const Tensor &amp;indice_weights, const Tensor &amp;lxu_cache_locations, const int64_t BT_block_size, const int64_t max_segment_length_per_warp, const bool stochastic_rounding, const int64_t info_B_num_bits, const int64_t info_B_mask_int64, const bool use_uniq_cache_locations, const bool use_homogeneous_placements, Tensor momentum1_dev, Tensor momentum1_uvm, Tensor momentum1_placements, Tensor momentum1_offsets, Tensor momentum2_dev, Tensor momentum2_uvm, Tensor momentum2_placements, Tensor momentum2_offsets, double learning_rate=0, double eps=0, double beta1=0, double beta2=0, double weight_decay=0, int64_t iter=0):&#160;gen_embedding_backward_lamb_split_weighted_cuda.cu']]],
  ['split_5fembedding_5fbackward_5fcodegen_5flars_5fsgd_5funweighted_5fexact_5fcuda_31',['split_embedding_backward_codegen_lars_sgd_unweighted_exact_cuda',['../gen__embedding__backward__lars__sgd__split__unweighted__cuda_8cu.html#a68717d5b465de7efb3f58ca7f1c9c48e',1,'split_embedding_backward_codegen_lars_sgd_unweighted_exact_cuda(const Tensor &amp;grad_output, const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t max_D, const Tensor &amp;hash_size_cumsum, const int64_t total_hash_size_bits, const Tensor &amp;indices, const Tensor &amp;offsets, const int64_t pooling_mode, const Tensor &amp;lxu_cache_locations, const int64_t unused_, const int64_t max_segment_length_per_warp, const bool stochastic_rounding, const int64_t info_B_num_bits, const int64_t info_B_mask_int64, const bool use_uniq_cache_locations, const bool use_homogeneous_placements, Tensor momentum1_dev, Tensor momentum1_uvm, Tensor momentum1_placements, Tensor momentum1_offsets, double learning_rate, double eta, double momentum, double weight_decay):&#160;gen_embedding_backward_lars_sgd_split_unweighted_cuda.cu'],['../gen__embedding__backward__split__lars__sgd_8cpp.html#ad6a69a83e0c09e08c8854f3a988349c2',1,'split_embedding_backward_codegen_lars_sgd_unweighted_exact_cuda(const Tensor &amp;grad_output, const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t max_D, const Tensor &amp;hash_size_cumsum, const int64_t total_hash_size_bits, const Tensor &amp;indices, const Tensor &amp;offsets, const int64_t pooling_mode, const Tensor &amp;lxu_cache_locations, const int64_t BT_block_size, const int64_t max_segment_length_per_warp, const bool stochastic_rounding, const int64_t info_B_num_bits, const int64_t info_B_mask_int64, const bool use_uniq_cache_locations, const bool use_homogeneous_placements, Tensor momentum1_dev, Tensor momentum1_uvm, Tensor momentum1_placements, Tensor momentum1_offsets, double learning_rate=0, double eta=0, double momentum=0, double weight_decay=0):&#160;gen_embedding_backward_lars_sgd_split_unweighted_cuda.cu']]],
  ['split_5fembedding_5fbackward_5fcodegen_5flars_5fsgd_5fweighted_5fexact_5fcuda_32',['split_embedding_backward_codegen_lars_sgd_weighted_exact_cuda',['../gen__embedding__backward__lars__sgd__split__weighted__cuda_8cu.html#a3eff146e8f81f6d6dcc6e08f791b1c27',1,'split_embedding_backward_codegen_lars_sgd_weighted_exact_cuda(const Tensor &amp;grad_output, const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t max_D, const Tensor &amp;hash_size_cumsum, const int64_t total_hash_size_bits, const Tensor &amp;indices, const Tensor &amp;offsets, const int64_t pooling_mode, const Tensor &amp;indice_weights, const Tensor &amp;lxu_cache_locations, const int64_t unused_, const int64_t max_segment_length_per_warp, const bool stochastic_rounding, const int64_t info_B_num_bits, const int64_t info_B_mask_int64, const bool use_uniq_cache_locations, const bool use_homogeneous_placements, Tensor momentum1_dev, Tensor momentum1_uvm, Tensor momentum1_placements, Tensor momentum1_offsets, double learning_rate, double eta, double momentum, double weight_decay):&#160;gen_embedding_backward_lars_sgd_split_weighted_cuda.cu'],['../gen__embedding__backward__split__lars__sgd_8cpp.html#a592a95a9e623ca87fb31c88bc11ef217',1,'split_embedding_backward_codegen_lars_sgd_weighted_exact_cuda(const Tensor &amp;grad_output, const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t max_D, const Tensor &amp;hash_size_cumsum, const int64_t total_hash_size_bits, const Tensor &amp;indices, const Tensor &amp;offsets, const int64_t pooling_mode, const Tensor &amp;indice_weights, const Tensor &amp;lxu_cache_locations, const int64_t BT_block_size, const int64_t max_segment_length_per_warp, const bool stochastic_rounding, const int64_t info_B_num_bits, const int64_t info_B_mask_int64, const bool use_uniq_cache_locations, const bool use_homogeneous_placements, Tensor momentum1_dev, Tensor momentum1_uvm, Tensor momentum1_placements, Tensor momentum1_offsets, double learning_rate=0, double eta=0, double momentum=0, double weight_decay=0):&#160;gen_embedding_backward_lars_sgd_split_weighted_cuda.cu']]],
  ['split_5fembedding_5fbackward_5fcodegen_5fnone_5funweighted_5fexact_5fcuda_33',['split_embedding_backward_codegen_none_unweighted_exact_cuda',['../gen__embedding__backward__none__split__unweighted__cuda_8cu.html#ac780b945eb2c0cff713ff7280122da42',1,'split_embedding_backward_codegen_none_unweighted_exact_cuda(const Tensor &amp;grad_output, const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t max_D, const Tensor &amp;hash_size_cumsum, const int64_t total_hash_size_bits, const Tensor &amp;indices, const Tensor &amp;offsets, const int64_t pooling_mode, const Tensor &amp;lxu_cache_locations, const int64_t unused_, const int64_t max_segment_length_per_warp, const int64_t info_B_num_bits, const int64_t info_B_mask_int64, const bool use_uniq_cache_locations, const bool use_homogeneous_placements, int64_t total_hash_size, int64_t total_unique_indices):&#160;gen_embedding_backward_none_split_unweighted_cuda.cu'],['../gen__embedding__backward__split__none_8cpp.html#ab8077c80baaf216fec8c7c0c81cd0c29',1,'split_embedding_backward_codegen_none_unweighted_exact_cuda(const Tensor &amp;grad_output, const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t max_D, const Tensor &amp;hash_size_cumsum, const int64_t total_hash_size_bits, const Tensor &amp;indices, const Tensor &amp;offsets, const int64_t pooling_mode, const Tensor &amp;lxu_cache_locations, const int64_t BT_block_size, const int64_t max_segment_length_per_warp, const int64_t info_B_num_bits, const int64_t info_B_mask_int64, const bool use_uniq_cache_locations, const bool use_homogeneous_placements, int64_t total_hash_size=0, int64_t total_unique_indices=0):&#160;gen_embedding_backward_none_split_unweighted_cuda.cu']]],
  ['split_5fembedding_5fbackward_5fcodegen_5fnone_5fweighted_5fexact_5fcuda_34',['split_embedding_backward_codegen_none_weighted_exact_cuda',['../gen__embedding__backward__none__split__weighted__cuda_8cu.html#a12b41a32a38b812420382dfb33a09e17',1,'split_embedding_backward_codegen_none_weighted_exact_cuda(const Tensor &amp;grad_output, const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t max_D, const Tensor &amp;hash_size_cumsum, const int64_t total_hash_size_bits, const Tensor &amp;indices, const Tensor &amp;offsets, const int64_t pooling_mode, const Tensor &amp;indice_weights, const Tensor &amp;lxu_cache_locations, const int64_t unused_, const int64_t max_segment_length_per_warp, const int64_t info_B_num_bits, const int64_t info_B_mask_int64, const bool use_uniq_cache_locations, const bool use_homogeneous_placements, int64_t total_hash_size, int64_t total_unique_indices):&#160;gen_embedding_backward_none_split_weighted_cuda.cu'],['../gen__embedding__backward__split__none_8cpp.html#a7808efa8b7d1caa4534528c97b55a26b',1,'split_embedding_backward_codegen_none_weighted_exact_cuda(const Tensor &amp;grad_output, const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t max_D, const Tensor &amp;hash_size_cumsum, const int64_t total_hash_size_bits, const Tensor &amp;indices, const Tensor &amp;offsets, const int64_t pooling_mode, const Tensor &amp;indice_weights, const Tensor &amp;lxu_cache_locations, const int64_t BT_block_size, const int64_t max_segment_length_per_warp, const int64_t info_B_num_bits, const int64_t info_B_mask_int64, const bool use_uniq_cache_locations, const bool use_homogeneous_placements, int64_t total_hash_size=0, int64_t total_unique_indices=0):&#160;gen_embedding_backward_none_split_weighted_cuda.cu']]],
  ['split_5fembedding_5fbackward_5fcodegen_5fpartial_5frowwise_5fadam_5funweighted_5fexact_5fcuda_35',['split_embedding_backward_codegen_partial_rowwise_adam_unweighted_exact_cuda',['../gen__embedding__backward__partial__rowwise__adam__split__unweighted__cuda_8cu.html#a4d39b6b803c05c33caf58b4a2fbf37ac',1,'split_embedding_backward_codegen_partial_rowwise_adam_unweighted_exact_cuda(const Tensor &amp;grad_output, const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t max_D, const Tensor &amp;hash_size_cumsum, const int64_t total_hash_size_bits, const Tensor &amp;indices, const Tensor &amp;offsets, const int64_t pooling_mode, const Tensor &amp;lxu_cache_locations, const int64_t unused_, const int64_t max_segment_length_per_warp, const bool stochastic_rounding, const int64_t info_B_num_bits, const int64_t info_B_mask_int64, const bool use_uniq_cache_locations, const bool use_homogeneous_placements, Tensor momentum1_dev, Tensor momentum1_uvm, Tensor momentum1_placements, Tensor momentum1_offsets, Tensor momentum2_dev, Tensor momentum2_uvm, Tensor momentum2_placements, Tensor momentum2_offsets, double learning_rate, double eps, double beta1, double beta2, double weight_decay, int64_t iter):&#160;gen_embedding_backward_partial_rowwise_adam_split_unweighted_cuda.cu'],['../gen__embedding__backward__split__partial__rowwise__adam_8cpp.html#a3d1da3b63c8a16884d3de8d52c0b99fd',1,'split_embedding_backward_codegen_partial_rowwise_adam_unweighted_exact_cuda(const Tensor &amp;grad_output, const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t max_D, const Tensor &amp;hash_size_cumsum, const int64_t total_hash_size_bits, const Tensor &amp;indices, const Tensor &amp;offsets, const int64_t pooling_mode, const Tensor &amp;lxu_cache_locations, const int64_t BT_block_size, const int64_t max_segment_length_per_warp, const bool stochastic_rounding, const int64_t info_B_num_bits, const int64_t info_B_mask_int64, const bool use_uniq_cache_locations, const bool use_homogeneous_placements, Tensor momentum1_dev, Tensor momentum1_uvm, Tensor momentum1_placements, Tensor momentum1_offsets, Tensor momentum2_dev, Tensor momentum2_uvm, Tensor momentum2_placements, Tensor momentum2_offsets, double learning_rate=0, double eps=0, double beta1=0, double beta2=0, double weight_decay=0, int64_t iter=0):&#160;gen_embedding_backward_partial_rowwise_adam_split_unweighted_cuda.cu']]],
  ['split_5fembedding_5fbackward_5fcodegen_5fpartial_5frowwise_5fadam_5fweighted_5fexact_5fcuda_36',['split_embedding_backward_codegen_partial_rowwise_adam_weighted_exact_cuda',['../gen__embedding__backward__partial__rowwise__adam__split__weighted__cuda_8cu.html#ac295880f03c86cb263b324158e460e82',1,'split_embedding_backward_codegen_partial_rowwise_adam_weighted_exact_cuda(const Tensor &amp;grad_output, const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t max_D, const Tensor &amp;hash_size_cumsum, const int64_t total_hash_size_bits, const Tensor &amp;indices, const Tensor &amp;offsets, const int64_t pooling_mode, const Tensor &amp;indice_weights, const Tensor &amp;lxu_cache_locations, const int64_t unused_, const int64_t max_segment_length_per_warp, const bool stochastic_rounding, const int64_t info_B_num_bits, const int64_t info_B_mask_int64, const bool use_uniq_cache_locations, const bool use_homogeneous_placements, Tensor momentum1_dev, Tensor momentum1_uvm, Tensor momentum1_placements, Tensor momentum1_offsets, Tensor momentum2_dev, Tensor momentum2_uvm, Tensor momentum2_placements, Tensor momentum2_offsets, double learning_rate, double eps, double beta1, double beta2, double weight_decay, int64_t iter):&#160;gen_embedding_backward_partial_rowwise_adam_split_weighted_cuda.cu'],['../gen__embedding__backward__split__partial__rowwise__adam_8cpp.html#aaa1e9d0adf68022fa575a63182a95745',1,'split_embedding_backward_codegen_partial_rowwise_adam_weighted_exact_cuda(const Tensor &amp;grad_output, const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t max_D, const Tensor &amp;hash_size_cumsum, const int64_t total_hash_size_bits, const Tensor &amp;indices, const Tensor &amp;offsets, const int64_t pooling_mode, const Tensor &amp;indice_weights, const Tensor &amp;lxu_cache_locations, const int64_t BT_block_size, const int64_t max_segment_length_per_warp, const bool stochastic_rounding, const int64_t info_B_num_bits, const int64_t info_B_mask_int64, const bool use_uniq_cache_locations, const bool use_homogeneous_placements, Tensor momentum1_dev, Tensor momentum1_uvm, Tensor momentum1_placements, Tensor momentum1_offsets, Tensor momentum2_dev, Tensor momentum2_uvm, Tensor momentum2_placements, Tensor momentum2_offsets, double learning_rate=0, double eps=0, double beta1=0, double beta2=0, double weight_decay=0, int64_t iter=0):&#160;gen_embedding_backward_partial_rowwise_adam_split_weighted_cuda.cu']]],
  ['split_5fembedding_5fbackward_5fcodegen_5fpartial_5frowwise_5flamb_5funweighted_5fexact_5fcuda_37',['split_embedding_backward_codegen_partial_rowwise_lamb_unweighted_exact_cuda',['../gen__embedding__backward__partial__rowwise__lamb__split__unweighted__cuda_8cu.html#a561ce0f1da43ca47001db85a395203e1',1,'split_embedding_backward_codegen_partial_rowwise_lamb_unweighted_exact_cuda(const Tensor &amp;grad_output, const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t max_D, const Tensor &amp;hash_size_cumsum, const int64_t total_hash_size_bits, const Tensor &amp;indices, const Tensor &amp;offsets, const int64_t pooling_mode, const Tensor &amp;lxu_cache_locations, const int64_t unused_, const int64_t max_segment_length_per_warp, const bool stochastic_rounding, const int64_t info_B_num_bits, const int64_t info_B_mask_int64, const bool use_uniq_cache_locations, const bool use_homogeneous_placements, Tensor momentum1_dev, Tensor momentum1_uvm, Tensor momentum1_placements, Tensor momentum1_offsets, Tensor momentum2_dev, Tensor momentum2_uvm, Tensor momentum2_placements, Tensor momentum2_offsets, double learning_rate, double eps, double beta1, double beta2, double weight_decay, int64_t iter):&#160;gen_embedding_backward_partial_rowwise_lamb_split_unweighted_cuda.cu'],['../gen__embedding__backward__split__partial__rowwise__lamb_8cpp.html#ab047f1b46e810b2a48f66387d37cd588',1,'split_embedding_backward_codegen_partial_rowwise_lamb_unweighted_exact_cuda(const Tensor &amp;grad_output, const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t max_D, const Tensor &amp;hash_size_cumsum, const int64_t total_hash_size_bits, const Tensor &amp;indices, const Tensor &amp;offsets, const int64_t pooling_mode, const Tensor &amp;lxu_cache_locations, const int64_t BT_block_size, const int64_t max_segment_length_per_warp, const bool stochastic_rounding, const int64_t info_B_num_bits, const int64_t info_B_mask_int64, const bool use_uniq_cache_locations, const bool use_homogeneous_placements, Tensor momentum1_dev, Tensor momentum1_uvm, Tensor momentum1_placements, Tensor momentum1_offsets, Tensor momentum2_dev, Tensor momentum2_uvm, Tensor momentum2_placements, Tensor momentum2_offsets, double learning_rate=0, double eps=0, double beta1=0, double beta2=0, double weight_decay=0, int64_t iter=0):&#160;gen_embedding_backward_partial_rowwise_lamb_split_unweighted_cuda.cu']]],
  ['split_5fembedding_5fbackward_5fcodegen_5fpartial_5frowwise_5flamb_5fweighted_5fexact_5fcuda_38',['split_embedding_backward_codegen_partial_rowwise_lamb_weighted_exact_cuda',['../gen__embedding__backward__partial__rowwise__lamb__split__weighted__cuda_8cu.html#a70ac0537228900edc94bbd437c550a15',1,'split_embedding_backward_codegen_partial_rowwise_lamb_weighted_exact_cuda(const Tensor &amp;grad_output, const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t max_D, const Tensor &amp;hash_size_cumsum, const int64_t total_hash_size_bits, const Tensor &amp;indices, const Tensor &amp;offsets, const int64_t pooling_mode, const Tensor &amp;indice_weights, const Tensor &amp;lxu_cache_locations, const int64_t unused_, const int64_t max_segment_length_per_warp, const bool stochastic_rounding, const int64_t info_B_num_bits, const int64_t info_B_mask_int64, const bool use_uniq_cache_locations, const bool use_homogeneous_placements, Tensor momentum1_dev, Tensor momentum1_uvm, Tensor momentum1_placements, Tensor momentum1_offsets, Tensor momentum2_dev, Tensor momentum2_uvm, Tensor momentum2_placements, Tensor momentum2_offsets, double learning_rate, double eps, double beta1, double beta2, double weight_decay, int64_t iter):&#160;gen_embedding_backward_partial_rowwise_lamb_split_weighted_cuda.cu'],['../gen__embedding__backward__split__partial__rowwise__lamb_8cpp.html#a6619694897abaeee44b975fa9614d7e3',1,'split_embedding_backward_codegen_partial_rowwise_lamb_weighted_exact_cuda(const Tensor &amp;grad_output, const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t max_D, const Tensor &amp;hash_size_cumsum, const int64_t total_hash_size_bits, const Tensor &amp;indices, const Tensor &amp;offsets, const int64_t pooling_mode, const Tensor &amp;indice_weights, const Tensor &amp;lxu_cache_locations, const int64_t BT_block_size, const int64_t max_segment_length_per_warp, const bool stochastic_rounding, const int64_t info_B_num_bits, const int64_t info_B_mask_int64, const bool use_uniq_cache_locations, const bool use_homogeneous_placements, Tensor momentum1_dev, Tensor momentum1_uvm, Tensor momentum1_placements, Tensor momentum1_offsets, Tensor momentum2_dev, Tensor momentum2_uvm, Tensor momentum2_placements, Tensor momentum2_offsets, double learning_rate=0, double eps=0, double beta1=0, double beta2=0, double weight_decay=0, int64_t iter=0):&#160;gen_embedding_backward_partial_rowwise_lamb_split_weighted_cuda.cu']]],
  ['split_5fembedding_5fbackward_5fcodegen_5frowwise_5fadagrad_5fcpu_39',['split_embedding_backward_codegen_rowwise_adagrad_cpu',['../gen__embedding__backward__rowwise__adagrad__split__cpu_8cpp.html#a73c1fd212c2c324e57b0f906a2598360',1,'split_embedding_backward_codegen_rowwise_adagrad_cpu(Tensor grad_output, Tensor host_weights, Tensor weights_placements, Tensor weights_offsets, Tensor D_offsets, int64_t max_D, Tensor hash_size_cumsum, int64_t total_hash_size_bits, Tensor indices, Tensor offsets, int64_t pooling_mode, Tensor indice_weights, bool stochastic_rounding, Tensor momentum1_host, Tensor momentum1_placements, Tensor momentum1_offsets, double eps=0, double learning_rate=0, double weight_decay=0.0, int64_t weight_decay_mode=0, double max_norm=0.0, int64_t output_dtype=static_cast&lt; int64_t &gt;(SparseType::FP32)):&#160;gen_embedding_backward_rowwise_adagrad_split_cpu.cpp'],['../gen__embedding__backward__split__rowwise__adagrad__cpu_8cpp.html#a73c1fd212c2c324e57b0f906a2598360',1,'split_embedding_backward_codegen_rowwise_adagrad_cpu(Tensor grad_output, Tensor host_weights, Tensor weights_placements, Tensor weights_offsets, Tensor D_offsets, int64_t max_D, Tensor hash_size_cumsum, int64_t total_hash_size_bits, Tensor indices, Tensor offsets, int64_t pooling_mode, Tensor indice_weights, bool stochastic_rounding, Tensor momentum1_host, Tensor momentum1_placements, Tensor momentum1_offsets, double eps=0, double learning_rate=0, double weight_decay=0.0, int64_t weight_decay_mode=0, double max_norm=0.0, int64_t output_dtype=static_cast&lt; int64_t &gt;(SparseType::FP32)):&#160;gen_embedding_backward_rowwise_adagrad_split_cpu.cpp']]],
  ['split_5fembedding_5fbackward_5fcodegen_5frowwise_5fadagrad_5funweighted_5fexact_5fcuda_40',['split_embedding_backward_codegen_rowwise_adagrad_unweighted_exact_cuda',['../gen__embedding__backward__rowwise__adagrad__split__unweighted__cuda_8cu.html#aca4e3268cb308c63a299f50cde66dec1',1,'split_embedding_backward_codegen_rowwise_adagrad_unweighted_exact_cuda(const Tensor &amp;grad_output, const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t max_D, const Tensor &amp;hash_size_cumsum, const int64_t total_hash_size_bits, const Tensor &amp;indices, const Tensor &amp;offsets, const int64_t pooling_mode, const Tensor &amp;lxu_cache_locations, const int64_t unused_, const int64_t max_segment_length_per_warp, const bool stochastic_rounding, const int64_t info_B_num_bits, const int64_t info_B_mask_int64, const bool use_uniq_cache_locations, const bool use_homogeneous_placements, Tensor momentum1_dev, Tensor momentum1_uvm, Tensor momentum1_placements, Tensor momentum1_offsets, double eps, double learning_rate, double weight_decay, int64_t weight_decay_mode, double max_norm):&#160;gen_embedding_backward_rowwise_adagrad_split_unweighted_cuda.cu'],['../gen__embedding__backward__split__rowwise__adagrad_8cpp.html#ad73707297535524e1eeff86f23adfdfa',1,'split_embedding_backward_codegen_rowwise_adagrad_unweighted_exact_cuda(const Tensor &amp;grad_output, const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t max_D, const Tensor &amp;hash_size_cumsum, const int64_t total_hash_size_bits, const Tensor &amp;indices, const Tensor &amp;offsets, const int64_t pooling_mode, const Tensor &amp;lxu_cache_locations, const int64_t BT_block_size, const int64_t max_segment_length_per_warp, const bool stochastic_rounding, const int64_t info_B_num_bits, const int64_t info_B_mask_int64, const bool use_uniq_cache_locations, const bool use_homogeneous_placements, Tensor momentum1_dev, Tensor momentum1_uvm, Tensor momentum1_placements, Tensor momentum1_offsets, double eps=0, double learning_rate=0, double weight_decay=0.0, int64_t weight_decay_mode=0, double max_norm=0.0):&#160;gen_embedding_backward_rowwise_adagrad_split_unweighted_cuda.cu']]],
  ['split_5fembedding_5fbackward_5fcodegen_5frowwise_5fadagrad_5funweighted_5fexact_5fvbe_5fcuda_41',['split_embedding_backward_codegen_rowwise_adagrad_unweighted_exact_vbe_cuda',['../gen__embedding__backward__rowwise__adagrad__split__unweighted__vbe__cuda_8cu.html#a85ffab9880f2b1221f86a7f63c088096',1,'split_embedding_backward_codegen_rowwise_adagrad_unweighted_exact_vbe_cuda(const Tensor &amp;grad_output, const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t max_D, const Tensor &amp;hash_size_cumsum, const int64_t total_hash_size_bits, const Tensor &amp;indices, const Tensor &amp;offsets, const int64_t pooling_mode, const Tensor &amp;lxu_cache_locations, const int64_t unused_, const int64_t max_segment_length_per_warp, const bool stochastic_rounding, const int64_t info_B_num_bits, const int64_t info_B_mask_int64, const Tensor &amp;B_offsets, const Tensor &amp;vbe_row_output_offsets, const Tensor &amp;vbe_b_t_map, const bool use_uniq_cache_locations, const bool use_homogeneous_placements, Tensor momentum1_dev, Tensor momentum1_uvm, Tensor momentum1_placements, Tensor momentum1_offsets, double eps, double learning_rate, double weight_decay, int64_t weight_decay_mode, double max_norm):&#160;gen_embedding_backward_rowwise_adagrad_split_unweighted_vbe_cuda.cu'],['../gen__embedding__backward__split__rowwise__adagrad_8cpp.html#ae52a1e89225c55716b2505ef0b14b32c',1,'split_embedding_backward_codegen_rowwise_adagrad_unweighted_exact_vbe_cuda(const Tensor &amp;grad_output, const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t max_D, const Tensor &amp;hash_size_cumsum, const int64_t total_hash_size_bits, const Tensor &amp;indices, const Tensor &amp;offsets, const int64_t pooling_mode, const Tensor &amp;lxu_cache_locations, const int64_t BT_block_size, const int64_t max_segment_length_per_warp, const bool stochastic_rounding, const int64_t info_B_num_bits, const int64_t info_B_mask_int64, const Tensor &amp;B_offsets, const Tensor &amp;vbe_row_output_offsets, const Tensor &amp;vbe_b_t_map, const bool use_uniq_cache_locations, const bool use_homogeneous_placements, Tensor momentum1_dev, Tensor momentum1_uvm, Tensor momentum1_placements, Tensor momentum1_offsets, double eps=0, double learning_rate=0, double weight_decay=0.0, int64_t weight_decay_mode=0, double max_norm=0.0):&#160;gen_embedding_backward_rowwise_adagrad_split_unweighted_vbe_cuda.cu']]],
  ['split_5fembedding_5fbackward_5fcodegen_5frowwise_5fadagrad_5fweighted_5fexact_5fcuda_42',['split_embedding_backward_codegen_rowwise_adagrad_weighted_exact_cuda',['../gen__embedding__backward__rowwise__adagrad__split__weighted__cuda_8cu.html#a9e02b82c5db58357a98bc86454c2d7a5',1,'split_embedding_backward_codegen_rowwise_adagrad_weighted_exact_cuda(const Tensor &amp;grad_output, const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t max_D, const Tensor &amp;hash_size_cumsum, const int64_t total_hash_size_bits, const Tensor &amp;indices, const Tensor &amp;offsets, const int64_t pooling_mode, const Tensor &amp;indice_weights, const Tensor &amp;lxu_cache_locations, const int64_t unused_, const int64_t max_segment_length_per_warp, const bool stochastic_rounding, const int64_t info_B_num_bits, const int64_t info_B_mask_int64, const bool use_uniq_cache_locations, const bool use_homogeneous_placements, Tensor momentum1_dev, Tensor momentum1_uvm, Tensor momentum1_placements, Tensor momentum1_offsets, double eps, double learning_rate, double weight_decay, int64_t weight_decay_mode, double max_norm):&#160;gen_embedding_backward_rowwise_adagrad_split_weighted_cuda.cu'],['../gen__embedding__backward__split__rowwise__adagrad_8cpp.html#a394f3f0a5cbe256e703c0bb34bfe50b3',1,'split_embedding_backward_codegen_rowwise_adagrad_weighted_exact_cuda(const Tensor &amp;grad_output, const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t max_D, const Tensor &amp;hash_size_cumsum, const int64_t total_hash_size_bits, const Tensor &amp;indices, const Tensor &amp;offsets, const int64_t pooling_mode, const Tensor &amp;indice_weights, const Tensor &amp;lxu_cache_locations, const int64_t BT_block_size, const int64_t max_segment_length_per_warp, const bool stochastic_rounding, const int64_t info_B_num_bits, const int64_t info_B_mask_int64, const bool use_uniq_cache_locations, const bool use_homogeneous_placements, Tensor momentum1_dev, Tensor momentum1_uvm, Tensor momentum1_placements, Tensor momentum1_offsets, double eps=0, double learning_rate=0, double weight_decay=0.0, int64_t weight_decay_mode=0, double max_norm=0.0):&#160;gen_embedding_backward_rowwise_adagrad_split_weighted_cuda.cu']]],
  ['split_5fembedding_5fbackward_5fcodegen_5frowwise_5fadagrad_5fweighted_5fexact_5fvbe_5fcuda_43',['split_embedding_backward_codegen_rowwise_adagrad_weighted_exact_vbe_cuda',['../gen__embedding__backward__rowwise__adagrad__split__weighted__vbe__cuda_8cu.html#a0266589d7dcf9f22a9398090ae16abac',1,'split_embedding_backward_codegen_rowwise_adagrad_weighted_exact_vbe_cuda(const Tensor &amp;grad_output, const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t max_D, const Tensor &amp;hash_size_cumsum, const int64_t total_hash_size_bits, const Tensor &amp;indices, const Tensor &amp;offsets, const int64_t pooling_mode, const Tensor &amp;indice_weights, const Tensor &amp;lxu_cache_locations, const int64_t unused_, const int64_t max_segment_length_per_warp, const bool stochastic_rounding, const int64_t info_B_num_bits, const int64_t info_B_mask_int64, const Tensor &amp;B_offsets, const Tensor &amp;vbe_row_output_offsets, const Tensor &amp;vbe_b_t_map, const bool use_uniq_cache_locations, const bool use_homogeneous_placements, Tensor momentum1_dev, Tensor momentum1_uvm, Tensor momentum1_placements, Tensor momentum1_offsets, double eps, double learning_rate, double weight_decay, int64_t weight_decay_mode, double max_norm):&#160;gen_embedding_backward_rowwise_adagrad_split_weighted_vbe_cuda.cu'],['../gen__embedding__backward__split__rowwise__adagrad_8cpp.html#af257dbbdb6a2c64fdb2e038bb39190c1',1,'split_embedding_backward_codegen_rowwise_adagrad_weighted_exact_vbe_cuda(const Tensor &amp;grad_output, const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t max_D, const Tensor &amp;hash_size_cumsum, const int64_t total_hash_size_bits, const Tensor &amp;indices, const Tensor &amp;offsets, const int64_t pooling_mode, const Tensor &amp;indice_weights, const Tensor &amp;lxu_cache_locations, const int64_t BT_block_size, const int64_t max_segment_length_per_warp, const bool stochastic_rounding, const int64_t info_B_num_bits, const int64_t info_B_mask_int64, const Tensor &amp;B_offsets, const Tensor &amp;vbe_row_output_offsets, const Tensor &amp;vbe_b_t_map, const bool use_uniq_cache_locations, const bool use_homogeneous_placements, Tensor momentum1_dev, Tensor momentum1_uvm, Tensor momentum1_placements, Tensor momentum1_offsets, double eps=0, double learning_rate=0, double weight_decay=0.0, int64_t weight_decay_mode=0, double max_norm=0.0):&#160;gen_embedding_backward_rowwise_adagrad_split_weighted_vbe_cuda.cu']]],
  ['split_5fembedding_5fbackward_5fcodegen_5frowwise_5fadagrad_5fwith_5fcounter_5fcpu_44',['split_embedding_backward_codegen_rowwise_adagrad_with_counter_cpu',['../gen__embedding__backward__rowwise__adagrad__with__counter__split__cpu_8cpp.html#a2e90723fcad83f3054bc6f661de849c1',1,'split_embedding_backward_codegen_rowwise_adagrad_with_counter_cpu(Tensor grad_output, Tensor host_weights, Tensor weights_placements, Tensor weights_offsets, Tensor D_offsets, int64_t max_D, Tensor hash_size_cumsum, int64_t total_hash_size_bits, Tensor indices, Tensor offsets, int64_t pooling_mode, Tensor indice_weights, bool stochastic_rounding, Tensor momentum1_host, Tensor momentum1_placements, Tensor momentum1_offsets, Tensor prev_iter_host, Tensor prev_iter_placements, Tensor prev_iter_offsets, Tensor row_counter_host, Tensor row_counter_placements, Tensor row_counter_offsets, double eps=0, double learning_rate=0, double weight_decay=0.0, int64_t iter=0, int64_t counter_halflife=-1, int64_t adjustment_iter=-1, double adjustment_ub=1.0, int64_t learning_rate_mode=-1, int64_t weight_decay_mode=1, int64_t grad_sum_decay=-1, double max_counter=0, double tail_id_threshold=0.0, int64_t is_tail_id_thresh_ratio=0, int64_t regularization_mode=0, double weight_norm_coefficient=0.0, double lower_bound=0.0, int64_t output_dtype=static_cast&lt; int64_t &gt;(SparseType::FP32)):&#160;gen_embedding_backward_rowwise_adagrad_with_counter_split_cpu.cpp'],['../gen__embedding__backward__split__rowwise__adagrad__with__counter__cpu_8cpp.html#a2e90723fcad83f3054bc6f661de849c1',1,'split_embedding_backward_codegen_rowwise_adagrad_with_counter_cpu(Tensor grad_output, Tensor host_weights, Tensor weights_placements, Tensor weights_offsets, Tensor D_offsets, int64_t max_D, Tensor hash_size_cumsum, int64_t total_hash_size_bits, Tensor indices, Tensor offsets, int64_t pooling_mode, Tensor indice_weights, bool stochastic_rounding, Tensor momentum1_host, Tensor momentum1_placements, Tensor momentum1_offsets, Tensor prev_iter_host, Tensor prev_iter_placements, Tensor prev_iter_offsets, Tensor row_counter_host, Tensor row_counter_placements, Tensor row_counter_offsets, double eps=0, double learning_rate=0, double weight_decay=0.0, int64_t iter=0, int64_t counter_halflife=-1, int64_t adjustment_iter=-1, double adjustment_ub=1.0, int64_t learning_rate_mode=-1, int64_t weight_decay_mode=1, int64_t grad_sum_decay=-1, double max_counter=0, double tail_id_threshold=0.0, int64_t is_tail_id_thresh_ratio=0, int64_t regularization_mode=0, double weight_norm_coefficient=0.0, double lower_bound=0.0, int64_t output_dtype=static_cast&lt; int64_t &gt;(SparseType::FP32)):&#160;gen_embedding_backward_rowwise_adagrad_with_counter_split_cpu.cpp']]],
  ['split_5fembedding_5fbackward_5fcodegen_5frowwise_5fadagrad_5fwith_5fcounter_5funweighted_5fexact_5fcuda_45',['split_embedding_backward_codegen_rowwise_adagrad_with_counter_unweighted_exact_cuda',['../gen__embedding__backward__rowwise__adagrad__with__counter__split__unweighted__cuda_8cu.html#afa64170f02313b2766c2cc3e25d2f5a9',1,'split_embedding_backward_codegen_rowwise_adagrad_with_counter_unweighted_exact_cuda(const Tensor &amp;grad_output, const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t max_D, const Tensor &amp;hash_size_cumsum, const int64_t total_hash_size_bits, const Tensor &amp;indices, const Tensor &amp;offsets, const int64_t pooling_mode, const Tensor &amp;lxu_cache_locations, const int64_t unused_, const int64_t max_segment_length_per_warp, const bool stochastic_rounding, const int64_t info_B_num_bits, const int64_t info_B_mask_int64, const bool use_uniq_cache_locations, const bool use_homogeneous_placements, Tensor momentum1_dev, Tensor momentum1_uvm, Tensor momentum1_placements, Tensor momentum1_offsets, Tensor prev_iter_dev, Tensor prev_iter_uvm, Tensor prev_iter_placements, Tensor prev_iter_offsets, Tensor row_counter_dev, Tensor row_counter_uvm, Tensor row_counter_placements, Tensor row_counter_offsets, double eps, double learning_rate, double weight_decay, int64_t iter, int64_t counter_halflife, int64_t adjustment_iter, double adjustment_ub, int64_t learning_rate_mode, int64_t weight_decay_mode, int64_t grad_sum_decay, double max_counter, double tail_id_threshold, int64_t is_tail_id_thresh_ratio, int64_t regularization_mode, double weight_norm_coefficient, double lower_bound):&#160;gen_embedding_backward_rowwise_adagrad_with_counter_split_unweighted_cuda.cu'],['../gen__embedding__backward__split__rowwise__adagrad__with__counter_8cpp.html#aea7503341318b3b0142a83d310046516',1,'split_embedding_backward_codegen_rowwise_adagrad_with_counter_unweighted_exact_cuda(const Tensor &amp;grad_output, const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t max_D, const Tensor &amp;hash_size_cumsum, const int64_t total_hash_size_bits, const Tensor &amp;indices, const Tensor &amp;offsets, const int64_t pooling_mode, const Tensor &amp;lxu_cache_locations, const int64_t BT_block_size, const int64_t max_segment_length_per_warp, const bool stochastic_rounding, const int64_t info_B_num_bits, const int64_t info_B_mask_int64, const bool use_uniq_cache_locations, const bool use_homogeneous_placements, Tensor momentum1_dev, Tensor momentum1_uvm, Tensor momentum1_placements, Tensor momentum1_offsets, Tensor prev_iter_dev, Tensor prev_iter_uvm, Tensor prev_iter_placements, Tensor prev_iter_offsets, Tensor row_counter_dev, Tensor row_counter_uvm, Tensor row_counter_placements, Tensor row_counter_offsets, double eps=0, double learning_rate=0, double weight_decay=0.0, int64_t iter=0, int64_t counter_halflife=-1, int64_t adjustment_iter=-1, double adjustment_ub=1.0, int64_t learning_rate_mode=-1, int64_t weight_decay_mode=1, int64_t grad_sum_decay=-1, double max_counter=0, double tail_id_threshold=0.0, int64_t is_tail_id_thresh_ratio=0, int64_t regularization_mode=0, double weight_norm_coefficient=0.0, double lower_bound=0.0):&#160;gen_embedding_backward_rowwise_adagrad_with_counter_split_unweighted_cuda.cu']]],
  ['split_5fembedding_5fbackward_5fcodegen_5frowwise_5fadagrad_5fwith_5fcounter_5funweighted_5fexact_5fvbe_5fcuda_46',['split_embedding_backward_codegen_rowwise_adagrad_with_counter_unweighted_exact_vbe_cuda',['../gen__embedding__backward__rowwise__adagrad__with__counter__split__unweighted__vbe__cuda_8cu.html#aaf55d0142c2e00756846ab7581e9e0d4',1,'split_embedding_backward_codegen_rowwise_adagrad_with_counter_unweighted_exact_vbe_cuda(const Tensor &amp;grad_output, const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t max_D, const Tensor &amp;hash_size_cumsum, const int64_t total_hash_size_bits, const Tensor &amp;indices, const Tensor &amp;offsets, const int64_t pooling_mode, const Tensor &amp;lxu_cache_locations, const int64_t unused_, const int64_t max_segment_length_per_warp, const bool stochastic_rounding, const int64_t info_B_num_bits, const int64_t info_B_mask_int64, const Tensor &amp;B_offsets, const Tensor &amp;vbe_row_output_offsets, const Tensor &amp;vbe_b_t_map, const bool use_uniq_cache_locations, const bool use_homogeneous_placements, Tensor momentum1_dev, Tensor momentum1_uvm, Tensor momentum1_placements, Tensor momentum1_offsets, Tensor prev_iter_dev, Tensor prev_iter_uvm, Tensor prev_iter_placements, Tensor prev_iter_offsets, Tensor row_counter_dev, Tensor row_counter_uvm, Tensor row_counter_placements, Tensor row_counter_offsets, double eps, double learning_rate, double weight_decay, int64_t iter, int64_t counter_halflife, int64_t adjustment_iter, double adjustment_ub, int64_t learning_rate_mode, int64_t weight_decay_mode, int64_t grad_sum_decay, double max_counter, double tail_id_threshold, int64_t is_tail_id_thresh_ratio, int64_t regularization_mode, double weight_norm_coefficient, double lower_bound):&#160;gen_embedding_backward_rowwise_adagrad_with_counter_split_unweighted_vbe_cuda.cu'],['../gen__embedding__backward__split__rowwise__adagrad__with__counter_8cpp.html#adeee250a314eb2c1c41f61047bc80d28',1,'split_embedding_backward_codegen_rowwise_adagrad_with_counter_unweighted_exact_vbe_cuda(const Tensor &amp;grad_output, const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t max_D, const Tensor &amp;hash_size_cumsum, const int64_t total_hash_size_bits, const Tensor &amp;indices, const Tensor &amp;offsets, const int64_t pooling_mode, const Tensor &amp;lxu_cache_locations, const int64_t BT_block_size, const int64_t max_segment_length_per_warp, const bool stochastic_rounding, const int64_t info_B_num_bits, const int64_t info_B_mask_int64, const Tensor &amp;B_offsets, const Tensor &amp;vbe_row_output_offsets, const Tensor &amp;vbe_b_t_map, const bool use_uniq_cache_locations, const bool use_homogeneous_placements, Tensor momentum1_dev, Tensor momentum1_uvm, Tensor momentum1_placements, Tensor momentum1_offsets, Tensor prev_iter_dev, Tensor prev_iter_uvm, Tensor prev_iter_placements, Tensor prev_iter_offsets, Tensor row_counter_dev, Tensor row_counter_uvm, Tensor row_counter_placements, Tensor row_counter_offsets, double eps=0, double learning_rate=0, double weight_decay=0.0, int64_t iter=0, int64_t counter_halflife=-1, int64_t adjustment_iter=-1, double adjustment_ub=1.0, int64_t learning_rate_mode=-1, int64_t weight_decay_mode=1, int64_t grad_sum_decay=-1, double max_counter=0, double tail_id_threshold=0.0, int64_t is_tail_id_thresh_ratio=0, int64_t regularization_mode=0, double weight_norm_coefficient=0.0, double lower_bound=0.0):&#160;gen_embedding_backward_rowwise_adagrad_with_counter_split_unweighted_vbe_cuda.cu']]],
  ['split_5fembedding_5fbackward_5fcodegen_5frowwise_5fadagrad_5fwith_5fcounter_5fweighted_5fexact_5fcuda_47',['split_embedding_backward_codegen_rowwise_adagrad_with_counter_weighted_exact_cuda',['../gen__embedding__backward__rowwise__adagrad__with__counter__split__weighted__cuda_8cu.html#aeed29f5cd2c5bacfd4ed37b2381c128b',1,'split_embedding_backward_codegen_rowwise_adagrad_with_counter_weighted_exact_cuda(const Tensor &amp;grad_output, const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t max_D, const Tensor &amp;hash_size_cumsum, const int64_t total_hash_size_bits, const Tensor &amp;indices, const Tensor &amp;offsets, const int64_t pooling_mode, const Tensor &amp;indice_weights, const Tensor &amp;lxu_cache_locations, const int64_t unused_, const int64_t max_segment_length_per_warp, const bool stochastic_rounding, const int64_t info_B_num_bits, const int64_t info_B_mask_int64, const bool use_uniq_cache_locations, const bool use_homogeneous_placements, Tensor momentum1_dev, Tensor momentum1_uvm, Tensor momentum1_placements, Tensor momentum1_offsets, Tensor prev_iter_dev, Tensor prev_iter_uvm, Tensor prev_iter_placements, Tensor prev_iter_offsets, Tensor row_counter_dev, Tensor row_counter_uvm, Tensor row_counter_placements, Tensor row_counter_offsets, double eps, double learning_rate, double weight_decay, int64_t iter, int64_t counter_halflife, int64_t adjustment_iter, double adjustment_ub, int64_t learning_rate_mode, int64_t weight_decay_mode, int64_t grad_sum_decay, double max_counter, double tail_id_threshold, int64_t is_tail_id_thresh_ratio, int64_t regularization_mode, double weight_norm_coefficient, double lower_bound):&#160;gen_embedding_backward_rowwise_adagrad_with_counter_split_weighted_cuda.cu'],['../gen__embedding__backward__split__rowwise__adagrad__with__counter_8cpp.html#a07c978ecc3495651d0123d01876f68ca',1,'split_embedding_backward_codegen_rowwise_adagrad_with_counter_weighted_exact_cuda(const Tensor &amp;grad_output, const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t max_D, const Tensor &amp;hash_size_cumsum, const int64_t total_hash_size_bits, const Tensor &amp;indices, const Tensor &amp;offsets, const int64_t pooling_mode, const Tensor &amp;indice_weights, const Tensor &amp;lxu_cache_locations, const int64_t BT_block_size, const int64_t max_segment_length_per_warp, const bool stochastic_rounding, const int64_t info_B_num_bits, const int64_t info_B_mask_int64, const bool use_uniq_cache_locations, const bool use_homogeneous_placements, Tensor momentum1_dev, Tensor momentum1_uvm, Tensor momentum1_placements, Tensor momentum1_offsets, Tensor prev_iter_dev, Tensor prev_iter_uvm, Tensor prev_iter_placements, Tensor prev_iter_offsets, Tensor row_counter_dev, Tensor row_counter_uvm, Tensor row_counter_placements, Tensor row_counter_offsets, double eps=0, double learning_rate=0, double weight_decay=0.0, int64_t iter=0, int64_t counter_halflife=-1, int64_t adjustment_iter=-1, double adjustment_ub=1.0, int64_t learning_rate_mode=-1, int64_t weight_decay_mode=1, int64_t grad_sum_decay=-1, double max_counter=0, double tail_id_threshold=0.0, int64_t is_tail_id_thresh_ratio=0, int64_t regularization_mode=0, double weight_norm_coefficient=0.0, double lower_bound=0.0):&#160;gen_embedding_backward_rowwise_adagrad_with_counter_split_weighted_cuda.cu']]],
  ['split_5fembedding_5fbackward_5fcodegen_5frowwise_5fadagrad_5fwith_5fcounter_5fweighted_5fexact_5fvbe_5fcuda_48',['split_embedding_backward_codegen_rowwise_adagrad_with_counter_weighted_exact_vbe_cuda',['../gen__embedding__backward__rowwise__adagrad__with__counter__split__weighted__vbe__cuda_8cu.html#abaac12b95caa76304e21c53d5355d382',1,'split_embedding_backward_codegen_rowwise_adagrad_with_counter_weighted_exact_vbe_cuda(const Tensor &amp;grad_output, const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t max_D, const Tensor &amp;hash_size_cumsum, const int64_t total_hash_size_bits, const Tensor &amp;indices, const Tensor &amp;offsets, const int64_t pooling_mode, const Tensor &amp;indice_weights, const Tensor &amp;lxu_cache_locations, const int64_t unused_, const int64_t max_segment_length_per_warp, const bool stochastic_rounding, const int64_t info_B_num_bits, const int64_t info_B_mask_int64, const Tensor &amp;B_offsets, const Tensor &amp;vbe_row_output_offsets, const Tensor &amp;vbe_b_t_map, const bool use_uniq_cache_locations, const bool use_homogeneous_placements, Tensor momentum1_dev, Tensor momentum1_uvm, Tensor momentum1_placements, Tensor momentum1_offsets, Tensor prev_iter_dev, Tensor prev_iter_uvm, Tensor prev_iter_placements, Tensor prev_iter_offsets, Tensor row_counter_dev, Tensor row_counter_uvm, Tensor row_counter_placements, Tensor row_counter_offsets, double eps, double learning_rate, double weight_decay, int64_t iter, int64_t counter_halflife, int64_t adjustment_iter, double adjustment_ub, int64_t learning_rate_mode, int64_t weight_decay_mode, int64_t grad_sum_decay, double max_counter, double tail_id_threshold, int64_t is_tail_id_thresh_ratio, int64_t regularization_mode, double weight_norm_coefficient, double lower_bound):&#160;gen_embedding_backward_rowwise_adagrad_with_counter_split_weighted_vbe_cuda.cu'],['../gen__embedding__backward__split__rowwise__adagrad__with__counter_8cpp.html#acd65c9737772f9e1bcea1c8c114eb5b5',1,'split_embedding_backward_codegen_rowwise_adagrad_with_counter_weighted_exact_vbe_cuda(const Tensor &amp;grad_output, const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t max_D, const Tensor &amp;hash_size_cumsum, const int64_t total_hash_size_bits, const Tensor &amp;indices, const Tensor &amp;offsets, const int64_t pooling_mode, const Tensor &amp;indice_weights, const Tensor &amp;lxu_cache_locations, const int64_t BT_block_size, const int64_t max_segment_length_per_warp, const bool stochastic_rounding, const int64_t info_B_num_bits, const int64_t info_B_mask_int64, const Tensor &amp;B_offsets, const Tensor &amp;vbe_row_output_offsets, const Tensor &amp;vbe_b_t_map, const bool use_uniq_cache_locations, const bool use_homogeneous_placements, Tensor momentum1_dev, Tensor momentum1_uvm, Tensor momentum1_placements, Tensor momentum1_offsets, Tensor prev_iter_dev, Tensor prev_iter_uvm, Tensor prev_iter_placements, Tensor prev_iter_offsets, Tensor row_counter_dev, Tensor row_counter_uvm, Tensor row_counter_placements, Tensor row_counter_offsets, double eps=0, double learning_rate=0, double weight_decay=0.0, int64_t iter=0, int64_t counter_halflife=-1, int64_t adjustment_iter=-1, double adjustment_ub=1.0, int64_t learning_rate_mode=-1, int64_t weight_decay_mode=1, int64_t grad_sum_decay=-1, double max_counter=0, double tail_id_threshold=0.0, int64_t is_tail_id_thresh_ratio=0, int64_t regularization_mode=0, double weight_norm_coefficient=0.0, double lower_bound=0.0):&#160;gen_embedding_backward_rowwise_adagrad_with_counter_split_weighted_vbe_cuda.cu']]],
  ['split_5fembedding_5fbackward_5fcodegen_5frowwise_5fadagrad_5fwith_5fweight_5fdecay_5funweighted_5fexact_5fcuda_49',['split_embedding_backward_codegen_rowwise_adagrad_with_weight_decay_unweighted_exact_cuda',['../gen__embedding__backward__rowwise__adagrad__with__weight__decay__split__unweighted__cuda_8cu.html#acc9cd7c72b1624ec0df8d9f4edbde2cb',1,'split_embedding_backward_codegen_rowwise_adagrad_with_weight_decay_unweighted_exact_cuda(const Tensor &amp;grad_output, const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t max_D, const Tensor &amp;hash_size_cumsum, const int64_t total_hash_size_bits, const Tensor &amp;indices, const Tensor &amp;offsets, const int64_t pooling_mode, const Tensor &amp;lxu_cache_locations, const int64_t unused_, const int64_t max_segment_length_per_warp, const bool stochastic_rounding, const int64_t info_B_num_bits, const int64_t info_B_mask_int64, const bool use_uniq_cache_locations, const bool use_homogeneous_placements, Tensor momentum1_dev, Tensor momentum1_uvm, Tensor momentum1_placements, Tensor momentum1_offsets, double eps, double learning_rate, double weight_decay, int64_t weight_decay_mode):&#160;gen_embedding_backward_rowwise_adagrad_with_weight_decay_split_unweighted_cuda.cu'],['../gen__embedding__backward__split__rowwise__adagrad__with__weight__decay_8cpp.html#a9f5e043a0a43d92b7a748c27e6ce8060',1,'split_embedding_backward_codegen_rowwise_adagrad_with_weight_decay_unweighted_exact_cuda(const Tensor &amp;grad_output, const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t max_D, const Tensor &amp;hash_size_cumsum, const int64_t total_hash_size_bits, const Tensor &amp;indices, const Tensor &amp;offsets, const int64_t pooling_mode, const Tensor &amp;lxu_cache_locations, const int64_t BT_block_size, const int64_t max_segment_length_per_warp, const bool stochastic_rounding, const int64_t info_B_num_bits, const int64_t info_B_mask_int64, const bool use_uniq_cache_locations, const bool use_homogeneous_placements, Tensor momentum1_dev, Tensor momentum1_uvm, Tensor momentum1_placements, Tensor momentum1_offsets, double eps=0, double learning_rate=0, double weight_decay=0.0, int64_t weight_decay_mode=0):&#160;gen_embedding_backward_rowwise_adagrad_with_weight_decay_split_unweighted_cuda.cu']]],
  ['split_5fembedding_5fbackward_5fcodegen_5frowwise_5fadagrad_5fwith_5fweight_5fdecay_5fweighted_5fexact_5fcuda_50',['split_embedding_backward_codegen_rowwise_adagrad_with_weight_decay_weighted_exact_cuda',['../gen__embedding__backward__rowwise__adagrad__with__weight__decay__split__weighted__cuda_8cu.html#a969bc368ad46c57ab47feac737df5001',1,'split_embedding_backward_codegen_rowwise_adagrad_with_weight_decay_weighted_exact_cuda(const Tensor &amp;grad_output, const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t max_D, const Tensor &amp;hash_size_cumsum, const int64_t total_hash_size_bits, const Tensor &amp;indices, const Tensor &amp;offsets, const int64_t pooling_mode, const Tensor &amp;indice_weights, const Tensor &amp;lxu_cache_locations, const int64_t unused_, const int64_t max_segment_length_per_warp, const bool stochastic_rounding, const int64_t info_B_num_bits, const int64_t info_B_mask_int64, const bool use_uniq_cache_locations, const bool use_homogeneous_placements, Tensor momentum1_dev, Tensor momentum1_uvm, Tensor momentum1_placements, Tensor momentum1_offsets, double eps, double learning_rate, double weight_decay, int64_t weight_decay_mode):&#160;gen_embedding_backward_rowwise_adagrad_with_weight_decay_split_weighted_cuda.cu'],['../gen__embedding__backward__split__rowwise__adagrad__with__weight__decay_8cpp.html#a6cb23330ccfc55cc78d828d1fd8b59fb',1,'split_embedding_backward_codegen_rowwise_adagrad_with_weight_decay_weighted_exact_cuda(const Tensor &amp;grad_output, const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t max_D, const Tensor &amp;hash_size_cumsum, const int64_t total_hash_size_bits, const Tensor &amp;indices, const Tensor &amp;offsets, const int64_t pooling_mode, const Tensor &amp;indice_weights, const Tensor &amp;lxu_cache_locations, const int64_t BT_block_size, const int64_t max_segment_length_per_warp, const bool stochastic_rounding, const int64_t info_B_num_bits, const int64_t info_B_mask_int64, const bool use_uniq_cache_locations, const bool use_homogeneous_placements, Tensor momentum1_dev, Tensor momentum1_uvm, Tensor momentum1_placements, Tensor momentum1_offsets, double eps=0, double learning_rate=0, double weight_decay=0.0, int64_t weight_decay_mode=0):&#160;gen_embedding_backward_rowwise_adagrad_with_weight_decay_split_weighted_cuda.cu']]],
  ['split_5fembedding_5fbackward_5fcodegen_5frowwise_5fweighted_5fadagrad_5fcpu_51',['split_embedding_backward_codegen_rowwise_weighted_adagrad_cpu',['../gen__embedding__backward__rowwise__weighted__adagrad__split__cpu_8cpp.html#acb5592b9d0b5b9344302f69c0f1be10b',1,'split_embedding_backward_codegen_rowwise_weighted_adagrad_cpu(Tensor grad_output, Tensor host_weights, Tensor weights_placements, Tensor weights_offsets, Tensor D_offsets, int64_t max_D, Tensor hash_size_cumsum, int64_t total_hash_size_bits, Tensor indices, Tensor offsets, int64_t pooling_mode, Tensor indice_weights, bool stochastic_rounding, Tensor momentum1_host, Tensor momentum1_placements, Tensor momentum1_offsets, double eps=0, double learning_rate=0, double weight_decay=0, int64_t iter=0, int64_t output_dtype=static_cast&lt; int64_t &gt;(SparseType::FP32)):&#160;gen_embedding_backward_rowwise_weighted_adagrad_split_cpu.cpp'],['../gen__embedding__backward__split__rowwise__weighted__adagrad__cpu_8cpp.html#acb5592b9d0b5b9344302f69c0f1be10b',1,'split_embedding_backward_codegen_rowwise_weighted_adagrad_cpu(Tensor grad_output, Tensor host_weights, Tensor weights_placements, Tensor weights_offsets, Tensor D_offsets, int64_t max_D, Tensor hash_size_cumsum, int64_t total_hash_size_bits, Tensor indices, Tensor offsets, int64_t pooling_mode, Tensor indice_weights, bool stochastic_rounding, Tensor momentum1_host, Tensor momentum1_placements, Tensor momentum1_offsets, double eps=0, double learning_rate=0, double weight_decay=0, int64_t iter=0, int64_t output_dtype=static_cast&lt; int64_t &gt;(SparseType::FP32)):&#160;gen_embedding_backward_rowwise_weighted_adagrad_split_cpu.cpp']]],
  ['split_5fembedding_5fbackward_5fcodegen_5frowwise_5fweighted_5fadagrad_5funweighted_5fexact_5fcuda_52',['split_embedding_backward_codegen_rowwise_weighted_adagrad_unweighted_exact_cuda',['../gen__embedding__backward__rowwise__weighted__adagrad__split__unweighted__cuda_8cu.html#a10025996061290114d6060505057ce7b',1,'split_embedding_backward_codegen_rowwise_weighted_adagrad_unweighted_exact_cuda(const Tensor &amp;grad_output, const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t max_D, const Tensor &amp;hash_size_cumsum, const int64_t total_hash_size_bits, const Tensor &amp;indices, const Tensor &amp;offsets, const int64_t pooling_mode, const Tensor &amp;lxu_cache_locations, const int64_t unused_, const int64_t max_segment_length_per_warp, const bool stochastic_rounding, const int64_t info_B_num_bits, const int64_t info_B_mask_int64, const bool use_uniq_cache_locations, const bool use_homogeneous_placements, Tensor momentum1_dev, Tensor momentum1_uvm, Tensor momentum1_placements, Tensor momentum1_offsets, double eps, double learning_rate, double weight_decay, int64_t iter):&#160;gen_embedding_backward_rowwise_weighted_adagrad_split_unweighted_cuda.cu'],['../gen__embedding__backward__split__rowwise__weighted__adagrad_8cpp.html#a3a9f041d93d95908fbe76052c3d48a3e',1,'split_embedding_backward_codegen_rowwise_weighted_adagrad_unweighted_exact_cuda(const Tensor &amp;grad_output, const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t max_D, const Tensor &amp;hash_size_cumsum, const int64_t total_hash_size_bits, const Tensor &amp;indices, const Tensor &amp;offsets, const int64_t pooling_mode, const Tensor &amp;lxu_cache_locations, const int64_t BT_block_size, const int64_t max_segment_length_per_warp, const bool stochastic_rounding, const int64_t info_B_num_bits, const int64_t info_B_mask_int64, const bool use_uniq_cache_locations, const bool use_homogeneous_placements, Tensor momentum1_dev, Tensor momentum1_uvm, Tensor momentum1_placements, Tensor momentum1_offsets, double eps=0, double learning_rate=0, double weight_decay=0, int64_t iter=0):&#160;gen_embedding_backward_rowwise_weighted_adagrad_split_unweighted_cuda.cu']]],
  ['split_5fembedding_5fbackward_5fcodegen_5frowwise_5fweighted_5fadagrad_5fweighted_5fexact_5fcuda_53',['split_embedding_backward_codegen_rowwise_weighted_adagrad_weighted_exact_cuda',['../gen__embedding__backward__rowwise__weighted__adagrad__split__weighted__cuda_8cu.html#a74ae14449034e73352a950be7faee8cd',1,'split_embedding_backward_codegen_rowwise_weighted_adagrad_weighted_exact_cuda(const Tensor &amp;grad_output, const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t max_D, const Tensor &amp;hash_size_cumsum, const int64_t total_hash_size_bits, const Tensor &amp;indices, const Tensor &amp;offsets, const int64_t pooling_mode, const Tensor &amp;indice_weights, const Tensor &amp;lxu_cache_locations, const int64_t unused_, const int64_t max_segment_length_per_warp, const bool stochastic_rounding, const int64_t info_B_num_bits, const int64_t info_B_mask_int64, const bool use_uniq_cache_locations, const bool use_homogeneous_placements, Tensor momentum1_dev, Tensor momentum1_uvm, Tensor momentum1_placements, Tensor momentum1_offsets, double eps, double learning_rate, double weight_decay, int64_t iter):&#160;gen_embedding_backward_rowwise_weighted_adagrad_split_weighted_cuda.cu'],['../gen__embedding__backward__split__rowwise__weighted__adagrad_8cpp.html#aad0ff2a4c042997b9969d779d3c91c59',1,'split_embedding_backward_codegen_rowwise_weighted_adagrad_weighted_exact_cuda(const Tensor &amp;grad_output, const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t max_D, const Tensor &amp;hash_size_cumsum, const int64_t total_hash_size_bits, const Tensor &amp;indices, const Tensor &amp;offsets, const int64_t pooling_mode, const Tensor &amp;indice_weights, const Tensor &amp;lxu_cache_locations, const int64_t BT_block_size, const int64_t max_segment_length_per_warp, const bool stochastic_rounding, const int64_t info_B_num_bits, const int64_t info_B_mask_int64, const bool use_uniq_cache_locations, const bool use_homogeneous_placements, Tensor momentum1_dev, Tensor momentum1_uvm, Tensor momentum1_placements, Tensor momentum1_offsets, double eps=0, double learning_rate=0, double weight_decay=0, int64_t iter=0):&#160;gen_embedding_backward_rowwise_weighted_adagrad_split_weighted_cuda.cu']]],
  ['split_5fembedding_5fbackward_5fcodegen_5fsgd_5fcpu_54',['split_embedding_backward_codegen_sgd_cpu',['../gen__embedding__backward__sgd__split__cpu_8cpp.html#a9d914bb02aed97803fcc9237f00403fa',1,'split_embedding_backward_codegen_sgd_cpu(Tensor grad_output, Tensor host_weights, Tensor weights_placements, Tensor weights_offsets, Tensor D_offsets, int64_t max_D, Tensor hash_size_cumsum, int64_t total_hash_size_bits, Tensor indices, Tensor offsets, int64_t pooling_mode, Tensor indice_weights, bool stochastic_rounding, double learning_rate=0, int64_t output_dtype=static_cast&lt; int64_t &gt;(SparseType::FP32)):&#160;gen_embedding_backward_sgd_split_cpu.cpp'],['../gen__embedding__backward__split__sgd__cpu_8cpp.html#a9d914bb02aed97803fcc9237f00403fa',1,'split_embedding_backward_codegen_sgd_cpu(Tensor grad_output, Tensor host_weights, Tensor weights_placements, Tensor weights_offsets, Tensor D_offsets, int64_t max_D, Tensor hash_size_cumsum, int64_t total_hash_size_bits, Tensor indices, Tensor offsets, int64_t pooling_mode, Tensor indice_weights, bool stochastic_rounding, double learning_rate=0, int64_t output_dtype=static_cast&lt; int64_t &gt;(SparseType::FP32)):&#160;gen_embedding_backward_sgd_split_cpu.cpp']]],
  ['split_5fembedding_5fbackward_5fcodegen_5fsgd_5funweighted_5fexact_5fcuda_55',['split_embedding_backward_codegen_sgd_unweighted_exact_cuda',['../gen__embedding__backward__sgd__split__unweighted__cuda_8cu.html#ad2d75e84d796d6d8fae77c19e7a8af3b',1,'split_embedding_backward_codegen_sgd_unweighted_exact_cuda(const Tensor &amp;grad_output, const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t max_D, const Tensor &amp;hash_size_cumsum, const int64_t total_hash_size_bits, const Tensor &amp;indices, const Tensor &amp;offsets, const int64_t pooling_mode, const Tensor &amp;lxu_cache_locations, const int64_t unused_, const int64_t max_segment_length_per_warp, const bool stochastic_rounding, const int64_t info_B_num_bits, const int64_t info_B_mask_int64, const bool use_uniq_cache_locations, const bool use_homogeneous_placements, double learning_rate):&#160;gen_embedding_backward_sgd_split_unweighted_cuda.cu'],['../gen__embedding__backward__split__sgd_8cpp.html#a8f7618b0f318fed552700a9303e0c500',1,'split_embedding_backward_codegen_sgd_unweighted_exact_cuda(const Tensor &amp;grad_output, const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t max_D, const Tensor &amp;hash_size_cumsum, const int64_t total_hash_size_bits, const Tensor &amp;indices, const Tensor &amp;offsets, const int64_t pooling_mode, const Tensor &amp;lxu_cache_locations, const int64_t BT_block_size, const int64_t max_segment_length_per_warp, const bool stochastic_rounding, const int64_t info_B_num_bits, const int64_t info_B_mask_int64, const bool use_uniq_cache_locations, const bool use_homogeneous_placements, double learning_rate=0):&#160;gen_embedding_backward_sgd_split_unweighted_cuda.cu']]],
  ['split_5fembedding_5fbackward_5fcodegen_5fsgd_5funweighted_5fexact_5fvbe_5fcuda_56',['split_embedding_backward_codegen_sgd_unweighted_exact_vbe_cuda',['../gen__embedding__backward__sgd__split__unweighted__vbe__cuda_8cu.html#a216acb29a8d546146f5593b5abd7eaa1',1,'split_embedding_backward_codegen_sgd_unweighted_exact_vbe_cuda(const Tensor &amp;grad_output, const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t max_D, const Tensor &amp;hash_size_cumsum, const int64_t total_hash_size_bits, const Tensor &amp;indices, const Tensor &amp;offsets, const int64_t pooling_mode, const Tensor &amp;lxu_cache_locations, const int64_t unused_, const int64_t max_segment_length_per_warp, const bool stochastic_rounding, const int64_t info_B_num_bits, const int64_t info_B_mask_int64, const Tensor &amp;B_offsets, const Tensor &amp;vbe_row_output_offsets, const Tensor &amp;vbe_b_t_map, const bool use_uniq_cache_locations, const bool use_homogeneous_placements, double learning_rate):&#160;gen_embedding_backward_sgd_split_unweighted_vbe_cuda.cu'],['../gen__embedding__backward__split__sgd_8cpp.html#aa75d2899ee39c0d5f71e426d1cc7d57c',1,'split_embedding_backward_codegen_sgd_unweighted_exact_vbe_cuda(const Tensor &amp;grad_output, const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t max_D, const Tensor &amp;hash_size_cumsum, const int64_t total_hash_size_bits, const Tensor &amp;indices, const Tensor &amp;offsets, const int64_t pooling_mode, const Tensor &amp;lxu_cache_locations, const int64_t BT_block_size, const int64_t max_segment_length_per_warp, const bool stochastic_rounding, const int64_t info_B_num_bits, const int64_t info_B_mask_int64, const Tensor &amp;B_offsets, const Tensor &amp;vbe_row_output_offsets, const Tensor &amp;vbe_b_t_map, const bool use_uniq_cache_locations, const bool use_homogeneous_placements, double learning_rate=0):&#160;gen_embedding_backward_sgd_split_unweighted_vbe_cuda.cu']]],
  ['split_5fembedding_5fbackward_5fcodegen_5fsgd_5fweighted_5fexact_5fcuda_57',['split_embedding_backward_codegen_sgd_weighted_exact_cuda',['../gen__embedding__backward__sgd__split__weighted__cuda_8cu.html#a16ec895b54d5b04f3fdfa67930c1c02a',1,'split_embedding_backward_codegen_sgd_weighted_exact_cuda(const Tensor &amp;grad_output, const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t max_D, const Tensor &amp;hash_size_cumsum, const int64_t total_hash_size_bits, const Tensor &amp;indices, const Tensor &amp;offsets, const int64_t pooling_mode, const Tensor &amp;indice_weights, const Tensor &amp;lxu_cache_locations, const int64_t unused_, const int64_t max_segment_length_per_warp, const bool stochastic_rounding, const int64_t info_B_num_bits, const int64_t info_B_mask_int64, const bool use_uniq_cache_locations, const bool use_homogeneous_placements, double learning_rate):&#160;gen_embedding_backward_sgd_split_weighted_cuda.cu'],['../gen__embedding__backward__split__sgd_8cpp.html#a2934aefc05b7ad4bc6e07074f0a2ee1e',1,'split_embedding_backward_codegen_sgd_weighted_exact_cuda(const Tensor &amp;grad_output, const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t max_D, const Tensor &amp;hash_size_cumsum, const int64_t total_hash_size_bits, const Tensor &amp;indices, const Tensor &amp;offsets, const int64_t pooling_mode, const Tensor &amp;indice_weights, const Tensor &amp;lxu_cache_locations, const int64_t BT_block_size, const int64_t max_segment_length_per_warp, const bool stochastic_rounding, const int64_t info_B_num_bits, const int64_t info_B_mask_int64, const bool use_uniq_cache_locations, const bool use_homogeneous_placements, double learning_rate=0):&#160;gen_embedding_backward_sgd_split_weighted_cuda.cu']]],
  ['split_5fembedding_5fbackward_5fcodegen_5fsgd_5fweighted_5fexact_5fvbe_5fcuda_58',['split_embedding_backward_codegen_sgd_weighted_exact_vbe_cuda',['../gen__embedding__backward__sgd__split__weighted__vbe__cuda_8cu.html#a9ee8617b61b6a4be1391fe53321bf927',1,'split_embedding_backward_codegen_sgd_weighted_exact_vbe_cuda(const Tensor &amp;grad_output, const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t max_D, const Tensor &amp;hash_size_cumsum, const int64_t total_hash_size_bits, const Tensor &amp;indices, const Tensor &amp;offsets, const int64_t pooling_mode, const Tensor &amp;indice_weights, const Tensor &amp;lxu_cache_locations, const int64_t unused_, const int64_t max_segment_length_per_warp, const bool stochastic_rounding, const int64_t info_B_num_bits, const int64_t info_B_mask_int64, const Tensor &amp;B_offsets, const Tensor &amp;vbe_row_output_offsets, const Tensor &amp;vbe_b_t_map, const bool use_uniq_cache_locations, const bool use_homogeneous_placements, double learning_rate):&#160;gen_embedding_backward_sgd_split_weighted_vbe_cuda.cu'],['../gen__embedding__backward__split__sgd_8cpp.html#a67f194387a7e81de22d969964f1cc379',1,'split_embedding_backward_codegen_sgd_weighted_exact_vbe_cuda(const Tensor &amp;grad_output, const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t max_D, const Tensor &amp;hash_size_cumsum, const int64_t total_hash_size_bits, const Tensor &amp;indices, const Tensor &amp;offsets, const int64_t pooling_mode, const Tensor &amp;indice_weights, const Tensor &amp;lxu_cache_locations, const int64_t BT_block_size, const int64_t max_segment_length_per_warp, const bool stochastic_rounding, const int64_t info_B_num_bits, const int64_t info_B_mask_int64, const Tensor &amp;B_offsets, const Tensor &amp;vbe_row_output_offsets, const Tensor &amp;vbe_b_t_map, const bool use_uniq_cache_locations, const bool use_homogeneous_placements, double learning_rate=0):&#160;gen_embedding_backward_sgd_split_weighted_vbe_cuda.cu']]],
  ['split_5fembedding_5fcodegen_5fforward_5fcpu_59',['split_embedding_codegen_forward_cpu',['../embedding__forward__split__cpu_8cpp.html#aaf201bc6f5c8deb12999a3eff03cf7bb',1,'split_embedding_codegen_forward_cpu(Tensor weights, Tensor weights_offsets, Tensor D_offsets, int64_t total_D, Tensor hash_size_cumsum, Tensor indices, Tensor offsets, int64_t pooling_mode, Tensor indice_weights, int64_t output_dtype):&#160;embedding_forward_split_cpu.cpp'],['../embedding__forward__split__cpu_8h.html#a01e2ccf0c687aa129f511c048dd878a2',1,'split_embedding_codegen_forward_cpu(at::Tensor weights, at::Tensor weights_offsets, at::Tensor D_offsets, int64_t total_D, at::Tensor hash_size_cumsum, at::Tensor indices, at::Tensor offsets, int64_t pooling_mode, at::Tensor indice_weights, int64_t output_dtype=0):&#160;embedding_forward_split_cpu.cpp']]],
  ['split_5fembedding_5fcodegen_5fforward_5fcpu_5fmeta_60',['split_embedding_codegen_forward_cpu_meta',['../embedding__forward__split__cpu_8cpp.html#a0641f4b915d503586cb2d251029169e4',1,'embedding_forward_split_cpu.cpp']]],
  ['split_5fembedding_5fcodegen_5fforward_5funweighted_5fcuda_61',['split_embedding_codegen_forward_unweighted_cuda',['../gen__embedding__backward__split__adagrad_8cpp.html#a9a6feca380488898b3f01a95a5dd69e2',1,'split_embedding_codegen_forward_unweighted_cuda(const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t total_D, const int64_t max_D, const Tensor &amp;indices, const Tensor &amp;offsets, const int64_t pooling_mode, const Tensor &amp;lxu_cache_locations, const Tensor &amp;uvm_cache_stats, const int64_t output_dtype, const bool is_experimental):&#160;gen_embedding_forward_split_unweighted_codegen_cuda.cu'],['../gen__embedding__backward__split__adam_8cpp.html#a9a6feca380488898b3f01a95a5dd69e2',1,'split_embedding_codegen_forward_unweighted_cuda(const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t total_D, const int64_t max_D, const Tensor &amp;indices, const Tensor &amp;offsets, const int64_t pooling_mode, const Tensor &amp;lxu_cache_locations, const Tensor &amp;uvm_cache_stats, const int64_t output_dtype, const bool is_experimental):&#160;gen_embedding_forward_split_unweighted_codegen_cuda.cu'],['../gen__embedding__backward__split__approx__rowwise__adagrad__with__weight__decay_8cpp.html#a9a6feca380488898b3f01a95a5dd69e2',1,'split_embedding_codegen_forward_unweighted_cuda(const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t total_D, const int64_t max_D, const Tensor &amp;indices, const Tensor &amp;offsets, const int64_t pooling_mode, const Tensor &amp;lxu_cache_locations, const Tensor &amp;uvm_cache_stats, const int64_t output_dtype, const bool is_experimental):&#160;gen_embedding_forward_split_unweighted_codegen_cuda.cu'],['../gen__embedding__backward__split__lamb_8cpp.html#a9a6feca380488898b3f01a95a5dd69e2',1,'split_embedding_codegen_forward_unweighted_cuda(const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t total_D, const int64_t max_D, const Tensor &amp;indices, const Tensor &amp;offsets, const int64_t pooling_mode, const Tensor &amp;lxu_cache_locations, const Tensor &amp;uvm_cache_stats, const int64_t output_dtype, const bool is_experimental):&#160;gen_embedding_forward_split_unweighted_codegen_cuda.cu'],['../gen__embedding__backward__split__lars__sgd_8cpp.html#a9a6feca380488898b3f01a95a5dd69e2',1,'split_embedding_codegen_forward_unweighted_cuda(const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t total_D, const int64_t max_D, const Tensor &amp;indices, const Tensor &amp;offsets, const int64_t pooling_mode, const Tensor &amp;lxu_cache_locations, const Tensor &amp;uvm_cache_stats, const int64_t output_dtype, const bool is_experimental):&#160;gen_embedding_forward_split_unweighted_codegen_cuda.cu'],['../gen__embedding__backward__split__none_8cpp.html#a9a6feca380488898b3f01a95a5dd69e2',1,'split_embedding_codegen_forward_unweighted_cuda(const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t total_D, const int64_t max_D, const Tensor &amp;indices, const Tensor &amp;offsets, const int64_t pooling_mode, const Tensor &amp;lxu_cache_locations, const Tensor &amp;uvm_cache_stats, const int64_t output_dtype, const bool is_experimental):&#160;gen_embedding_forward_split_unweighted_codegen_cuda.cu'],['../gen__embedding__backward__split__partial__rowwise__adam_8cpp.html#a9a6feca380488898b3f01a95a5dd69e2',1,'split_embedding_codegen_forward_unweighted_cuda(const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t total_D, const int64_t max_D, const Tensor &amp;indices, const Tensor &amp;offsets, const int64_t pooling_mode, const Tensor &amp;lxu_cache_locations, const Tensor &amp;uvm_cache_stats, const int64_t output_dtype, const bool is_experimental):&#160;gen_embedding_forward_split_unweighted_codegen_cuda.cu'],['../gen__embedding__backward__split__partial__rowwise__lamb_8cpp.html#a9a6feca380488898b3f01a95a5dd69e2',1,'split_embedding_codegen_forward_unweighted_cuda(const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t total_D, const int64_t max_D, const Tensor &amp;indices, const Tensor &amp;offsets, const int64_t pooling_mode, const Tensor &amp;lxu_cache_locations, const Tensor &amp;uvm_cache_stats, const int64_t output_dtype, const bool is_experimental):&#160;gen_embedding_forward_split_unweighted_codegen_cuda.cu'],['../gen__embedding__backward__split__rowwise__adagrad_8cpp.html#a9a6feca380488898b3f01a95a5dd69e2',1,'split_embedding_codegen_forward_unweighted_cuda(const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t total_D, const int64_t max_D, const Tensor &amp;indices, const Tensor &amp;offsets, const int64_t pooling_mode, const Tensor &amp;lxu_cache_locations, const Tensor &amp;uvm_cache_stats, const int64_t output_dtype, const bool is_experimental):&#160;gen_embedding_forward_split_unweighted_codegen_cuda.cu'],['../gen__embedding__backward__split__rowwise__adagrad__with__counter_8cpp.html#a9a6feca380488898b3f01a95a5dd69e2',1,'split_embedding_codegen_forward_unweighted_cuda(const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t total_D, const int64_t max_D, const Tensor &amp;indices, const Tensor &amp;offsets, const int64_t pooling_mode, const Tensor &amp;lxu_cache_locations, const Tensor &amp;uvm_cache_stats, const int64_t output_dtype, const bool is_experimental):&#160;gen_embedding_forward_split_unweighted_codegen_cuda.cu'],['../gen__embedding__backward__split__rowwise__adagrad__with__weight__decay_8cpp.html#a9a6feca380488898b3f01a95a5dd69e2',1,'split_embedding_codegen_forward_unweighted_cuda(const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t total_D, const int64_t max_D, const Tensor &amp;indices, const Tensor &amp;offsets, const int64_t pooling_mode, const Tensor &amp;lxu_cache_locations, const Tensor &amp;uvm_cache_stats, const int64_t output_dtype, const bool is_experimental):&#160;gen_embedding_forward_split_unweighted_codegen_cuda.cu'],['../gen__embedding__backward__split__rowwise__weighted__adagrad_8cpp.html#a9a6feca380488898b3f01a95a5dd69e2',1,'split_embedding_codegen_forward_unweighted_cuda(const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t total_D, const int64_t max_D, const Tensor &amp;indices, const Tensor &amp;offsets, const int64_t pooling_mode, const Tensor &amp;lxu_cache_locations, const Tensor &amp;uvm_cache_stats, const int64_t output_dtype, const bool is_experimental):&#160;gen_embedding_forward_split_unweighted_codegen_cuda.cu'],['../gen__embedding__backward__split__sgd_8cpp.html#a9a6feca380488898b3f01a95a5dd69e2',1,'split_embedding_codegen_forward_unweighted_cuda(const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t total_D, const int64_t max_D, const Tensor &amp;indices, const Tensor &amp;offsets, const int64_t pooling_mode, const Tensor &amp;lxu_cache_locations, const Tensor &amp;uvm_cache_stats, const int64_t output_dtype, const bool is_experimental):&#160;gen_embedding_forward_split_unweighted_codegen_cuda.cu'],['../gen__embedding__forward__split__unweighted__codegen__cuda_8cu.html#a9a6feca380488898b3f01a95a5dd69e2',1,'split_embedding_codegen_forward_unweighted_cuda(const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t total_D, const int64_t max_D, const Tensor &amp;indices, const Tensor &amp;offsets, const int64_t pooling_mode, const Tensor &amp;lxu_cache_locations, const Tensor &amp;uvm_cache_stats, const int64_t output_dtype, const bool is_experimental):&#160;gen_embedding_forward_split_unweighted_codegen_cuda.cu']]],
  ['split_5fembedding_5fcodegen_5fforward_5funweighted_5fmeta_62',['split_embedding_codegen_forward_unweighted_meta',['../gen__embedding__forward__split__unweighted__codegen__meta_8cpp.html#ac2d160a056442313ab4b45acd50211e4',1,'gen_embedding_forward_split_unweighted_codegen_meta.cpp']]],
  ['split_5fembedding_5fcodegen_5fforward_5funweighted_5fvbe_5fcuda_63',['split_embedding_codegen_forward_unweighted_vbe_cuda',['../gen__embedding__backward__split__rowwise__adagrad_8cpp.html#a3098aecba5ae48c2e5723daccb751abf',1,'split_embedding_codegen_forward_unweighted_vbe_cuda(const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t total_D, const int64_t max_D, const Tensor &amp;indices, const Tensor &amp;offsets, const int64_t pooling_mode, const Tensor &amp;lxu_cache_locations, const Tensor &amp;uvm_cache_stats, const int64_t output_dtype, const Tensor &amp;vbe_row_output_offsets, const Tensor &amp;vbe_b_t_map, const int64_t vbe_output_size, const int64_t info_B_num_bits, const int64_t info_B_mask_int64, const bool is_experimental):&#160;gen_embedding_forward_split_unweighted_vbe_codegen_cuda.cu'],['../gen__embedding__backward__split__rowwise__adagrad__with__counter_8cpp.html#a3098aecba5ae48c2e5723daccb751abf',1,'split_embedding_codegen_forward_unweighted_vbe_cuda(const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t total_D, const int64_t max_D, const Tensor &amp;indices, const Tensor &amp;offsets, const int64_t pooling_mode, const Tensor &amp;lxu_cache_locations, const Tensor &amp;uvm_cache_stats, const int64_t output_dtype, const Tensor &amp;vbe_row_output_offsets, const Tensor &amp;vbe_b_t_map, const int64_t vbe_output_size, const int64_t info_B_num_bits, const int64_t info_B_mask_int64, const bool is_experimental):&#160;gen_embedding_forward_split_unweighted_vbe_codegen_cuda.cu'],['../gen__embedding__backward__split__sgd_8cpp.html#a3098aecba5ae48c2e5723daccb751abf',1,'split_embedding_codegen_forward_unweighted_vbe_cuda(const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t total_D, const int64_t max_D, const Tensor &amp;indices, const Tensor &amp;offsets, const int64_t pooling_mode, const Tensor &amp;lxu_cache_locations, const Tensor &amp;uvm_cache_stats, const int64_t output_dtype, const Tensor &amp;vbe_row_output_offsets, const Tensor &amp;vbe_b_t_map, const int64_t vbe_output_size, const int64_t info_B_num_bits, const int64_t info_B_mask_int64, const bool is_experimental):&#160;gen_embedding_forward_split_unweighted_vbe_codegen_cuda.cu'],['../gen__embedding__forward__split__unweighted__vbe__codegen__cuda_8cu.html#a3098aecba5ae48c2e5723daccb751abf',1,'split_embedding_codegen_forward_unweighted_vbe_cuda(const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t total_D, const int64_t max_D, const Tensor &amp;indices, const Tensor &amp;offsets, const int64_t pooling_mode, const Tensor &amp;lxu_cache_locations, const Tensor &amp;uvm_cache_stats, const int64_t output_dtype, const Tensor &amp;vbe_row_output_offsets, const Tensor &amp;vbe_b_t_map, const int64_t vbe_output_size, const int64_t info_B_num_bits, const int64_t info_B_mask_int64, const bool is_experimental):&#160;gen_embedding_forward_split_unweighted_vbe_codegen_cuda.cu']]],
  ['split_5fembedding_5fcodegen_5fforward_5funweighted_5fvbe_5fmeta_64',['split_embedding_codegen_forward_unweighted_vbe_meta',['../gen__embedding__forward__split__unweighted__vbe__codegen__meta_8cpp.html#a30c7d3ae6df01aed65166b267467ed1d',1,'gen_embedding_forward_split_unweighted_vbe_codegen_meta.cpp']]],
  ['split_5fembedding_5fcodegen_5fforward_5fweighted_5fcuda_65',['split_embedding_codegen_forward_weighted_cuda',['../gen__embedding__backward__split__adagrad_8cpp.html#a3acb6fea5b2190d51a5a8b914a5542ab',1,'split_embedding_codegen_forward_weighted_cuda(const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t total_D, const int64_t max_D, const Tensor &amp;indices, const Tensor &amp;offsets, const int64_t pooling_mode, const Tensor &amp;indice_weights, const Tensor &amp;lxu_cache_locations, const Tensor &amp;uvm_cache_stats, const int64_t output_dtype, const bool is_experimental):&#160;gen_embedding_forward_split_weighted_codegen_cuda.cu'],['../gen__embedding__backward__split__adam_8cpp.html#a3acb6fea5b2190d51a5a8b914a5542ab',1,'split_embedding_codegen_forward_weighted_cuda(const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t total_D, const int64_t max_D, const Tensor &amp;indices, const Tensor &amp;offsets, const int64_t pooling_mode, const Tensor &amp;indice_weights, const Tensor &amp;lxu_cache_locations, const Tensor &amp;uvm_cache_stats, const int64_t output_dtype, const bool is_experimental):&#160;gen_embedding_forward_split_weighted_codegen_cuda.cu'],['../gen__embedding__backward__split__approx__rowwise__adagrad__with__weight__decay_8cpp.html#a3acb6fea5b2190d51a5a8b914a5542ab',1,'split_embedding_codegen_forward_weighted_cuda(const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t total_D, const int64_t max_D, const Tensor &amp;indices, const Tensor &amp;offsets, const int64_t pooling_mode, const Tensor &amp;indice_weights, const Tensor &amp;lxu_cache_locations, const Tensor &amp;uvm_cache_stats, const int64_t output_dtype, const bool is_experimental):&#160;gen_embedding_forward_split_weighted_codegen_cuda.cu'],['../gen__embedding__backward__split__lamb_8cpp.html#a3acb6fea5b2190d51a5a8b914a5542ab',1,'split_embedding_codegen_forward_weighted_cuda(const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t total_D, const int64_t max_D, const Tensor &amp;indices, const Tensor &amp;offsets, const int64_t pooling_mode, const Tensor &amp;indice_weights, const Tensor &amp;lxu_cache_locations, const Tensor &amp;uvm_cache_stats, const int64_t output_dtype, const bool is_experimental):&#160;gen_embedding_forward_split_weighted_codegen_cuda.cu'],['../gen__embedding__backward__split__lars__sgd_8cpp.html#a3acb6fea5b2190d51a5a8b914a5542ab',1,'split_embedding_codegen_forward_weighted_cuda(const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t total_D, const int64_t max_D, const Tensor &amp;indices, const Tensor &amp;offsets, const int64_t pooling_mode, const Tensor &amp;indice_weights, const Tensor &amp;lxu_cache_locations, const Tensor &amp;uvm_cache_stats, const int64_t output_dtype, const bool is_experimental):&#160;gen_embedding_forward_split_weighted_codegen_cuda.cu'],['../gen__embedding__backward__split__none_8cpp.html#a3acb6fea5b2190d51a5a8b914a5542ab',1,'split_embedding_codegen_forward_weighted_cuda(const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t total_D, const int64_t max_D, const Tensor &amp;indices, const Tensor &amp;offsets, const int64_t pooling_mode, const Tensor &amp;indice_weights, const Tensor &amp;lxu_cache_locations, const Tensor &amp;uvm_cache_stats, const int64_t output_dtype, const bool is_experimental):&#160;gen_embedding_forward_split_weighted_codegen_cuda.cu'],['../gen__embedding__backward__split__partial__rowwise__adam_8cpp.html#a3acb6fea5b2190d51a5a8b914a5542ab',1,'split_embedding_codegen_forward_weighted_cuda(const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t total_D, const int64_t max_D, const Tensor &amp;indices, const Tensor &amp;offsets, const int64_t pooling_mode, const Tensor &amp;indice_weights, const Tensor &amp;lxu_cache_locations, const Tensor &amp;uvm_cache_stats, const int64_t output_dtype, const bool is_experimental):&#160;gen_embedding_forward_split_weighted_codegen_cuda.cu'],['../gen__embedding__backward__split__partial__rowwise__lamb_8cpp.html#a3acb6fea5b2190d51a5a8b914a5542ab',1,'split_embedding_codegen_forward_weighted_cuda(const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t total_D, const int64_t max_D, const Tensor &amp;indices, const Tensor &amp;offsets, const int64_t pooling_mode, const Tensor &amp;indice_weights, const Tensor &amp;lxu_cache_locations, const Tensor &amp;uvm_cache_stats, const int64_t output_dtype, const bool is_experimental):&#160;gen_embedding_forward_split_weighted_codegen_cuda.cu'],['../gen__embedding__backward__split__rowwise__adagrad_8cpp.html#a3acb6fea5b2190d51a5a8b914a5542ab',1,'split_embedding_codegen_forward_weighted_cuda(const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t total_D, const int64_t max_D, const Tensor &amp;indices, const Tensor &amp;offsets, const int64_t pooling_mode, const Tensor &amp;indice_weights, const Tensor &amp;lxu_cache_locations, const Tensor &amp;uvm_cache_stats, const int64_t output_dtype, const bool is_experimental):&#160;gen_embedding_forward_split_weighted_codegen_cuda.cu'],['../gen__embedding__backward__split__rowwise__adagrad__with__counter_8cpp.html#a3acb6fea5b2190d51a5a8b914a5542ab',1,'split_embedding_codegen_forward_weighted_cuda(const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t total_D, const int64_t max_D, const Tensor &amp;indices, const Tensor &amp;offsets, const int64_t pooling_mode, const Tensor &amp;indice_weights, const Tensor &amp;lxu_cache_locations, const Tensor &amp;uvm_cache_stats, const int64_t output_dtype, const bool is_experimental):&#160;gen_embedding_forward_split_weighted_codegen_cuda.cu'],['../gen__embedding__backward__split__rowwise__adagrad__with__weight__decay_8cpp.html#a3acb6fea5b2190d51a5a8b914a5542ab',1,'split_embedding_codegen_forward_weighted_cuda(const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t total_D, const int64_t max_D, const Tensor &amp;indices, const Tensor &amp;offsets, const int64_t pooling_mode, const Tensor &amp;indice_weights, const Tensor &amp;lxu_cache_locations, const Tensor &amp;uvm_cache_stats, const int64_t output_dtype, const bool is_experimental):&#160;gen_embedding_forward_split_weighted_codegen_cuda.cu'],['../gen__embedding__backward__split__rowwise__weighted__adagrad_8cpp.html#a3acb6fea5b2190d51a5a8b914a5542ab',1,'split_embedding_codegen_forward_weighted_cuda(const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t total_D, const int64_t max_D, const Tensor &amp;indices, const Tensor &amp;offsets, const int64_t pooling_mode, const Tensor &amp;indice_weights, const Tensor &amp;lxu_cache_locations, const Tensor &amp;uvm_cache_stats, const int64_t output_dtype, const bool is_experimental):&#160;gen_embedding_forward_split_weighted_codegen_cuda.cu'],['../gen__embedding__backward__split__sgd_8cpp.html#a3acb6fea5b2190d51a5a8b914a5542ab',1,'split_embedding_codegen_forward_weighted_cuda(const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t total_D, const int64_t max_D, const Tensor &amp;indices, const Tensor &amp;offsets, const int64_t pooling_mode, const Tensor &amp;indice_weights, const Tensor &amp;lxu_cache_locations, const Tensor &amp;uvm_cache_stats, const int64_t output_dtype, const bool is_experimental):&#160;gen_embedding_forward_split_weighted_codegen_cuda.cu'],['../gen__embedding__forward__split__weighted__codegen__cuda_8cu.html#a3acb6fea5b2190d51a5a8b914a5542ab',1,'split_embedding_codegen_forward_weighted_cuda(const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t total_D, const int64_t max_D, const Tensor &amp;indices, const Tensor &amp;offsets, const int64_t pooling_mode, const Tensor &amp;indice_weights, const Tensor &amp;lxu_cache_locations, const Tensor &amp;uvm_cache_stats, const int64_t output_dtype, const bool is_experimental):&#160;gen_embedding_forward_split_weighted_codegen_cuda.cu']]],
  ['split_5fembedding_5fcodegen_5fforward_5fweighted_5fmeta_66',['split_embedding_codegen_forward_weighted_meta',['../gen__embedding__forward__split__weighted__codegen__meta_8cpp.html#a5d26903a9fc60ac4cf1400827148c1e4',1,'gen_embedding_forward_split_weighted_codegen_meta.cpp']]],
  ['split_5fembedding_5fcodegen_5fforward_5fweighted_5fvbe_5fcuda_67',['split_embedding_codegen_forward_weighted_vbe_cuda',['../gen__embedding__backward__split__rowwise__adagrad_8cpp.html#a1b8bc5d20f736ea2f4b2b4757c6ed8c7',1,'split_embedding_codegen_forward_weighted_vbe_cuda(const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t total_D, const int64_t max_D, const Tensor &amp;indices, const Tensor &amp;offsets, const int64_t pooling_mode, const Tensor &amp;indice_weights, const Tensor &amp;lxu_cache_locations, const Tensor &amp;uvm_cache_stats, const int64_t output_dtype, const Tensor &amp;vbe_row_output_offsets, const Tensor &amp;vbe_b_t_map, const int64_t vbe_output_size, const int64_t info_B_num_bits, const int64_t info_B_mask_int64, const bool is_experimental):&#160;gen_embedding_forward_split_weighted_vbe_codegen_cuda.cu'],['../gen__embedding__backward__split__rowwise__adagrad__with__counter_8cpp.html#a1b8bc5d20f736ea2f4b2b4757c6ed8c7',1,'split_embedding_codegen_forward_weighted_vbe_cuda(const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t total_D, const int64_t max_D, const Tensor &amp;indices, const Tensor &amp;offsets, const int64_t pooling_mode, const Tensor &amp;indice_weights, const Tensor &amp;lxu_cache_locations, const Tensor &amp;uvm_cache_stats, const int64_t output_dtype, const Tensor &amp;vbe_row_output_offsets, const Tensor &amp;vbe_b_t_map, const int64_t vbe_output_size, const int64_t info_B_num_bits, const int64_t info_B_mask_int64, const bool is_experimental):&#160;gen_embedding_forward_split_weighted_vbe_codegen_cuda.cu'],['../gen__embedding__backward__split__sgd_8cpp.html#a1b8bc5d20f736ea2f4b2b4757c6ed8c7',1,'split_embedding_codegen_forward_weighted_vbe_cuda(const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t total_D, const int64_t max_D, const Tensor &amp;indices, const Tensor &amp;offsets, const int64_t pooling_mode, const Tensor &amp;indice_weights, const Tensor &amp;lxu_cache_locations, const Tensor &amp;uvm_cache_stats, const int64_t output_dtype, const Tensor &amp;vbe_row_output_offsets, const Tensor &amp;vbe_b_t_map, const int64_t vbe_output_size, const int64_t info_B_num_bits, const int64_t info_B_mask_int64, const bool is_experimental):&#160;gen_embedding_forward_split_weighted_vbe_codegen_cuda.cu'],['../gen__embedding__forward__split__weighted__vbe__codegen__cuda_8cu.html#a1b8bc5d20f736ea2f4b2b4757c6ed8c7',1,'split_embedding_codegen_forward_weighted_vbe_cuda(const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t total_D, const int64_t max_D, const Tensor &amp;indices, const Tensor &amp;offsets, const int64_t pooling_mode, const Tensor &amp;indice_weights, const Tensor &amp;lxu_cache_locations, const Tensor &amp;uvm_cache_stats, const int64_t output_dtype, const Tensor &amp;vbe_row_output_offsets, const Tensor &amp;vbe_b_t_map, const int64_t vbe_output_size, const int64_t info_B_num_bits, const int64_t info_B_mask_int64, const bool is_experimental):&#160;gen_embedding_forward_split_weighted_vbe_codegen_cuda.cu']]],
  ['split_5fembedding_5fcodegen_5fforward_5fweighted_5fvbe_5fmeta_68',['split_embedding_codegen_forward_weighted_vbe_meta',['../gen__embedding__forward__split__weighted__vbe__codegen__meta_8cpp.html#a22ea24664757381d062590273f32fe24',1,'gen_embedding_forward_split_weighted_vbe_codegen_meta.cpp']]],
  ['split_5fembedding_5fcodegen_5fgrad_5findice_5fweights_5fcpu_69',['split_embedding_codegen_grad_indice_weights_cpu',['../embedding__forward__split__cpu_8cpp.html#a03b54fa4944d00f3984442a980742701',1,'split_embedding_codegen_grad_indice_weights_cpu(Tensor grad_output, Tensor weights, Tensor weights_offsets, Tensor D_offsets, Tensor indices, Tensor offsets, Tensor feature_requires_grad):&#160;embedding_forward_split_cpu.cpp'],['../embedding__forward__split__cpu_8h.html#a371a7887c9af52b22bdc10e84d5c2ba6',1,'split_embedding_codegen_grad_indice_weights_cpu(at::Tensor grad_output, at::Tensor weights, at::Tensor weights_offsets, at::Tensor D_offsets, at::Tensor indices, at::Tensor offsets, at::Tensor feature_requires_grad):&#160;embedding_forward_split_cpu.cpp']]],
  ['split_5fembedding_5fcodegen_5fgrad_5findice_5fweights_5fcuda_70',['split_embedding_codegen_grad_indice_weights_cuda',['../gen__embedding__backward__split__adagrad_8cpp.html#a1fb867d681110d956ddaf10f110156a1',1,'split_embedding_codegen_grad_indice_weights_cuda(const Tensor &amp;grad_output, const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t max_D, const Tensor &amp;indices, const Tensor &amp;offsets, const Tensor &amp;lxu_cache_locations, const Tensor &amp;feature_requires_grad):&#160;gen_embedding_backward_split_indice_weights_codegen_cuda.cu'],['../gen__embedding__backward__split__adam_8cpp.html#a1fb867d681110d956ddaf10f110156a1',1,'split_embedding_codegen_grad_indice_weights_cuda(const Tensor &amp;grad_output, const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t max_D, const Tensor &amp;indices, const Tensor &amp;offsets, const Tensor &amp;lxu_cache_locations, const Tensor &amp;feature_requires_grad):&#160;gen_embedding_backward_split_indice_weights_codegen_cuda.cu'],['../gen__embedding__backward__split__approx__rowwise__adagrad__with__weight__decay_8cpp.html#a1fb867d681110d956ddaf10f110156a1',1,'split_embedding_codegen_grad_indice_weights_cuda(const Tensor &amp;grad_output, const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t max_D, const Tensor &amp;indices, const Tensor &amp;offsets, const Tensor &amp;lxu_cache_locations, const Tensor &amp;feature_requires_grad):&#160;gen_embedding_backward_split_indice_weights_codegen_cuda.cu'],['../gen__embedding__backward__split__indice__weights__codegen__cuda_8cu.html#a1fb867d681110d956ddaf10f110156a1',1,'split_embedding_codegen_grad_indice_weights_cuda(const Tensor &amp;grad_output, const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t max_D, const Tensor &amp;indices, const Tensor &amp;offsets, const Tensor &amp;lxu_cache_locations, const Tensor &amp;feature_requires_grad):&#160;gen_embedding_backward_split_indice_weights_codegen_cuda.cu'],['../gen__embedding__backward__split__lamb_8cpp.html#a1fb867d681110d956ddaf10f110156a1',1,'split_embedding_codegen_grad_indice_weights_cuda(const Tensor &amp;grad_output, const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t max_D, const Tensor &amp;indices, const Tensor &amp;offsets, const Tensor &amp;lxu_cache_locations, const Tensor &amp;feature_requires_grad):&#160;gen_embedding_backward_split_indice_weights_codegen_cuda.cu'],['../gen__embedding__backward__split__lars__sgd_8cpp.html#a1fb867d681110d956ddaf10f110156a1',1,'split_embedding_codegen_grad_indice_weights_cuda(const Tensor &amp;grad_output, const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t max_D, const Tensor &amp;indices, const Tensor &amp;offsets, const Tensor &amp;lxu_cache_locations, const Tensor &amp;feature_requires_grad):&#160;gen_embedding_backward_split_indice_weights_codegen_cuda.cu'],['../gen__embedding__backward__split__none_8cpp.html#a1fb867d681110d956ddaf10f110156a1',1,'split_embedding_codegen_grad_indice_weights_cuda(const Tensor &amp;grad_output, const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t max_D, const Tensor &amp;indices, const Tensor &amp;offsets, const Tensor &amp;lxu_cache_locations, const Tensor &amp;feature_requires_grad):&#160;gen_embedding_backward_split_indice_weights_codegen_cuda.cu'],['../gen__embedding__backward__split__partial__rowwise__adam_8cpp.html#a1fb867d681110d956ddaf10f110156a1',1,'split_embedding_codegen_grad_indice_weights_cuda(const Tensor &amp;grad_output, const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t max_D, const Tensor &amp;indices, const Tensor &amp;offsets, const Tensor &amp;lxu_cache_locations, const Tensor &amp;feature_requires_grad):&#160;gen_embedding_backward_split_indice_weights_codegen_cuda.cu'],['../gen__embedding__backward__split__partial__rowwise__lamb_8cpp.html#a1fb867d681110d956ddaf10f110156a1',1,'split_embedding_codegen_grad_indice_weights_cuda(const Tensor &amp;grad_output, const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t max_D, const Tensor &amp;indices, const Tensor &amp;offsets, const Tensor &amp;lxu_cache_locations, const Tensor &amp;feature_requires_grad):&#160;gen_embedding_backward_split_indice_weights_codegen_cuda.cu'],['../gen__embedding__backward__split__rowwise__adagrad_8cpp.html#a1fb867d681110d956ddaf10f110156a1',1,'split_embedding_codegen_grad_indice_weights_cuda(const Tensor &amp;grad_output, const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t max_D, const Tensor &amp;indices, const Tensor &amp;offsets, const Tensor &amp;lxu_cache_locations, const Tensor &amp;feature_requires_grad):&#160;gen_embedding_backward_split_indice_weights_codegen_cuda.cu'],['../gen__embedding__backward__split__rowwise__adagrad__with__counter_8cpp.html#a1fb867d681110d956ddaf10f110156a1',1,'split_embedding_codegen_grad_indice_weights_cuda(const Tensor &amp;grad_output, const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t max_D, const Tensor &amp;indices, const Tensor &amp;offsets, const Tensor &amp;lxu_cache_locations, const Tensor &amp;feature_requires_grad):&#160;gen_embedding_backward_split_indice_weights_codegen_cuda.cu'],['../gen__embedding__backward__split__rowwise__adagrad__with__weight__decay_8cpp.html#a1fb867d681110d956ddaf10f110156a1',1,'split_embedding_codegen_grad_indice_weights_cuda(const Tensor &amp;grad_output, const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t max_D, const Tensor &amp;indices, const Tensor &amp;offsets, const Tensor &amp;lxu_cache_locations, const Tensor &amp;feature_requires_grad):&#160;gen_embedding_backward_split_indice_weights_codegen_cuda.cu'],['../gen__embedding__backward__split__rowwise__weighted__adagrad_8cpp.html#a1fb867d681110d956ddaf10f110156a1',1,'split_embedding_codegen_grad_indice_weights_cuda(const Tensor &amp;grad_output, const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t max_D, const Tensor &amp;indices, const Tensor &amp;offsets, const Tensor &amp;lxu_cache_locations, const Tensor &amp;feature_requires_grad):&#160;gen_embedding_backward_split_indice_weights_codegen_cuda.cu'],['../gen__embedding__backward__split__sgd_8cpp.html#a1fb867d681110d956ddaf10f110156a1',1,'split_embedding_codegen_grad_indice_weights_cuda(const Tensor &amp;grad_output, const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t max_D, const Tensor &amp;indices, const Tensor &amp;offsets, const Tensor &amp;lxu_cache_locations, const Tensor &amp;feature_requires_grad):&#160;gen_embedding_backward_split_indice_weights_codegen_cuda.cu']]],
  ['split_5fembedding_5fcodegen_5fgrad_5findice_5fweights_5fvbe_5fcuda_71',['split_embedding_codegen_grad_indice_weights_vbe_cuda',['../gen__embedding__backward__split__indice__weights__codegen__cuda_8cu.html#ae8a987f07ba5142ffd7a0733824925a2',1,'split_embedding_codegen_grad_indice_weights_vbe_cuda(const Tensor &amp;grad_output, const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t max_D, const Tensor &amp;indices, const Tensor &amp;offsets, const Tensor &amp;lxu_cache_locations, const Tensor &amp;feature_requires_grad, const Tensor &amp;vbe_row_output_offsets, const Tensor &amp;vbe_b_t_map, const int64_t info_B_num_bits, const int64_t info_B_mask_int64):&#160;gen_embedding_backward_split_indice_weights_codegen_cuda.cu'],['../gen__embedding__backward__split__rowwise__adagrad_8cpp.html#ae8a987f07ba5142ffd7a0733824925a2',1,'split_embedding_codegen_grad_indice_weights_vbe_cuda(const Tensor &amp;grad_output, const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t max_D, const Tensor &amp;indices, const Tensor &amp;offsets, const Tensor &amp;lxu_cache_locations, const Tensor &amp;feature_requires_grad, const Tensor &amp;vbe_row_output_offsets, const Tensor &amp;vbe_b_t_map, const int64_t info_B_num_bits, const int64_t info_B_mask_int64):&#160;gen_embedding_backward_split_indice_weights_codegen_cuda.cu'],['../gen__embedding__backward__split__rowwise__adagrad__with__counter_8cpp.html#ae8a987f07ba5142ffd7a0733824925a2',1,'split_embedding_codegen_grad_indice_weights_vbe_cuda(const Tensor &amp;grad_output, const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t max_D, const Tensor &amp;indices, const Tensor &amp;offsets, const Tensor &amp;lxu_cache_locations, const Tensor &amp;feature_requires_grad, const Tensor &amp;vbe_row_output_offsets, const Tensor &amp;vbe_b_t_map, const int64_t info_B_num_bits, const int64_t info_B_mask_int64):&#160;gen_embedding_backward_split_indice_weights_codegen_cuda.cu'],['../gen__embedding__backward__split__sgd_8cpp.html#ae8a987f07ba5142ffd7a0733824925a2',1,'split_embedding_codegen_grad_indice_weights_vbe_cuda(const Tensor &amp;grad_output, const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const Tensor &amp;D_offsets, const int64_t max_D, const Tensor &amp;indices, const Tensor &amp;offsets, const Tensor &amp;lxu_cache_locations, const Tensor &amp;feature_requires_grad, const Tensor &amp;vbe_row_output_offsets, const Tensor &amp;vbe_b_t_map, const int64_t info_B_num_bits, const int64_t info_B_mask_int64):&#160;gen_embedding_backward_split_indice_weights_codegen_cuda.cu']]],
  ['split_5fembedding_5fcodegen_5flookup_5fadagrad_5ffunction_72',['split_embedding_codegen_lookup_adagrad_function',['../group__embedding-cuda.html#gaa0988eef90f8662e8886912ed3784c1d',1,'gen_embedding_backward_split_adagrad.cpp']]],
  ['split_5fembedding_5fcodegen_5flookup_5fadam_5ffunction_73',['split_embedding_codegen_lookup_adam_function',['../group__embedding-cuda.html#ga639ddbb31e9d565bfcfa4766b14c9ef6',1,'gen_embedding_backward_split_adam.cpp']]],
  ['split_5fembedding_5fcodegen_5flookup_5fapprox_5frowwise_5fadagrad_5ffunction_74',['split_embedding_codegen_lookup_approx_rowwise_adagrad_function',['../group__embedding-cuda.html#gac847393d811e7b22ace39ff91eb91e27',1,'gen_embedding_backward_split_approx_rowwise_adagrad.cpp']]],
  ['split_5fembedding_5fcodegen_5flookup_5fapprox_5frowwise_5fadagrad_5fwith_5fcounter_5ffunction_75',['split_embedding_codegen_lookup_approx_rowwise_adagrad_with_counter_function',['../group__embedding-cuda.html#gabf7587752fb66934350cec59cd7adda9',1,'gen_embedding_backward_split_approx_rowwise_adagrad_with_counter.cpp']]],
  ['split_5fembedding_5fcodegen_5flookup_5fapprox_5frowwise_5fadagrad_5fwith_5fweight_5fdecay_5ffunction_76',['split_embedding_codegen_lookup_approx_rowwise_adagrad_with_weight_decay_function',['../group__embedding-cuda.html#ga0a7191adb6807417bfaab85ccb6fac50',1,'gen_embedding_backward_split_approx_rowwise_adagrad_with_weight_decay.cpp']]],
  ['split_5fembedding_5fcodegen_5flookup_5fapprox_5fsgd_5ffunction_77',['split_embedding_codegen_lookup_approx_sgd_function',['../group__embedding-cuda.html#gabcff81381942478b57805e5deb7725fb',1,'gen_embedding_backward_split_approx_sgd.cpp']]],
  ['split_5fembedding_5fcodegen_5flookup_5fdense_5ffunction_78',['split_embedding_codegen_lookup_dense_function',['../embedding__backward__dense__host_8cpp.html#a04b7d97e6fd0bbb6e9877db0c1b7e506',1,'embedding_backward_dense_host.cpp']]],
  ['split_5fembedding_5fcodegen_5flookup_5flamb_5ffunction_79',['split_embedding_codegen_lookup_lamb_function',['../group__embedding-cuda.html#ga1c377dd2500d38974bbfe0e69243e084',1,'gen_embedding_backward_split_lamb.cpp']]],
  ['split_5fembedding_5fcodegen_5flookup_5flars_5fsgd_5ffunction_80',['split_embedding_codegen_lookup_lars_sgd_function',['../group__embedding-cuda.html#ga5c0d733a2e781ea4c9fc5ab3a2d6ccf3',1,'gen_embedding_backward_split_lars_sgd.cpp']]],
  ['split_5fembedding_5fcodegen_5flookup_5fnone_5ffunction_81',['split_embedding_codegen_lookup_none_function',['../group__embedding-cuda.html#ga855a30b389de5a61097f44cff795b6c3',1,'gen_embedding_backward_split_none.cpp']]],
  ['split_5fembedding_5fcodegen_5flookup_5fpartial_5frowwise_5fadam_5ffunction_82',['split_embedding_codegen_lookup_partial_rowwise_adam_function',['../group__embedding-cuda.html#ga06feb6c425fba7c460dc0da550d4e4e6',1,'gen_embedding_backward_split_partial_rowwise_adam.cpp']]],
  ['split_5fembedding_5fcodegen_5flookup_5fpartial_5frowwise_5flamb_5ffunction_83',['split_embedding_codegen_lookup_partial_rowwise_lamb_function',['../group__embedding-cuda.html#ga37b9129c928c9cb39459198f36f11c8d',1,'gen_embedding_backward_split_partial_rowwise_lamb.cpp']]],
  ['split_5fembedding_5fcodegen_5flookup_5frowwise_5fadagrad_5ffunction_84',['split_embedding_codegen_lookup_rowwise_adagrad_function',['../group__embedding-cuda.html#gacc3d997b675b747985dd37193cac4edd',1,'gen_embedding_backward_split_rowwise_adagrad.cpp']]],
  ['split_5fembedding_5fcodegen_5flookup_5frowwise_5fadagrad_5fwith_5fcounter_5ffunction_85',['split_embedding_codegen_lookup_rowwise_adagrad_with_counter_function',['../group__embedding-cuda.html#ga917cf0c2c4487425408808529ed05e68',1,'gen_embedding_backward_split_rowwise_adagrad_with_counter.cpp']]],
  ['split_5fembedding_5fcodegen_5flookup_5frowwise_5fadagrad_5fwith_5fweight_5fdecay_5ffunction_86',['split_embedding_codegen_lookup_rowwise_adagrad_with_weight_decay_function',['../group__embedding-cuda.html#ga2e19021f546871ef6f1e57fca7cf5e13',1,'gen_embedding_backward_split_rowwise_adagrad_with_weight_decay.cpp']]],
  ['split_5fembedding_5fcodegen_5flookup_5frowwise_5fweighted_5fadagrad_5ffunction_87',['split_embedding_codegen_lookup_rowwise_weighted_adagrad_function',['../group__embedding-cuda.html#ga54a40e0e64a528731d45bca998727a1c',1,'gen_embedding_backward_split_rowwise_weighted_adagrad.cpp']]],
  ['split_5fembedding_5fcodegen_5flookup_5fsgd_5ffunction_88',['split_embedding_codegen_lookup_sgd_function',['../group__embedding-cuda.html#ga66c2eb0df8e5dab40f0d862ebe43bd34',1,'gen_embedding_backward_split_sgd.cpp']]],
  ['split_5fembedding_5fforward_5fcpu_5fkernel_89',['split_embedding_forward_cpu_kernel',['../embedding__forward__split__cpu_8cpp.html#af360a949beb9bba72466614e220da13d',1,'embedding_forward_split_cpu.cpp']]],
  ['split_5fembedding_5fgrad_5findice_5fweights_5fcpu_5fkernel_90',['split_embedding_grad_indice_weights_cpu_kernel',['../embedding__forward__split__cpu_8cpp.html#a1156d3aee8ccb8a6676b22f78fe0829c',1,'embedding_forward_split_cpu.cpp']]],
  ['split_5fembedding_5fnobag_5fbackward_5fcodegen_5fadagrad_5funweighted_5fexact_5fcuda_91',['split_embedding_nobag_backward_codegen_adagrad_unweighted_exact_cuda',['../gen__embedding__backward__adagrad__split__unweighted__nobag__cuda_8cu.html#a635c3123249dcf767e8d80923e11a7b1',1,'split_embedding_nobag_backward_codegen_adagrad_unweighted_exact_cuda(const Tensor &amp;grad_output, const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const int64_t D, const Tensor &amp;hash_size_cumsum, const int64_t total_hash_size_bits, const Tensor &amp;indices, const Tensor &amp;offsets, const Tensor &amp;lxu_cache_locations, const int64_t unused_, const int64_t max_segment_length_per_warp, const bool stochastic_rounding, const int64_t info_B_num_bits, const int64_t info_B_mask_int64, const bool use_uniq_cache_locations, const bool use_homogeneous_placements, Tensor momentum1_dev, Tensor momentum1_uvm, Tensor momentum1_placements, Tensor momentum1_offsets, double eps, double learning_rate):&#160;gen_embedding_backward_adagrad_split_unweighted_nobag_cuda.cu'],['../gen__embedding__backward__split__adagrad_8cpp.html#ad491e078738cfd46a4d2377948b977fc',1,'split_embedding_nobag_backward_codegen_adagrad_unweighted_exact_cuda(const Tensor &amp;grad_output, const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const int64_t D, const Tensor &amp;hash_size_cumsum, const int64_t total_hash_size_bits, const Tensor &amp;indices, const Tensor &amp;offsets, const Tensor &amp;lxu_cache_locations, const int64_t BT_block_size, const int64_t max_segment_length_per_warp, const bool stochastic_rounding, const int64_t info_B_num_bits, const int64_t info_B_mask_int64, const bool use_uniq_cache_locations, const bool use_homogeneous_placements, Tensor momentum1_dev, Tensor momentum1_uvm, Tensor momentum1_placements, Tensor momentum1_offsets, double eps=0, double learning_rate=0):&#160;gen_embedding_backward_adagrad_split_unweighted_nobag_cuda.cu']]],
  ['split_5fembedding_5fnobag_5fbackward_5fcodegen_5fadam_5funweighted_5fexact_5fcuda_92',['split_embedding_nobag_backward_codegen_adam_unweighted_exact_cuda',['../gen__embedding__backward__adam__split__unweighted__nobag__cuda_8cu.html#a6392bb8bf8131572a96cb5bf5a363152',1,'split_embedding_nobag_backward_codegen_adam_unweighted_exact_cuda(const Tensor &amp;grad_output, const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const int64_t D, const Tensor &amp;hash_size_cumsum, const int64_t total_hash_size_bits, const Tensor &amp;indices, const Tensor &amp;offsets, const Tensor &amp;lxu_cache_locations, const int64_t unused_, const int64_t max_segment_length_per_warp, const bool stochastic_rounding, const int64_t info_B_num_bits, const int64_t info_B_mask_int64, const bool use_uniq_cache_locations, const bool use_homogeneous_placements, Tensor momentum1_dev, Tensor momentum1_uvm, Tensor momentum1_placements, Tensor momentum1_offsets, Tensor momentum2_dev, Tensor momentum2_uvm, Tensor momentum2_placements, Tensor momentum2_offsets, double learning_rate, double eps, double beta1, double beta2, double weight_decay, int64_t iter):&#160;gen_embedding_backward_adam_split_unweighted_nobag_cuda.cu'],['../gen__embedding__backward__split__adam_8cpp.html#a6a9de0e9036f30dbd7d7e4442ae7e5fe',1,'split_embedding_nobag_backward_codegen_adam_unweighted_exact_cuda(const Tensor &amp;grad_output, const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const int64_t D, const Tensor &amp;hash_size_cumsum, const int64_t total_hash_size_bits, const Tensor &amp;indices, const Tensor &amp;offsets, const Tensor &amp;lxu_cache_locations, const int64_t BT_block_size, const int64_t max_segment_length_per_warp, const bool stochastic_rounding, const int64_t info_B_num_bits, const int64_t info_B_mask_int64, const bool use_uniq_cache_locations, const bool use_homogeneous_placements, Tensor momentum1_dev, Tensor momentum1_uvm, Tensor momentum1_placements, Tensor momentum1_offsets, Tensor momentum2_dev, Tensor momentum2_uvm, Tensor momentum2_placements, Tensor momentum2_offsets, double learning_rate=0, double eps=0, double beta1=0, double beta2=0, double weight_decay=0, int64_t iter=0):&#160;gen_embedding_backward_adam_split_unweighted_nobag_cuda.cu']]],
  ['split_5fembedding_5fnobag_5fbackward_5fcodegen_5fapprox_5frowwise_5fadagrad_5fwith_5fweight_5fdecay_5funweighted_5fexact_5fcuda_93',['split_embedding_nobag_backward_codegen_approx_rowwise_adagrad_with_weight_decay_unweighted_exact_cuda',['../gen__embedding__backward__approx__rowwise__adagrad__with__weight__decay__split__unweighted__nobag__cuda_8cu.html#a8d755844b3dc430390b0db02833650a7',1,'split_embedding_nobag_backward_codegen_approx_rowwise_adagrad_with_weight_decay_unweighted_exact_cuda(const Tensor &amp;grad_output, const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const int64_t D, const Tensor &amp;hash_size_cumsum, const int64_t total_hash_size_bits, const Tensor &amp;indices, const Tensor &amp;offsets, const Tensor &amp;lxu_cache_locations, const int64_t unused_, const int64_t max_segment_length_per_warp, const bool stochastic_rounding, const int64_t info_B_num_bits, const int64_t info_B_mask_int64, const bool use_uniq_cache_locations, const bool use_homogeneous_placements, Tensor momentum1_dev, Tensor momentum1_uvm, Tensor momentum1_placements, Tensor momentum1_offsets, double eps, double learning_rate, double weight_decay, int64_t weight_decay_mode):&#160;gen_embedding_backward_approx_rowwise_adagrad_with_weight_decay_split_unweighted_nobag_cuda.cu'],['../gen__embedding__backward__split__approx__rowwise__adagrad__with__weight__decay_8cpp.html#a701f363d76409a2aa4df028f12ba0300',1,'split_embedding_nobag_backward_codegen_approx_rowwise_adagrad_with_weight_decay_unweighted_exact_cuda(const Tensor &amp;grad_output, const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const int64_t D, const Tensor &amp;hash_size_cumsum, const int64_t total_hash_size_bits, const Tensor &amp;indices, const Tensor &amp;offsets, const Tensor &amp;lxu_cache_locations, const int64_t BT_block_size, const int64_t max_segment_length_per_warp, const bool stochastic_rounding, const int64_t info_B_num_bits, const int64_t info_B_mask_int64, const bool use_uniq_cache_locations, const bool use_homogeneous_placements, Tensor momentum1_dev, Tensor momentum1_uvm, Tensor momentum1_placements, Tensor momentum1_offsets, double eps=0, double learning_rate=0, double weight_decay=0.0, int64_t weight_decay_mode=0):&#160;gen_embedding_backward_approx_rowwise_adagrad_with_weight_decay_split_unweighted_nobag_cuda.cu']]],
  ['split_5fembedding_5fnobag_5fbackward_5fcodegen_5fdense_5funweighted_5fexact_5fcuda_94',['split_embedding_nobag_backward_codegen_dense_unweighted_exact_cuda',['../gen__embedding__backward__dense__split__unweighted__nobag__cuda_8cu.html#a11ce1782edb9d58fffb5fe2581172d70',1,'split_embedding_nobag_backward_codegen_dense_unweighted_exact_cuda(const Tensor &amp;grad_output, const Tensor &amp;dev_weights, const Tensor &amp;weights_offsets, const int64_t D, const Tensor &amp;hash_size_cumsum, const int64_t total_hash_size_bits, const Tensor &amp;indices, const Tensor &amp;offsets, const int64_t unused_, const int64_t max_segment_length_per_warp, double unused):&#160;gen_embedding_backward_dense_split_unweighted_nobag_cuda.cu'],['../embedding__backward__dense__host_8cpp.html#a7911ad2a461036b977d8d9f9fafb391a',1,'split_embedding_nobag_backward_codegen_dense_unweighted_exact_cuda(const Tensor &amp;grad_output, const Tensor &amp;dev_weights, const Tensor &amp;weights_offsets, const int64_t D, const Tensor &amp;hash_size_cumsum, const int64_t total_hash_size_bits, const Tensor &amp;indices, const Tensor &amp;offsets, const int64_t BT_block_size, const int64_t max_segment_length_per_warp, const double unused):&#160;gen_embedding_backward_dense_split_unweighted_nobag_cuda.cu']]],
  ['split_5fembedding_5fnobag_5fbackward_5fcodegen_5flamb_5funweighted_5fexact_5fcuda_95',['split_embedding_nobag_backward_codegen_lamb_unweighted_exact_cuda',['../gen__embedding__backward__lamb__split__unweighted__nobag__cuda_8cu.html#ad6463435db98705077041803b394dcc3',1,'split_embedding_nobag_backward_codegen_lamb_unweighted_exact_cuda(const Tensor &amp;grad_output, const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const int64_t D, const Tensor &amp;hash_size_cumsum, const int64_t total_hash_size_bits, const Tensor &amp;indices, const Tensor &amp;offsets, const Tensor &amp;lxu_cache_locations, const int64_t unused_, const int64_t max_segment_length_per_warp, const bool stochastic_rounding, const int64_t info_B_num_bits, const int64_t info_B_mask_int64, const bool use_uniq_cache_locations, const bool use_homogeneous_placements, Tensor momentum1_dev, Tensor momentum1_uvm, Tensor momentum1_placements, Tensor momentum1_offsets, Tensor momentum2_dev, Tensor momentum2_uvm, Tensor momentum2_placements, Tensor momentum2_offsets, double learning_rate, double eps, double beta1, double beta2, double weight_decay, int64_t iter):&#160;gen_embedding_backward_lamb_split_unweighted_nobag_cuda.cu'],['../gen__embedding__backward__split__lamb_8cpp.html#a557b019964c8d292ca9923927e0d974a',1,'split_embedding_nobag_backward_codegen_lamb_unweighted_exact_cuda(const Tensor &amp;grad_output, const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const int64_t D, const Tensor &amp;hash_size_cumsum, const int64_t total_hash_size_bits, const Tensor &amp;indices, const Tensor &amp;offsets, const Tensor &amp;lxu_cache_locations, const int64_t BT_block_size, const int64_t max_segment_length_per_warp, const bool stochastic_rounding, const int64_t info_B_num_bits, const int64_t info_B_mask_int64, const bool use_uniq_cache_locations, const bool use_homogeneous_placements, Tensor momentum1_dev, Tensor momentum1_uvm, Tensor momentum1_placements, Tensor momentum1_offsets, Tensor momentum2_dev, Tensor momentum2_uvm, Tensor momentum2_placements, Tensor momentum2_offsets, double learning_rate=0, double eps=0, double beta1=0, double beta2=0, double weight_decay=0, int64_t iter=0):&#160;gen_embedding_backward_lamb_split_unweighted_nobag_cuda.cu']]],
  ['split_5fembedding_5fnobag_5fbackward_5fcodegen_5flars_5fsgd_5funweighted_5fexact_5fcuda_96',['split_embedding_nobag_backward_codegen_lars_sgd_unweighted_exact_cuda',['../gen__embedding__backward__lars__sgd__split__unweighted__nobag__cuda_8cu.html#a0e0807f32e264e5a83586907ea3f6749',1,'split_embedding_nobag_backward_codegen_lars_sgd_unweighted_exact_cuda(const Tensor &amp;grad_output, const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const int64_t D, const Tensor &amp;hash_size_cumsum, const int64_t total_hash_size_bits, const Tensor &amp;indices, const Tensor &amp;offsets, const Tensor &amp;lxu_cache_locations, const int64_t unused_, const int64_t max_segment_length_per_warp, const bool stochastic_rounding, const int64_t info_B_num_bits, const int64_t info_B_mask_int64, const bool use_uniq_cache_locations, const bool use_homogeneous_placements, Tensor momentum1_dev, Tensor momentum1_uvm, Tensor momentum1_placements, Tensor momentum1_offsets, double learning_rate, double eta, double momentum, double weight_decay):&#160;gen_embedding_backward_lars_sgd_split_unweighted_nobag_cuda.cu'],['../gen__embedding__backward__split__lars__sgd_8cpp.html#a80df1bf7d746582f689d6bc4652f7266',1,'split_embedding_nobag_backward_codegen_lars_sgd_unweighted_exact_cuda(const Tensor &amp;grad_output, const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const int64_t D, const Tensor &amp;hash_size_cumsum, const int64_t total_hash_size_bits, const Tensor &amp;indices, const Tensor &amp;offsets, const Tensor &amp;lxu_cache_locations, const int64_t BT_block_size, const int64_t max_segment_length_per_warp, const bool stochastic_rounding, const int64_t info_B_num_bits, const int64_t info_B_mask_int64, const bool use_uniq_cache_locations, const bool use_homogeneous_placements, Tensor momentum1_dev, Tensor momentum1_uvm, Tensor momentum1_placements, Tensor momentum1_offsets, double learning_rate=0, double eta=0, double momentum=0, double weight_decay=0):&#160;gen_embedding_backward_lars_sgd_split_unweighted_nobag_cuda.cu']]],
  ['split_5fembedding_5fnobag_5fbackward_5fcodegen_5fnone_5funweighted_5fexact_5fcuda_97',['split_embedding_nobag_backward_codegen_none_unweighted_exact_cuda',['../gen__embedding__backward__none__split__unweighted__nobag__cuda_8cu.html#af181f8da92e59fb5da465d0931859e77',1,'split_embedding_nobag_backward_codegen_none_unweighted_exact_cuda(const Tensor &amp;grad_output, const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const int64_t D, const Tensor &amp;hash_size_cumsum, const int64_t total_hash_size_bits, const Tensor &amp;indices, const Tensor &amp;offsets, const Tensor &amp;lxu_cache_locations, const int64_t unused_, const int64_t max_segment_length_per_warp, const int64_t info_B_num_bits, const int64_t info_B_mask_int64, const bool use_uniq_cache_locations, const bool use_homogeneous_placements, int64_t total_hash_size, int64_t total_unique_indices):&#160;gen_embedding_backward_none_split_unweighted_nobag_cuda.cu'],['../gen__embedding__backward__split__none_8cpp.html#a1540203f5279dd87016b397fe33fb041',1,'split_embedding_nobag_backward_codegen_none_unweighted_exact_cuda(const Tensor &amp;grad_output, const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const int64_t D, const Tensor &amp;hash_size_cumsum, const int64_t total_hash_size_bits, const Tensor &amp;indices, const Tensor &amp;offsets, const Tensor &amp;lxu_cache_locations, const int64_t BT_block_size, const int64_t max_segment_length_per_warp, const int64_t info_B_num_bits, const int64_t info_B_mask_int64, const bool use_uniq_cache_locations, const bool use_homogeneous_placements, int64_t total_hash_size=0, int64_t total_unique_indices=0):&#160;gen_embedding_backward_none_split_unweighted_nobag_cuda.cu']]],
  ['split_5fembedding_5fnobag_5fbackward_5fcodegen_5fpartial_5frowwise_5fadam_5funweighted_5fexact_5fcuda_98',['split_embedding_nobag_backward_codegen_partial_rowwise_adam_unweighted_exact_cuda',['../gen__embedding__backward__partial__rowwise__adam__split__unweighted__nobag__cuda_8cu.html#a96e4c395674727814da03c2e1654487b',1,'split_embedding_nobag_backward_codegen_partial_rowwise_adam_unweighted_exact_cuda(const Tensor &amp;grad_output, const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const int64_t D, const Tensor &amp;hash_size_cumsum, const int64_t total_hash_size_bits, const Tensor &amp;indices, const Tensor &amp;offsets, const Tensor &amp;lxu_cache_locations, const int64_t unused_, const int64_t max_segment_length_per_warp, const bool stochastic_rounding, const int64_t info_B_num_bits, const int64_t info_B_mask_int64, const bool use_uniq_cache_locations, const bool use_homogeneous_placements, Tensor momentum1_dev, Tensor momentum1_uvm, Tensor momentum1_placements, Tensor momentum1_offsets, Tensor momentum2_dev, Tensor momentum2_uvm, Tensor momentum2_placements, Tensor momentum2_offsets, double learning_rate, double eps, double beta1, double beta2, double weight_decay, int64_t iter):&#160;gen_embedding_backward_partial_rowwise_adam_split_unweighted_nobag_cuda.cu'],['../gen__embedding__backward__split__partial__rowwise__adam_8cpp.html#aed21b16681b11ddd3303195bc4e278ec',1,'split_embedding_nobag_backward_codegen_partial_rowwise_adam_unweighted_exact_cuda(const Tensor &amp;grad_output, const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const int64_t D, const Tensor &amp;hash_size_cumsum, const int64_t total_hash_size_bits, const Tensor &amp;indices, const Tensor &amp;offsets, const Tensor &amp;lxu_cache_locations, const int64_t BT_block_size, const int64_t max_segment_length_per_warp, const bool stochastic_rounding, const int64_t info_B_num_bits, const int64_t info_B_mask_int64, const bool use_uniq_cache_locations, const bool use_homogeneous_placements, Tensor momentum1_dev, Tensor momentum1_uvm, Tensor momentum1_placements, Tensor momentum1_offsets, Tensor momentum2_dev, Tensor momentum2_uvm, Tensor momentum2_placements, Tensor momentum2_offsets, double learning_rate=0, double eps=0, double beta1=0, double beta2=0, double weight_decay=0, int64_t iter=0):&#160;gen_embedding_backward_partial_rowwise_adam_split_unweighted_nobag_cuda.cu']]],
  ['split_5fembedding_5fnobag_5fbackward_5fcodegen_5fpartial_5frowwise_5flamb_5funweighted_5fexact_5fcuda_99',['split_embedding_nobag_backward_codegen_partial_rowwise_lamb_unweighted_exact_cuda',['../gen__embedding__backward__partial__rowwise__lamb__split__unweighted__nobag__cuda_8cu.html#a41c428effc52b315649ebd4bda728619',1,'split_embedding_nobag_backward_codegen_partial_rowwise_lamb_unweighted_exact_cuda(const Tensor &amp;grad_output, const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const int64_t D, const Tensor &amp;hash_size_cumsum, const int64_t total_hash_size_bits, const Tensor &amp;indices, const Tensor &amp;offsets, const Tensor &amp;lxu_cache_locations, const int64_t unused_, const int64_t max_segment_length_per_warp, const bool stochastic_rounding, const int64_t info_B_num_bits, const int64_t info_B_mask_int64, const bool use_uniq_cache_locations, const bool use_homogeneous_placements, Tensor momentum1_dev, Tensor momentum1_uvm, Tensor momentum1_placements, Tensor momentum1_offsets, Tensor momentum2_dev, Tensor momentum2_uvm, Tensor momentum2_placements, Tensor momentum2_offsets, double learning_rate, double eps, double beta1, double beta2, double weight_decay, int64_t iter):&#160;gen_embedding_backward_partial_rowwise_lamb_split_unweighted_nobag_cuda.cu'],['../gen__embedding__backward__split__partial__rowwise__lamb_8cpp.html#ad14c41705ba6da0dc89b8802945b9a3a',1,'split_embedding_nobag_backward_codegen_partial_rowwise_lamb_unweighted_exact_cuda(const Tensor &amp;grad_output, const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const int64_t D, const Tensor &amp;hash_size_cumsum, const int64_t total_hash_size_bits, const Tensor &amp;indices, const Tensor &amp;offsets, const Tensor &amp;lxu_cache_locations, const int64_t BT_block_size, const int64_t max_segment_length_per_warp, const bool stochastic_rounding, const int64_t info_B_num_bits, const int64_t info_B_mask_int64, const bool use_uniq_cache_locations, const bool use_homogeneous_placements, Tensor momentum1_dev, Tensor momentum1_uvm, Tensor momentum1_placements, Tensor momentum1_offsets, Tensor momentum2_dev, Tensor momentum2_uvm, Tensor momentum2_placements, Tensor momentum2_offsets, double learning_rate=0, double eps=0, double beta1=0, double beta2=0, double weight_decay=0, int64_t iter=0):&#160;gen_embedding_backward_partial_rowwise_lamb_split_unweighted_nobag_cuda.cu']]],
  ['split_5fembedding_5fnobag_5fbackward_5fcodegen_5frowwise_5fadagrad_5funweighted_5fexact_5fcuda_100',['split_embedding_nobag_backward_codegen_rowwise_adagrad_unweighted_exact_cuda',['../gen__embedding__backward__rowwise__adagrad__split__unweighted__nobag__cuda_8cu.html#a05fd1c9f2aea152f9cbe2def957c66fb',1,'split_embedding_nobag_backward_codegen_rowwise_adagrad_unweighted_exact_cuda(const Tensor &amp;grad_output, const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const int64_t D, const Tensor &amp;hash_size_cumsum, const int64_t total_hash_size_bits, const Tensor &amp;indices, const Tensor &amp;offsets, const Tensor &amp;lxu_cache_locations, const int64_t unused_, const int64_t max_segment_length_per_warp, const bool stochastic_rounding, const int64_t info_B_num_bits, const int64_t info_B_mask_int64, const bool use_uniq_cache_locations, const bool use_homogeneous_placements, Tensor momentum1_dev, Tensor momentum1_uvm, Tensor momentum1_placements, Tensor momentum1_offsets, double eps, double learning_rate, double weight_decay, int64_t weight_decay_mode, double max_norm):&#160;gen_embedding_backward_rowwise_adagrad_split_unweighted_nobag_cuda.cu'],['../gen__embedding__backward__split__rowwise__adagrad_8cpp.html#a4bdf992307f845985594c371275668a8',1,'split_embedding_nobag_backward_codegen_rowwise_adagrad_unweighted_exact_cuda(const Tensor &amp;grad_output, const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const int64_t D, const Tensor &amp;hash_size_cumsum, const int64_t total_hash_size_bits, const Tensor &amp;indices, const Tensor &amp;offsets, const Tensor &amp;lxu_cache_locations, const int64_t BT_block_size, const int64_t max_segment_length_per_warp, const bool stochastic_rounding, const int64_t info_B_num_bits, const int64_t info_B_mask_int64, const bool use_uniq_cache_locations, const bool use_homogeneous_placements, Tensor momentum1_dev, Tensor momentum1_uvm, Tensor momentum1_placements, Tensor momentum1_offsets, double eps=0, double learning_rate=0, double weight_decay=0.0, int64_t weight_decay_mode=0, double max_norm=0.0):&#160;gen_embedding_backward_rowwise_adagrad_split_unweighted_nobag_cuda.cu']]],
  ['split_5fembedding_5fnobag_5fbackward_5fcodegen_5frowwise_5fadagrad_5fwith_5fcounter_5funweighted_5fexact_5fcuda_101',['split_embedding_nobag_backward_codegen_rowwise_adagrad_with_counter_unweighted_exact_cuda',['../gen__embedding__backward__rowwise__adagrad__with__counter__split__unweighted__nobag__cuda_8cu.html#a0377d50ef90391567b4819a19bffb34c',1,'split_embedding_nobag_backward_codegen_rowwise_adagrad_with_counter_unweighted_exact_cuda(const Tensor &amp;grad_output, const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const int64_t D, const Tensor &amp;hash_size_cumsum, const int64_t total_hash_size_bits, const Tensor &amp;indices, const Tensor &amp;offsets, const Tensor &amp;lxu_cache_locations, const int64_t unused_, const int64_t max_segment_length_per_warp, const bool stochastic_rounding, const int64_t info_B_num_bits, const int64_t info_B_mask_int64, const bool use_uniq_cache_locations, const bool use_homogeneous_placements, Tensor momentum1_dev, Tensor momentum1_uvm, Tensor momentum1_placements, Tensor momentum1_offsets, Tensor prev_iter_dev, Tensor prev_iter_uvm, Tensor prev_iter_placements, Tensor prev_iter_offsets, Tensor row_counter_dev, Tensor row_counter_uvm, Tensor row_counter_placements, Tensor row_counter_offsets, double eps, double learning_rate, double weight_decay, int64_t iter, int64_t counter_halflife, int64_t adjustment_iter, double adjustment_ub, int64_t learning_rate_mode, int64_t weight_decay_mode, int64_t grad_sum_decay, double max_counter, double tail_id_threshold, int64_t is_tail_id_thresh_ratio, int64_t regularization_mode, double weight_norm_coefficient, double lower_bound):&#160;gen_embedding_backward_rowwise_adagrad_with_counter_split_unweighted_nobag_cuda.cu'],['../gen__embedding__backward__split__rowwise__adagrad__with__counter_8cpp.html#a7a94588a2cce7c8cad5f1654d5724ea3',1,'split_embedding_nobag_backward_codegen_rowwise_adagrad_with_counter_unweighted_exact_cuda(const Tensor &amp;grad_output, const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const int64_t D, const Tensor &amp;hash_size_cumsum, const int64_t total_hash_size_bits, const Tensor &amp;indices, const Tensor &amp;offsets, const Tensor &amp;lxu_cache_locations, const int64_t BT_block_size, const int64_t max_segment_length_per_warp, const bool stochastic_rounding, const int64_t info_B_num_bits, const int64_t info_B_mask_int64, const bool use_uniq_cache_locations, const bool use_homogeneous_placements, Tensor momentum1_dev, Tensor momentum1_uvm, Tensor momentum1_placements, Tensor momentum1_offsets, Tensor prev_iter_dev, Tensor prev_iter_uvm, Tensor prev_iter_placements, Tensor prev_iter_offsets, Tensor row_counter_dev, Tensor row_counter_uvm, Tensor row_counter_placements, Tensor row_counter_offsets, double eps=0, double learning_rate=0, double weight_decay=0.0, int64_t iter=0, int64_t counter_halflife=-1, int64_t adjustment_iter=-1, double adjustment_ub=1.0, int64_t learning_rate_mode=-1, int64_t weight_decay_mode=1, int64_t grad_sum_decay=-1, double max_counter=0, double tail_id_threshold=0.0, int64_t is_tail_id_thresh_ratio=0, int64_t regularization_mode=0, double weight_norm_coefficient=0.0, double lower_bound=0.0):&#160;gen_embedding_backward_rowwise_adagrad_with_counter_split_unweighted_nobag_cuda.cu']]],
  ['split_5fembedding_5fnobag_5fbackward_5fcodegen_5frowwise_5fadagrad_5fwith_5fweight_5fdecay_5funweighted_5fexact_5fcuda_102',['split_embedding_nobag_backward_codegen_rowwise_adagrad_with_weight_decay_unweighted_exact_cuda',['../gen__embedding__backward__rowwise__adagrad__with__weight__decay__split__unweighted__nobag__cuda_8cu.html#af25017968213662e5c8c0ab9f5fa7e9a',1,'split_embedding_nobag_backward_codegen_rowwise_adagrad_with_weight_decay_unweighted_exact_cuda(const Tensor &amp;grad_output, const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const int64_t D, const Tensor &amp;hash_size_cumsum, const int64_t total_hash_size_bits, const Tensor &amp;indices, const Tensor &amp;offsets, const Tensor &amp;lxu_cache_locations, const int64_t unused_, const int64_t max_segment_length_per_warp, const bool stochastic_rounding, const int64_t info_B_num_bits, const int64_t info_B_mask_int64, const bool use_uniq_cache_locations, const bool use_homogeneous_placements, Tensor momentum1_dev, Tensor momentum1_uvm, Tensor momentum1_placements, Tensor momentum1_offsets, double eps, double learning_rate, double weight_decay, int64_t weight_decay_mode):&#160;gen_embedding_backward_rowwise_adagrad_with_weight_decay_split_unweighted_nobag_cuda.cu'],['../gen__embedding__backward__split__rowwise__adagrad__with__weight__decay_8cpp.html#a31dd9b41f6ea038416e54092a7fcb594',1,'split_embedding_nobag_backward_codegen_rowwise_adagrad_with_weight_decay_unweighted_exact_cuda(const Tensor &amp;grad_output, const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const int64_t D, const Tensor &amp;hash_size_cumsum, const int64_t total_hash_size_bits, const Tensor &amp;indices, const Tensor &amp;offsets, const Tensor &amp;lxu_cache_locations, const int64_t BT_block_size, const int64_t max_segment_length_per_warp, const bool stochastic_rounding, const int64_t info_B_num_bits, const int64_t info_B_mask_int64, const bool use_uniq_cache_locations, const bool use_homogeneous_placements, Tensor momentum1_dev, Tensor momentum1_uvm, Tensor momentum1_placements, Tensor momentum1_offsets, double eps=0, double learning_rate=0, double weight_decay=0.0, int64_t weight_decay_mode=0):&#160;gen_embedding_backward_rowwise_adagrad_with_weight_decay_split_unweighted_nobag_cuda.cu']]],
  ['split_5fembedding_5fnobag_5fbackward_5fcodegen_5frowwise_5fweighted_5fadagrad_5funweighted_5fexact_5fcuda_103',['split_embedding_nobag_backward_codegen_rowwise_weighted_adagrad_unweighted_exact_cuda',['../gen__embedding__backward__rowwise__weighted__adagrad__split__unweighted__nobag__cuda_8cu.html#a42435ea3b63f42213a2c24d4aadc84f6',1,'split_embedding_nobag_backward_codegen_rowwise_weighted_adagrad_unweighted_exact_cuda(const Tensor &amp;grad_output, const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const int64_t D, const Tensor &amp;hash_size_cumsum, const int64_t total_hash_size_bits, const Tensor &amp;indices, const Tensor &amp;offsets, const Tensor &amp;lxu_cache_locations, const int64_t unused_, const int64_t max_segment_length_per_warp, const bool stochastic_rounding, const int64_t info_B_num_bits, const int64_t info_B_mask_int64, const bool use_uniq_cache_locations, const bool use_homogeneous_placements, Tensor momentum1_dev, Tensor momentum1_uvm, Tensor momentum1_placements, Tensor momentum1_offsets, double eps, double learning_rate, double weight_decay, int64_t iter):&#160;gen_embedding_backward_rowwise_weighted_adagrad_split_unweighted_nobag_cuda.cu'],['../gen__embedding__backward__split__rowwise__weighted__adagrad_8cpp.html#aaf57ee3cb4514d7ccec1c0f5bd653ed3',1,'split_embedding_nobag_backward_codegen_rowwise_weighted_adagrad_unweighted_exact_cuda(const Tensor &amp;grad_output, const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const int64_t D, const Tensor &amp;hash_size_cumsum, const int64_t total_hash_size_bits, const Tensor &amp;indices, const Tensor &amp;offsets, const Tensor &amp;lxu_cache_locations, const int64_t BT_block_size, const int64_t max_segment_length_per_warp, const bool stochastic_rounding, const int64_t info_B_num_bits, const int64_t info_B_mask_int64, const bool use_uniq_cache_locations, const bool use_homogeneous_placements, Tensor momentum1_dev, Tensor momentum1_uvm, Tensor momentum1_placements, Tensor momentum1_offsets, double eps=0, double learning_rate=0, double weight_decay=0, int64_t iter=0):&#160;gen_embedding_backward_rowwise_weighted_adagrad_split_unweighted_nobag_cuda.cu']]],
  ['split_5fembedding_5fnobag_5fbackward_5fcodegen_5fsgd_5funweighted_5fexact_5fcuda_104',['split_embedding_nobag_backward_codegen_sgd_unweighted_exact_cuda',['../gen__embedding__backward__sgd__split__unweighted__nobag__cuda_8cu.html#a2260d3e46945437faae7a44fe015bf7c',1,'split_embedding_nobag_backward_codegen_sgd_unweighted_exact_cuda(const Tensor &amp;grad_output, const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const int64_t D, const Tensor &amp;hash_size_cumsum, const int64_t total_hash_size_bits, const Tensor &amp;indices, const Tensor &amp;offsets, const Tensor &amp;lxu_cache_locations, const int64_t unused_, const int64_t max_segment_length_per_warp, const bool stochastic_rounding, const int64_t info_B_num_bits, const int64_t info_B_mask_int64, const bool use_uniq_cache_locations, const bool use_homogeneous_placements, double learning_rate):&#160;gen_embedding_backward_sgd_split_unweighted_nobag_cuda.cu'],['../gen__embedding__backward__split__sgd_8cpp.html#ad92e69305915e46befca51e7288b428b',1,'split_embedding_nobag_backward_codegen_sgd_unweighted_exact_cuda(const Tensor &amp;grad_output, const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const int64_t D, const Tensor &amp;hash_size_cumsum, const int64_t total_hash_size_bits, const Tensor &amp;indices, const Tensor &amp;offsets, const Tensor &amp;lxu_cache_locations, const int64_t BT_block_size, const int64_t max_segment_length_per_warp, const bool stochastic_rounding, const int64_t info_B_num_bits, const int64_t info_B_mask_int64, const bool use_uniq_cache_locations, const bool use_homogeneous_placements, double learning_rate=0):&#160;gen_embedding_backward_sgd_split_unweighted_nobag_cuda.cu']]],
  ['split_5fembedding_5fnobag_5fcodegen_5fforward_5funweighted_5fcuda_105',['split_embedding_nobag_codegen_forward_unweighted_cuda',['../gen__embedding__backward__split__adagrad_8cpp.html#a3047d316049ed936c49aa57980aad20b',1,'split_embedding_nobag_codegen_forward_unweighted_cuda(const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const int64_t D, const Tensor &amp;indices, const Tensor &amp;offsets, const Tensor &amp;lxu_cache_locations, const Tensor &amp;uvm_cache_stats, const int64_t output_dtype, const bool is_experimental):&#160;gen_embedding_forward_split_unweighted_codegen_cuda.cu'],['../gen__embedding__backward__split__adam_8cpp.html#a3047d316049ed936c49aa57980aad20b',1,'split_embedding_nobag_codegen_forward_unweighted_cuda(const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const int64_t D, const Tensor &amp;indices, const Tensor &amp;offsets, const Tensor &amp;lxu_cache_locations, const Tensor &amp;uvm_cache_stats, const int64_t output_dtype, const bool is_experimental):&#160;gen_embedding_forward_split_unweighted_codegen_cuda.cu'],['../gen__embedding__backward__split__approx__rowwise__adagrad__with__weight__decay_8cpp.html#a3047d316049ed936c49aa57980aad20b',1,'split_embedding_nobag_codegen_forward_unweighted_cuda(const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const int64_t D, const Tensor &amp;indices, const Tensor &amp;offsets, const Tensor &amp;lxu_cache_locations, const Tensor &amp;uvm_cache_stats, const int64_t output_dtype, const bool is_experimental):&#160;gen_embedding_forward_split_unweighted_codegen_cuda.cu'],['../gen__embedding__backward__split__lamb_8cpp.html#a3047d316049ed936c49aa57980aad20b',1,'split_embedding_nobag_codegen_forward_unweighted_cuda(const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const int64_t D, const Tensor &amp;indices, const Tensor &amp;offsets, const Tensor &amp;lxu_cache_locations, const Tensor &amp;uvm_cache_stats, const int64_t output_dtype, const bool is_experimental):&#160;gen_embedding_forward_split_unweighted_codegen_cuda.cu'],['../gen__embedding__backward__split__lars__sgd_8cpp.html#a3047d316049ed936c49aa57980aad20b',1,'split_embedding_nobag_codegen_forward_unweighted_cuda(const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const int64_t D, const Tensor &amp;indices, const Tensor &amp;offsets, const Tensor &amp;lxu_cache_locations, const Tensor &amp;uvm_cache_stats, const int64_t output_dtype, const bool is_experimental):&#160;gen_embedding_forward_split_unweighted_codegen_cuda.cu'],['../gen__embedding__backward__split__none_8cpp.html#a3047d316049ed936c49aa57980aad20b',1,'split_embedding_nobag_codegen_forward_unweighted_cuda(const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const int64_t D, const Tensor &amp;indices, const Tensor &amp;offsets, const Tensor &amp;lxu_cache_locations, const Tensor &amp;uvm_cache_stats, const int64_t output_dtype, const bool is_experimental):&#160;gen_embedding_forward_split_unweighted_codegen_cuda.cu'],['../gen__embedding__backward__split__partial__rowwise__adam_8cpp.html#a3047d316049ed936c49aa57980aad20b',1,'split_embedding_nobag_codegen_forward_unweighted_cuda(const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const int64_t D, const Tensor &amp;indices, const Tensor &amp;offsets, const Tensor &amp;lxu_cache_locations, const Tensor &amp;uvm_cache_stats, const int64_t output_dtype, const bool is_experimental):&#160;gen_embedding_forward_split_unweighted_codegen_cuda.cu'],['../gen__embedding__backward__split__partial__rowwise__lamb_8cpp.html#a3047d316049ed936c49aa57980aad20b',1,'split_embedding_nobag_codegen_forward_unweighted_cuda(const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const int64_t D, const Tensor &amp;indices, const Tensor &amp;offsets, const Tensor &amp;lxu_cache_locations, const Tensor &amp;uvm_cache_stats, const int64_t output_dtype, const bool is_experimental):&#160;gen_embedding_forward_split_unweighted_codegen_cuda.cu'],['../gen__embedding__backward__split__rowwise__adagrad_8cpp.html#a3047d316049ed936c49aa57980aad20b',1,'split_embedding_nobag_codegen_forward_unweighted_cuda(const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const int64_t D, const Tensor &amp;indices, const Tensor &amp;offsets, const Tensor &amp;lxu_cache_locations, const Tensor &amp;uvm_cache_stats, const int64_t output_dtype, const bool is_experimental):&#160;gen_embedding_forward_split_unweighted_codegen_cuda.cu'],['../gen__embedding__backward__split__rowwise__adagrad__with__counter_8cpp.html#a3047d316049ed936c49aa57980aad20b',1,'split_embedding_nobag_codegen_forward_unweighted_cuda(const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const int64_t D, const Tensor &amp;indices, const Tensor &amp;offsets, const Tensor &amp;lxu_cache_locations, const Tensor &amp;uvm_cache_stats, const int64_t output_dtype, const bool is_experimental):&#160;gen_embedding_forward_split_unweighted_codegen_cuda.cu'],['../gen__embedding__backward__split__rowwise__adagrad__with__weight__decay_8cpp.html#a3047d316049ed936c49aa57980aad20b',1,'split_embedding_nobag_codegen_forward_unweighted_cuda(const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const int64_t D, const Tensor &amp;indices, const Tensor &amp;offsets, const Tensor &amp;lxu_cache_locations, const Tensor &amp;uvm_cache_stats, const int64_t output_dtype, const bool is_experimental):&#160;gen_embedding_forward_split_unweighted_codegen_cuda.cu'],['../gen__embedding__backward__split__rowwise__weighted__adagrad_8cpp.html#a3047d316049ed936c49aa57980aad20b',1,'split_embedding_nobag_codegen_forward_unweighted_cuda(const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const int64_t D, const Tensor &amp;indices, const Tensor &amp;offsets, const Tensor &amp;lxu_cache_locations, const Tensor &amp;uvm_cache_stats, const int64_t output_dtype, const bool is_experimental):&#160;gen_embedding_forward_split_unweighted_codegen_cuda.cu'],['../gen__embedding__backward__split__sgd_8cpp.html#a3047d316049ed936c49aa57980aad20b',1,'split_embedding_nobag_codegen_forward_unweighted_cuda(const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const int64_t D, const Tensor &amp;indices, const Tensor &amp;offsets, const Tensor &amp;lxu_cache_locations, const Tensor &amp;uvm_cache_stats, const int64_t output_dtype, const bool is_experimental):&#160;gen_embedding_forward_split_unweighted_codegen_cuda.cu'],['../gen__embedding__forward__split__unweighted__codegen__cuda_8cu.html#a3047d316049ed936c49aa57980aad20b',1,'split_embedding_nobag_codegen_forward_unweighted_cuda(const Tensor &amp;dev_weights, const Tensor &amp;uvm_weights, const Tensor &amp;lxu_cache_weights, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const int64_t D, const Tensor &amp;indices, const Tensor &amp;offsets, const Tensor &amp;lxu_cache_locations, const Tensor &amp;uvm_cache_stats, const int64_t output_dtype, const bool is_experimental):&#160;gen_embedding_forward_split_unweighted_codegen_cuda.cu']]],
  ['split_5fembedding_5fnobag_5fcodegen_5fforward_5funweighted_5fmeta_106',['split_embedding_nobag_codegen_forward_unweighted_meta',['../gen__embedding__forward__split__unweighted__codegen__meta_8cpp.html#a4329c1ce40a29f321d37d58bfb628cfd',1,'gen_embedding_forward_split_unweighted_codegen_meta.cpp']]],
  ['split_5fembedding_5frowwise_5fadagrad_5fupdate_107',['split_embedding_rowwise_adagrad_update',['../gen__embedding__optimizer__rowwise__adagrad__split_8cpp.html#a21a7b48ff9760f1aa13e260de4b7d2a9',1,'split_embedding_rowwise_adagrad_update(Tensor &amp;dev_weights, Tensor &amp;uvm_weights, Tensor &amp;lxu_cache_weights, const Tensor &amp;grad_dev_weights, const Tensor &amp;grad_dev_indices, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const int64_t max_D, const bool stochastic_rounding, Tensor momentum1_dev, Tensor momentum1_uvm, Tensor momentum1_placements, Tensor momentum1_offsets, double eps=0, double learning_rate=0, double weight_decay=0.0, int64_t weight_decay_mode=0, double max_norm=0.0):&#160;gen_embedding_optimizer_rowwise_adagrad_split.cpp'],['../gen__embedding__optimizer__rowwise__adagrad__split__cuda_8cu.html#ab369ffc9f9e69eca82b24131247ecfcf',1,'split_embedding_rowwise_adagrad_update(Tensor &amp;dev_weights, Tensor &amp;uvm_weights, Tensor &amp;lxu_cache_weights, const Tensor &amp;grad_dev_weights, const Tensor &amp;grad_dev_indices, const Tensor &amp;weights_placements, const Tensor &amp;weights_offsets, const int64_t max_D, const bool stochastic_rounding, Tensor momentum1_dev, Tensor momentum1_uvm, Tensor momentum1_placements, Tensor momentum1_offsets, double eps=0, double learning_rate=0, double weight_decay=0.0, int64_t weight_decay_mode=0, double max_norm=0.0):&#160;gen_embedding_optimizer_rowwise_adagrad_split_cuda.cu']]],
  ['split_5flamb_5ftable_5fupdate_5fkernel_108',['split_lamb_table_update_kernel',['../gen__embedding__optimizer__lamb__split__device__kernel_8cuh.html#a2952f72a1e3f88f38246d2954dbee2b1',1,'gen_embedding_optimizer_lamb_split_device_kernel.cuh']]],
  ['split_5flars_5fsgd_5ftable_5fupdate_5fkernel_109',['split_lars_sgd_table_update_kernel',['../gen__embedding__optimizer__lars__sgd__split__device__kernel_8cuh.html#af488b727a53946064f329ad042bbf73a',1,'gen_embedding_optimizer_lars_sgd_split_device_kernel.cuh']]],
  ['split_5fnone_5ftable_5fupdate_5fkernel_110',['split_none_table_update_kernel',['../gen__embedding__optimizer__none__split__device__kernel_8cuh.html#a2cb53295ff111df7a98fbc7573469c61',1,'gen_embedding_optimizer_none_split_device_kernel.cuh']]],
  ['split_5fpartial_5frowwise_5fadam_5ftable_5fupdate_5fkernel_111',['split_partial_rowwise_adam_table_update_kernel',['../gen__embedding__optimizer__partial__rowwise__adam__split__device__kernel_8cuh.html#a278aedfb9f50b7f5486dbc97e87cab8e',1,'gen_embedding_optimizer_partial_rowwise_adam_split_device_kernel.cuh']]],
  ['split_5fpartial_5frowwise_5flamb_5ftable_5fupdate_5fkernel_112',['split_partial_rowwise_lamb_table_update_kernel',['../gen__embedding__optimizer__partial__rowwise__lamb__split__device__kernel_8cuh.html#a950ea306504584d6cc2050caf007295c',1,'gen_embedding_optimizer_partial_rowwise_lamb_split_device_kernel.cuh']]],
  ['split_5frowwise_5fadagrad_5ftable_5fupdate_5fkernel_113',['split_rowwise_adagrad_table_update_kernel',['../gen__embedding__optimizer__rowwise__adagrad__split__device__kernel_8cuh.html#aab5a925ed0316c38c00fcce3b1adc50a',1,'gen_embedding_optimizer_rowwise_adagrad_split_device_kernel.cuh']]],
  ['split_5frowwise_5fadagrad_5fwith_5fcounter_5ftable_5fupdate_5fkernel_114',['split_rowwise_adagrad_with_counter_table_update_kernel',['../gen__embedding__optimizer__rowwise__adagrad__with__counter__split__device__kernel_8cuh.html#aa7708111891a0d2eeeda7881715427bb',1,'gen_embedding_optimizer_rowwise_adagrad_with_counter_split_device_kernel.cuh']]],
  ['split_5frowwise_5fadagrad_5fwith_5fweight_5fdecay_5ftable_5fupdate_5fkernel_115',['split_rowwise_adagrad_with_weight_decay_table_update_kernel',['../gen__embedding__optimizer__rowwise__adagrad__with__weight__decay__split__device__kernel_8cuh.html#ae265a93446a3c4665e857bc8b2f7d8d7',1,'gen_embedding_optimizer_rowwise_adagrad_with_weight_decay_split_device_kernel.cuh']]],
  ['split_5frowwise_5fweighted_5fadagrad_5ftable_5fupdate_5fkernel_116',['split_rowwise_weighted_adagrad_table_update_kernel',['../gen__embedding__optimizer__rowwise__weighted__adagrad__split__device__kernel_8cuh.html#a54b1af3a7b8db5fce48d934e47656c50',1,'gen_embedding_optimizer_rowwise_weighted_adagrad_split_device_kernel.cuh']]],
  ['split_5fsgd_5ftable_5fupdate_5fkernel_117',['split_sgd_table_update_kernel',['../gen__embedding__optimizer__sgd__split__device__kernel_8cuh.html#ab768e225fdd76b64ab5c9114ed3cc7cc',1,'gen_embedding_optimizer_sgd_split_device_kernel.cuh']]],
  ['splitmix64_5fstateless_118',['splitmix64_stateless',['../namespacefbgemm__gpu.html#aa5ada0472a8306dea17df0d7d1d42abc',1,'fbgemm_gpu']]],
  ['ssd_5fcache_5fpopulate_5factions_5fcuda_119',['ssd_cache_populate_actions_cuda',['../ssd__split__embeddings__cache__cuda_8cu.html#a872136033719ff00d6b05e94e4b1cbab',1,'ssd_cache_populate_actions_cuda(Tensor linear_indices, int64_t total_hash_size, Tensor lxu_cache_state, int64_t time_stamp, int64_t prefetch_dist, Tensor lru_state):&#160;ssd_split_embeddings_cache_cuda.cu'],['../ssd__split__table__batched__embeddings_8cpp.html#a872136033719ff00d6b05e94e4b1cbab',1,'ssd_cache_populate_actions_cuda(Tensor linear_indices, int64_t total_hash_size, Tensor lxu_cache_state, int64_t time_stamp, int64_t prefetch_dist, Tensor lru_state):&#160;ssd_split_embeddings_cache_cuda.cu']]],
  ['stacked_5fjagged_5f1d_5fto_5fdense_5fcpu_120',['stacked_jagged_1d_to_dense_cpu',['../namespacefbgemm__gpu.html#a6ac9f6d81bff1b8572a380dbe1af00fb',1,'fbgemm_gpu']]],
  ['stacked_5fjagged_5f1d_5fto_5fdense_5fgpu_121',['stacked_jagged_1d_to_dense_gpu',['../namespacefbgemm__gpu.html#adf7f39b1a3dd7c2797fd11e740d6269f',1,'fbgemm_gpu']]],
  ['stacked_5fjagged_5f2d_5fto_5fdense_5fbackward_5fcuda_122',['stacked_jagged_2d_to_dense_backward_cuda',['../namespacefbgemm__gpu.html#a442efbf57b46780a07ac4759ac1866ee',1,'fbgemm_gpu']]],
  ['stacked_5fjagged_5f2d_5fto_5fdense_5fcpu_123',['stacked_jagged_2d_to_dense_cpu',['../namespacefbgemm__gpu.html#ab45e5e415a8929cbd0021eae37e1d881',1,'fbgemm_gpu']]],
  ['stacked_5fjagged_5f2d_5fto_5fdense_5fforward_5fcuda_124',['stacked_jagged_2d_to_dense_forward_cuda',['../namespacefbgemm__gpu.html#a5de1d5c177df840f2fa7ab0cdda2aa02',1,'fbgemm_gpu']]],
  ['stacked_5fjagged_5f2d_5fto_5fdense_5fgpu_125',['stacked_jagged_2d_to_dense_gpu',['../namespacefbgemm__gpu.html#aaac575e676d094aba1367e9eaf3489bc',1,'fbgemm_gpu']]],
  ['stochastic_5frounding_5finit_126',['stochastic_rounding_init',['../namespacefbgemm__gpu.html#afe523b46c92c9009410f173e4ac434db',1,'fbgemm_gpu']]],
  ['stochastic_5frounding_5frand4_127',['stochastic_rounding_rand4',['../namespacefbgemm__gpu.html#af0b19e6751891f43372768335cc3c468',1,'fbgemm_gpu']]],
  ['stochastic_5frounding_5fvector_128',['stochastic_rounding_vector',['../namespacefbgemm__gpu.html#aec7be9515265c4db67d205f8a3a39822',1,'fbgemm_gpu::stochastic_rounding_vector(dst_t *output, const Vec4T&lt; src_t &gt; &amp;value, StochasticRoundingRNGState &amp;state, const float2)'],['../namespacefbgemm__gpu.html#a06c37bb32cb18b8846cf689db8ed94fb',1,'fbgemm_gpu::stochastic_rounding_vector(at::Half *output, const Vec4T&lt; at::Half &gt; &amp;value, StochasticRoundingRNGState &amp;state, const float2)'],['../namespacefbgemm__gpu.html#a7d41dbbfc3106c8fd5ff37cefbffbc38',1,'fbgemm_gpu::stochastic_rounding_vector(at::Half *output, const Vec4T&lt; float &gt; &amp;value, StochasticRoundingRNGState &amp;state, const float2)'],['../namespacefbgemm__gpu.html#a3313b5c0af7bd07d6e47253a24a27ce7',1,'fbgemm_gpu::stochastic_rounding_vector(uint8_t *output, const Vec4T&lt; float &gt; &amp;value, StochasticRoundingRNGState &amp;state, const float2 qparams)'],['../namespacefbgemm__gpu.html#a44ed26caaddd852d96ee453ea6cc2e07',1,'fbgemm_gpu::stochastic_rounding_vector(uint8_t *output, const Vec4T&lt; at::Half &gt; &amp;value, StochasticRoundingRNGState &amp;state, const float2 qparams)']]],
  ['store_129',['store',['../structfbgemm__gpu_1_1_half4.html#a89967f417dba84846fa95a0f010d8922',1,'fbgemm_gpu::Half4::store()'],['../structfbgemm__gpu_1_1_vec4_t_3_01float_01_4.html#a156eebe566e80706636626c60d2d13b0',1,'fbgemm_gpu::Vec4T&lt; float &gt;::store(float *p) const'],['../structfbgemm__gpu_1_1_vec4_t_3_01float_01_4.html#ab31e8852ca6760cf83d6356c8c448596',1,'fbgemm_gpu::Vec4T&lt; float &gt;::store(float4 *p) const'],['../structfbgemm__gpu_1_1_vec4_t_3_01float_01_4.html#ac1717b1a00b76b3d368982629c5e8287',1,'fbgemm_gpu::Vec4T&lt; float &gt;::store(at::Half *p) const'],['../structfbgemm__gpu_1_1_vec4_t_3_01float_01_4.html#a8513259b78c1bcc3e849beea82b95edd',1,'fbgemm_gpu::Vec4T&lt; float &gt;::store(at::BFloat16 *p) const'],['../structfbgemm__gpu_1_1_vec4_t_3_01float_01_4.html#a42f2f5c890748268ece0df580bbafa44',1,'fbgemm_gpu::Vec4T&lt; float &gt;::store(double *p) const'],['../structfbgemm__gpu_1_1_vec4_t_3_01float_01_4.html#a85854690aa7af9f8006cf54d577d8e77',1,'fbgemm_gpu::Vec4T&lt; float &gt;::store(uint8_t *p) const'],['../structfbgemm__gpu_1_1_vec4_t_3_01at_1_1_half_01_4.html#ac1717b1a00b76b3d368982629c5e8287',1,'fbgemm_gpu::Vec4T&lt; at::Half &gt;::store(at::Half *p) const'],['../structfbgemm__gpu_1_1_vec4_t_3_01at_1_1_half_01_4.html#a8513259b78c1bcc3e849beea82b95edd',1,'fbgemm_gpu::Vec4T&lt; at::Half &gt;::store(at::BFloat16 *p) const'],['../structfbgemm__gpu_1_1_vec4_t_3_01at_1_1_half_01_4.html#a156eebe566e80706636626c60d2d13b0',1,'fbgemm_gpu::Vec4T&lt; at::Half &gt;::store(float *p) const'],['../structfbgemm__gpu_1_1_vec4_t_3_01at_1_1_half_01_4.html#a42f2f5c890748268ece0df580bbafa44',1,'fbgemm_gpu::Vec4T&lt; at::Half &gt;::store(double *p) const'],['../structfbgemm__gpu_1_1_vec4_t_3_01at_1_1_half_01_4.html#a85854690aa7af9f8006cf54d577d8e77',1,'fbgemm_gpu::Vec4T&lt; at::Half &gt;::store(uint8_t *p) const'],['../structfbgemm__gpu_1_1_vec4_t_3_01at_1_1_b_float16_01_4.html#ac1717b1a00b76b3d368982629c5e8287',1,'fbgemm_gpu::Vec4T&lt; at::BFloat16 &gt;::store(at::Half *p) const'],['../structfbgemm__gpu_1_1_vec4_t_3_01at_1_1_b_float16_01_4.html#a8513259b78c1bcc3e849beea82b95edd',1,'fbgemm_gpu::Vec4T&lt; at::BFloat16 &gt;::store(at::BFloat16 *p) const'],['../structfbgemm__gpu_1_1_vec4_t_3_01at_1_1_b_float16_01_4.html#a156eebe566e80706636626c60d2d13b0',1,'fbgemm_gpu::Vec4T&lt; at::BFloat16 &gt;::store(float *p) const'],['../structfbgemm__gpu_1_1_vec4_t_3_01at_1_1_b_float16_01_4.html#a42f2f5c890748268ece0df580bbafa44',1,'fbgemm_gpu::Vec4T&lt; at::BFloat16 &gt;::store(double *p) const'],['../structfbgemm__gpu_1_1_vec4_t_3_01at_1_1_b_float16_01_4.html#a85854690aa7af9f8006cf54d577d8e77',1,'fbgemm_gpu::Vec4T&lt; at::BFloat16 &gt;::store(uint8_t *p) const'],['../structfbgemm__gpu_1_1_vec4_t_3_01double_01_4.html#a42f2f5c890748268ece0df580bbafa44',1,'fbgemm_gpu::Vec4T&lt; double &gt;::store(double *p) const'],['../structfbgemm__gpu_1_1_vec4_t_3_01double_01_4.html#a156eebe566e80706636626c60d2d13b0',1,'fbgemm_gpu::Vec4T&lt; double &gt;::store(float *p) const'],['../structfbgemm__gpu_1_1_vec4_t_3_01double_01_4.html#ac1717b1a00b76b3d368982629c5e8287',1,'fbgemm_gpu::Vec4T&lt; double &gt;::store(at::Half *p) const'],['../structfbgemm__gpu_1_1_vec4_t_3_01double_01_4.html#a8513259b78c1bcc3e849beea82b95edd',1,'fbgemm_gpu::Vec4T&lt; double &gt;::store(at::BFloat16 *p) const'],['../structfbgemm__gpu_1_1_weight_row.html#a2118cba7a45acc1a3d8ea5781badbbe9',1,'fbgemm_gpu::WeightRow::store()'],['../structfbgemm__gpu_1_1_vec_n_t_3_011_00_01_primitive_type_1_1_f_p_01_4.html#a8191536a88223b7249cae8a8cfa97979',1,'fbgemm_gpu::VecNT&lt; 1, PrimitiveType::FP &gt;::store(float *output_ptr, int num_valid_outputs=1)'],['../structfbgemm__gpu_1_1_vec_n_t_3_011_00_01_primitive_type_1_1_f_p_01_4.html#ab9651b6b0e85a41131aa086c367d68bd',1,'fbgemm_gpu::VecNT&lt; 1, PrimitiveType::FP &gt;::store(at::Half *output_ptr, int num_valid_outputs=1)'],['../structfbgemm__gpu_1_1_vec_n_t_3_011_00_01_primitive_type_1_1_f_p_01_4.html#a0624585ab8592b64edef7a6730938cb9',1,'fbgemm_gpu::VecNT&lt; 1, PrimitiveType::FP &gt;::store(at::BFloat16 *output_ptr, const int num_valid_outputs=1)'],['../structfbgemm__gpu_1_1_vec_n_t_3_011_00_01_primitive_type_1_1_f_p_01_4.html#a5ba7b1dad5adec8ae5dc9e4adfe58c38',1,'fbgemm_gpu::VecNT&lt; 1, PrimitiveType::FP &gt;::store(uint8_t *output_ptr, int num_valid_outputs=1)'],['../structfbgemm__gpu_1_1_vec_n_t_3_011_00_01_primitive_type_1_1_f_p_01_4.html#ab208ce429674113143ee02d6b9e8a9be',1,'fbgemm_gpu::VecNT&lt; 1, PrimitiveType::FP &gt;::store(uint8_t *output_ptr, float2 qparams, int num_valid_outputs=1)'],['../structfbgemm__gpu_1_1_vec_n_t_3_011_00_01_primitive_type_1_1_f_p_01_4.html#ac87524a86f8aa165742c6b793f8fe6aa',1,'fbgemm_gpu::VecNT&lt; 1, PrimitiveType::FP &gt;::store(float *output_ptr, float2 qparams, int num_valid_outputs=1)'],['../structfbgemm__gpu_1_1_vec_n_t_3_011_00_01_primitive_type_1_1_f_p_01_4.html#a26ce31b610926ff405b67dc540ff3d95',1,'fbgemm_gpu::VecNT&lt; 1, PrimitiveType::FP &gt;::store(at::Half *output_ptr, float2 qparams, int num_valid_outputs=1)'],['../structfbgemm__gpu_1_1_vec_n_t_3_011_00_01_primitive_type_1_1_f_p_01_4.html#a392a5b352be9af9ba86e0cd396e6316a',1,'fbgemm_gpu::VecNT&lt; 1, PrimitiveType::FP &gt;::store(at::BFloat16 *output_ptr, float2 qparams, int num_valid_outputs=1)'],['../structfbgemm__gpu_1_1_vec_n_t_3_012_00_01_primitive_type_1_1_f_p_01_4.html#a4699624d6b086fa52d88ce1960dc7297',1,'fbgemm_gpu::VecNT&lt; 2, PrimitiveType::FP &gt;::store(float *output_ptr, int num_valid_outputs=2)'],['../structfbgemm__gpu_1_1_vec_n_t_3_012_00_01_primitive_type_1_1_f_p_01_4.html#a1f0743afcc39c1afeeee6cd9bcdddc35',1,'fbgemm_gpu::VecNT&lt; 2, PrimitiveType::FP &gt;::store(at::Half *output_ptr, int num_valid_outputs=2)'],['../structfbgemm__gpu_1_1_vec_n_t_3_012_00_01_primitive_type_1_1_f_p_01_4.html#a2c56bff3020a6b803a8310a13b61cfbe',1,'fbgemm_gpu::VecNT&lt; 2, PrimitiveType::FP &gt;::store(at::BFloat16 *output_ptr, const int num_valid_outputs=2)'],['../structfbgemm__gpu_1_1_vec_n_t_3_012_00_01_primitive_type_1_1_f_p_01_4.html#ac4e67ed3ba860166333a7805b101490d',1,'fbgemm_gpu::VecNT&lt; 2, PrimitiveType::FP &gt;::store(uint8_t *output_ptr, int num_valid_outputs=2)'],['../structfbgemm__gpu_1_1_vec_n_t_3_012_00_01_primitive_type_1_1_f_p_01_4.html#a0c562343c84b60da0e5f11ee16e593f2',1,'fbgemm_gpu::VecNT&lt; 2, PrimitiveType::FP &gt;::store(uint8_t *output_ptr, float2 qparams, int num_valid_outputs=2)'],['../structfbgemm__gpu_1_1_vec_n_t_3_012_00_01_primitive_type_1_1_f_p_01_4.html#a68c214376e86167cbe59755a1caf99a5',1,'fbgemm_gpu::VecNT&lt; 2, PrimitiveType::FP &gt;::store(float *output_ptr, float2 qparams, int num_valid_outputs=2)'],['../structfbgemm__gpu_1_1_vec_n_t_3_012_00_01_primitive_type_1_1_f_p_01_4.html#a9e2e827bb7e7c608f3acd3953a39e720',1,'fbgemm_gpu::VecNT&lt; 2, PrimitiveType::FP &gt;::store(at::Half *output_ptr, float2 qparams, int num_valid_outputs=2)'],['../structfbgemm__gpu_1_1_vec_n_t_3_012_00_01_primitive_type_1_1_f_p_01_4.html#a32f2acc26afe1a9cf7d5152567bbd15d',1,'fbgemm_gpu::VecNT&lt; 2, PrimitiveType::FP &gt;::store(at::BFloat16 *output_ptr, float2 qparams, int num_valid_outputs=2)'],['../structfbgemm__gpu_1_1_vec_n_t_3_014_00_01_primitive_type_1_1_f_p_01_4.html#a75cd31fa56a77c83611b64ddd370a562',1,'fbgemm_gpu::VecNT&lt; 4, PrimitiveType::FP &gt;::store(float *output_ptr, int num_valid_outputs=4)'],['../structfbgemm__gpu_1_1_vec_n_t_3_014_00_01_primitive_type_1_1_f_p_01_4.html#a81504bf4294b938a3efc8d00acda3b5f',1,'fbgemm_gpu::VecNT&lt; 4, PrimitiveType::FP &gt;::store(at::Half *output_ptr, int num_valid_outputs=4)'],['../structfbgemm__gpu_1_1_vec_n_t_3_014_00_01_primitive_type_1_1_f_p_01_4.html#a03b4a86f4326d9c24fec2b4dc63439cd',1,'fbgemm_gpu::VecNT&lt; 4, PrimitiveType::FP &gt;::store(at::BFloat16 *output_ptr, const int num_valid_outputs=4)'],['../structfbgemm__gpu_1_1_vec_n_t_3_014_00_01_primitive_type_1_1_f_p_01_4.html#ad15c2605b8d982986100c89caa7c0401',1,'fbgemm_gpu::VecNT&lt; 4, PrimitiveType::FP &gt;::store(uint8_t *output_ptr, int num_valid_outputs=4)'],['../structfbgemm__gpu_1_1_vec_n_t_3_014_00_01_primitive_type_1_1_f_p_01_4.html#a786f9130a8df81af5fc3b0706a1a6545',1,'fbgemm_gpu::VecNT&lt; 4, PrimitiveType::FP &gt;::store(uint8_t *output_ptr, float2 qparams, int num_valid_outputs=4)'],['../structfbgemm__gpu_1_1_vec_n_t_3_014_00_01_primitive_type_1_1_f_p_01_4.html#afbc2050eefc2350fd0f84db8dd568d14',1,'fbgemm_gpu::VecNT&lt; 4, PrimitiveType::FP &gt;::store(float *output_ptr, float2 qparams, int num_valid_outputs=4)'],['../structfbgemm__gpu_1_1_vec_n_t_3_014_00_01_primitive_type_1_1_f_p_01_4.html#a12b87408afdd840ed3ae2e1870fa8e2a',1,'fbgemm_gpu::VecNT&lt; 4, PrimitiveType::FP &gt;::store(at::Half *output_ptr, float2 qparams, int num_valid_outputs=4)'],['../structfbgemm__gpu_1_1_vec_n_t_3_014_00_01_primitive_type_1_1_f_p_01_4.html#a6740fe48ec591c6058b8c5019ca0b599',1,'fbgemm_gpu::VecNT&lt; 4, PrimitiveType::FP &gt;::store(at::BFloat16 *output_ptr, float2 qparams, int num_valid_outputs=4)'],['../structfbgemm__gpu_1_1_vec_n_t_3_014_00_01_primitive_type_1_1_i_n_t_01_4.html#a75cd31fa56a77c83611b64ddd370a562',1,'fbgemm_gpu::VecNT&lt; 4, PrimitiveType::INT &gt;::store(float *output_ptr, int num_valid_outputs=4)'],['../structfbgemm__gpu_1_1_vec_n_t_3_014_00_01_primitive_type_1_1_i_n_t_01_4.html#a81504bf4294b938a3efc8d00acda3b5f',1,'fbgemm_gpu::VecNT&lt; 4, PrimitiveType::INT &gt;::store(at::Half *output_ptr, int num_valid_outputs=4)'],['../structfbgemm__gpu_1_1_vec_n_t_3_014_00_01_primitive_type_1_1_i_n_t_01_4.html#a03b4a86f4326d9c24fec2b4dc63439cd',1,'fbgemm_gpu::VecNT&lt; 4, PrimitiveType::INT &gt;::store(at::BFloat16 *output_ptr, const int num_valid_outputs=4)'],['../structfbgemm__gpu_1_1_vec_n_t_3_014_00_01_primitive_type_1_1_i_n_t_01_4.html#ad15c2605b8d982986100c89caa7c0401',1,'fbgemm_gpu::VecNT&lt; 4, PrimitiveType::INT &gt;::store(uint8_t *output_ptr, int num_valid_outputs=4)'],['../structfbgemm__gpu_1_1_vec_n_t_3_014_00_01_primitive_type_1_1_i_n_t_01_4.html#a786f9130a8df81af5fc3b0706a1a6545',1,'fbgemm_gpu::VecNT&lt; 4, PrimitiveType::INT &gt;::store(uint8_t *output_ptr, float2 qparams, int num_valid_outputs=4)'],['../structfbgemm__gpu_1_1_vec_n_t_3_014_00_01_primitive_type_1_1_i_n_t_01_4.html#afbc2050eefc2350fd0f84db8dd568d14',1,'fbgemm_gpu::VecNT&lt; 4, PrimitiveType::INT &gt;::store(float *output_ptr, float2 qparams, int num_valid_outputs=4)'],['../structfbgemm__gpu_1_1_vec_n_t_3_014_00_01_primitive_type_1_1_i_n_t_01_4.html#a12b87408afdd840ed3ae2e1870fa8e2a',1,'fbgemm_gpu::VecNT&lt; 4, PrimitiveType::INT &gt;::store(at::Half *output_ptr, float2 qparams, int num_valid_outputs=4)'],['../structfbgemm__gpu_1_1_vec_n_t_3_014_00_01_primitive_type_1_1_i_n_t_01_4.html#a6740fe48ec591c6058b8c5019ca0b599',1,'fbgemm_gpu::VecNT&lt; 4, PrimitiveType::INT &gt;::store(at::BFloat16 *output_ptr, float2 qparams, int num_valid_outputs=4)'],['../structfbgemm__gpu_1_1_vec_n_t_3_018_00_01_primitive_type_1_1_i_n_t_01_4.html#acf9a6b5f9ac186a75bd50800993e7241',1,'fbgemm_gpu::VecNT&lt; 8, PrimitiveType::INT &gt;::store(float *output_ptr, int num_valid_outputs=8)'],['../structfbgemm__gpu_1_1_vec_n_t_3_018_00_01_primitive_type_1_1_i_n_t_01_4.html#aa231a6e5c1ad91305125e2ba8c6cf773',1,'fbgemm_gpu::VecNT&lt; 8, PrimitiveType::INT &gt;::store(at::Half *output_ptr, int num_valid_outputs=8)'],['../structfbgemm__gpu_1_1_vec_n_t_3_018_00_01_primitive_type_1_1_i_n_t_01_4.html#aa2d60424caff50f6d80adfcd1ab5ba3f',1,'fbgemm_gpu::VecNT&lt; 8, PrimitiveType::INT &gt;::store(at::BFloat16 *output_ptr, const int num_valid_outputs=8)'],['../structfbgemm__gpu_1_1_vec_n_t_3_018_00_01_primitive_type_1_1_i_n_t_01_4.html#a5881b8e1b9ca2c81640bad8e6d0a455a',1,'fbgemm_gpu::VecNT&lt; 8, PrimitiveType::INT &gt;::store(uint8_t *output_ptr, int num_valid_outputs=8)'],['../structfbgemm__gpu_1_1_vec_n_t_3_018_00_01_primitive_type_1_1_i_n_t_01_4.html#aa7c2038d0448a12c5edd87eb31f8b828',1,'fbgemm_gpu::VecNT&lt; 8, PrimitiveType::INT &gt;::store(uint8_t *output_ptr, float2 qparams, int num_valid_outputs=8)'],['../structfbgemm__gpu_1_1_vec_n_t_3_018_00_01_primitive_type_1_1_i_n_t_01_4.html#abfaf6f8618474ccb25d58d723792421d',1,'fbgemm_gpu::VecNT&lt; 8, PrimitiveType::INT &gt;::store(float *output_ptr, float2 qparams, int num_valid_outputs=8)'],['../structfbgemm__gpu_1_1_vec_n_t_3_018_00_01_primitive_type_1_1_i_n_t_01_4.html#aad5d604b72b0f656dbeb5e313ebf63af',1,'fbgemm_gpu::VecNT&lt; 8, PrimitiveType::INT &gt;::store(at::Half *output_ptr, float2 qparams, int num_valid_outputs=8)'],['../structfbgemm__gpu_1_1_vec_n_t_3_018_00_01_primitive_type_1_1_i_n_t_01_4.html#a6dfa84a3eb11e20e68d8d3b401c7d2cf',1,'fbgemm_gpu::VecNT&lt; 8, PrimitiveType::INT &gt;::store(at::BFloat16 *output_ptr, float2 qparams, int num_valid_outputs=8)'],['../structfbgemm__gpu_1_1_vec_n_t_3_0116_00_01_primitive_type_1_1_i_n_t_01_4.html#a82b07f279fccc086af2208ca7d6d1a3a',1,'fbgemm_gpu::VecNT&lt; 16, PrimitiveType::INT &gt;::store(float *output_ptr, int num_valid_outputs=16)'],['../structfbgemm__gpu_1_1_vec_n_t_3_0116_00_01_primitive_type_1_1_i_n_t_01_4.html#a1f25b384b68cdb93ddd010a86f661460',1,'fbgemm_gpu::VecNT&lt; 16, PrimitiveType::INT &gt;::store(at::Half *output_ptr, int num_valid_outputs=16)'],['../structfbgemm__gpu_1_1_vec_n_t_3_0116_00_01_primitive_type_1_1_i_n_t_01_4.html#aa9b6e7a0e81a3a3d049e7c632fec2ad7',1,'fbgemm_gpu::VecNT&lt; 16, PrimitiveType::INT &gt;::store(at::BFloat16 *output_ptr, const int num_valid_outputs=16)'],['../structfbgemm__gpu_1_1_vec_n_t_3_0116_00_01_primitive_type_1_1_i_n_t_01_4.html#a0d5c2181816bdbb6e5e4998b3fbba721',1,'fbgemm_gpu::VecNT&lt; 16, PrimitiveType::INT &gt;::store(uint8_t *output_ptr, int num_valid_outputs=16)'],['../structfbgemm__gpu_1_1_vec_n_t_3_0116_00_01_primitive_type_1_1_i_n_t_01_4.html#a23eb49aef842e89c0f4403d45df27af9',1,'fbgemm_gpu::VecNT&lt; 16, PrimitiveType::INT &gt;::store(uint8_t *output_ptr, float2 qparams, int num_valid_outputs=16)'],['../structfbgemm__gpu_1_1_vec_n_t_3_0116_00_01_primitive_type_1_1_i_n_t_01_4.html#a483f290add1c81ba850fda8c574f68bb',1,'fbgemm_gpu::VecNT&lt; 16, PrimitiveType::INT &gt;::store(float *output_ptr, float2 qparams, int num_valid_outputs=16)'],['../structfbgemm__gpu_1_1_vec_n_t_3_0116_00_01_primitive_type_1_1_i_n_t_01_4.html#a9b3adeaa52d595467e06b90520c9708a',1,'fbgemm_gpu::VecNT&lt; 16, PrimitiveType::INT &gt;::store(at::Half *output_ptr, float2 qparams, int num_valid_outputs=16)'],['../structfbgemm__gpu_1_1_vec_n_t_3_0116_00_01_primitive_type_1_1_i_n_t_01_4.html#aba368627faa071e57a548a336c7bee6b',1,'fbgemm_gpu::VecNT&lt; 16, PrimitiveType::INT &gt;::store(at::BFloat16 *output_ptr, float2 qparams, int num_valid_outputs=16)'],['../structfbgemm__gpu_1_1_vec4_acc_t.html#ac85ba1113a076bb8a6b6e39ad26bb85d',1,'fbgemm_gpu::Vec4AccT::store(float4 *ptr)'],['../structfbgemm__gpu_1_1_vec4_acc_t.html#a775650f6f2480831282ed0a8746998f6',1,'fbgemm_gpu::Vec4AccT::store(float2 *ptr)'],['../structfbgemm__gpu_1_1_vec4_acc_t.html#ae4768b5f85cb93226f4e8e7705a32206',1,'fbgemm_gpu::Vec4AccT::store(uint8_t *ptr)']]],
  ['store_5f_130',['store_',['../structfbgemm__gpu_1_1_vec4_acc_t.html#aa05890f2dd90061ad3ff516a30e6c196',1,'fbgemm_gpu::Vec4AccT::store_(const float4 *src, float4 *dst)'],['../structfbgemm__gpu_1_1_vec4_acc_t.html#a476bc3df6ed11614b47e7c4b1bb440c6',1,'fbgemm_gpu::Vec4AccT::store_(const float4 *src, float2 *dst)']]],
  ['store_5fqparams_131',['store_qparams',['../structfbgemm__gpu_1_1_weight_row.html#a7e20dc1480b5220df335895b7ac6bdd0',1,'fbgemm_gpu::WeightRow']]],
  ['store_5fqparams_5fto_5frow_132',['store_qparams_to_row',['../namespacefbgemm__gpu.html#a8afc4c2510a6db3d420fc1025d3ac30b',1,'fbgemm_gpu::store_qparams_to_row(emb_t *ptr, float2 qparams)'],['../namespacefbgemm__gpu.html#af4ec15f5d6826c016c46b5d7cae62d72',1,'fbgemm_gpu::store_qparams_to_row(uint8_t *ptr, float2 qparams)']]],
  ['stride_133',['stride',['../classfbgemm__gpu_1_1_tensor_accessor_base.html#a396d81b04ec72f4281d15a02c7840694',1,'fbgemm_gpu::TensorAccessorBase::stride()'],['../classfbgemm__gpu_1_1_generic_packed_tensor_accessor_base.html#a396d81b04ec72f4281d15a02c7840694',1,'fbgemm_gpu::GenericPackedTensorAccessorBase::stride()']]],
  ['strides_134',['strides',['../classfbgemm__gpu_1_1_tensor_accessor_base.html#af446bd0965fd0586067d176a1630a6c1',1,'fbgemm_gpu::TensorAccessorBase']]],
  ['sum_135',['sum',['../structfbgemm__gpu_1_1_vec4_step_t_3_01_s_t_e_p_00_01float_01_4.html#a2b4995ca44cb8977ca258395e80a8687',1,'fbgemm_gpu::Vec4StepT&lt; STEP, float &gt;::sum()'],['../structfbgemm__gpu_1_1_vec4_step_t_3_01_s_t_e_p_00_01at_1_1_half_01_4.html#a2b4995ca44cb8977ca258395e80a8687',1,'fbgemm_gpu::Vec4StepT&lt; STEP, at::Half &gt;::sum()'],['../structfbgemm__gpu_1_1_vec4_step_t_3_01_s_t_e_p_00_01uint8__t_01_4.html#a2b4995ca44cb8977ca258395e80a8687',1,'fbgemm_gpu::Vec4StepT&lt; STEP, uint8_t &gt;::sum()']]],
  ['sum_5freduce_5fto_5fone_5fdevice_136',['sum_reduce_to_one_device',['../namespacefbgemm__gpu.html#aa7f73354e0c76fbc0584c3250dadc98e',1,'fbgemm_gpu']]],
  ['syncwarp_137',['syncwarp',['../namespacefbgemm__gpu.html#ab776b7b9076d17238d502b2746135ace',1,'fbgemm_gpu']]]
];
